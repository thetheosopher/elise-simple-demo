{"version":3,"sources":["webpack://elise/webpack/universalModuleDefinition","webpack://elise/webpack/bootstrap","webpack://elise/./src/core/error-messages.ts","webpack://elise/./src/core/point.ts","webpack://elise/./src/core/size.ts","webpack://elise/./src/elements/element-base.ts","webpack://elise/./src/core/model.ts","webpack://elise/./src/core/utility.ts","webpack://elise/./src/core/common-event.ts","webpack://elise/./src/core/region.ts","webpack://elise/./src/fill/fill-factory.ts","webpack://elise/./src/design/tools/design-tool.ts","webpack://elise/./src/core/color.ts","webpack://elise/./src/elements/rectangle-element.ts","webpack://elise/./src/surface/surface-layer.ts","webpack://elise/./src/surface/pane-transitions/pane-transition.ts","webpack://elise/./src/transitions/transitions.ts","webpack://elise/./src/elements/line-element.ts","webpack://elise/./src/core/point-depth.ts","webpack://elise/./src/elements/sprite-element.ts","webpack://elise/./src/resource/resource-factory.ts","webpack://elise/./src/resource/bitmap-resource.ts","webpack://elise/./src/surface/pane-transitions/pane-transition-direction.ts","webpack://elise/./src/elements/invalid-index-exception.ts","webpack://elise/./src/elements/sprite-frame.ts","webpack://elise/./src/elements/text-element.ts","webpack://elise/./src/core/mouse-event-args.ts","webpack://elise/./src/design/component/component-element.ts","webpack://elise/./src/command/element-command-handler.ts","webpack://elise/./src/fill/linear-gradient-fill.ts","webpack://elise/./src/fill/radial-gradient-fill.ts","webpack://elise/./src/elements/image-element.ts","webpack://elise/./src/elements/model-element.ts","webpack://elise/./src/core/winding-mode.ts","webpack://elise/./src/elements/polyline-element.ts","webpack://elise/./src/design/component/component.ts","webpack://elise/./src/design/component/component-props.ts","webpack://elise/./src/resource/model-resource.ts","webpack://elise/./src/resource/resource.ts","webpack://elise/./src/surface/surface-element.ts","webpack://elise/./src/surface/surface-element-states.ts","webpack://elise/./src/command/element-command.ts","webpack://elise/./src/controller/controller-event.ts","webpack://elise/./src/core/location-args.ts","webpack://elise/./src/core/logging.ts","webpack://elise/./src/fill/gradient-fill-stop.ts","webpack://elise/./src/elements/ellipse-element.ts","webpack://elise/./src/elements/polygon-element.ts","webpack://elise/./src/resource/resource-manager-event.ts","webpack://elise/./src/core/scaling-info.ts","webpack://elise/./src/core/point-event-parameters.ts","webpack://elise/./src/design/component/component-event.ts","webpack://elise/./src/design/component/image-based-component-props.ts","webpack://elise/./src/surface/surface-view-controller.ts","webpack://elise/./src/view/view-controller.ts","webpack://elise/./src/command/command-event-trigger.ts","webpack://elise/./src/command/element-command-handler-registration.ts","webpack://elise/./src/controller/controller-event-args.ts","webpack://elise/./src/core/named-color.ts","webpack://elise/./src/elements/element-factory.ts","webpack://elise/./src/elements/element-creator-registration.ts","webpack://elise/./src/elements/path-element.ts","webpack://elise/./src/elements/sprite-state.ts","webpack://elise/./src/resource/resource-creator-registration.ts","webpack://elise/./src/resource/resource-manager.ts","webpack://elise/./src/resource/resource-loader-state.ts","webpack://elise/./src/resource/resource-state.ts","webpack://elise/./src/core/model-event.ts","webpack://elise/./src/core/mouse-location-args.ts","webpack://elise/./src/core/mouse-position-info.ts","webpack://elise/./src/core/size-args.ts","webpack://elise/./src/core/timer-parameters.ts","webpack://elise/./src/core/view-drag-args.ts","webpack://elise/./src/elements/element-creation-props.ts","webpack://elise/./src/elements/upload-completion-props.ts","webpack://elise/./src/elements/upload-progress-props.ts","webpack://elise/./src/design/component/component-registry.ts","webpack://elise/./src/design/component/upload-component-props.ts","webpack://elise/./src/design/component/progress-rectangle.ts","webpack://elise/./src/elements/element-drag-args.ts","webpack://elise/./src/elements/element-location-args.ts","webpack://elise/./src/elements/element-size-args.ts","webpack://elise/./src/elements/element-size-props.ts","webpack://elise/./src/elements/move-location.ts","webpack://elise/./src/elements/resize-size.ts","webpack://elise/./src/design/design-renderer.ts","webpack://elise/./src/design/grid-type.ts","webpack://elise/./src/design/handle-factory.ts","webpack://elise/./src/design/handle.ts","webpack://elise/./src/fill/fill-info.ts","webpack://elise/./src/surface/pane-transitions/pane-transition-fade.ts","webpack://elise/./src/surface/pane-transitions/pane-transition-none.ts","webpack://elise/./src/surface/pane-transitions/pane-transition-push.ts","webpack://elise/./src/surface/pane-transitions/pane-transition-reveal.ts","webpack://elise/./src/surface/pane-transitions/pane-transition-slide.ts","webpack://elise/./src/surface/pane-transitions/pane-transition-wipe.ts","webpack://elise/./src/surface/surface-button-element.ts","webpack://elise/./src/surface/surface-text-element.ts","webpack://elise/./src/surface/surface-video-layer.ts","webpack://elise/./src/view/view-renderer.ts","webpack://elise/./src/surface/surface-animation-frame.ts","webpack://elise/./src/surface/surface-animation-view-controller.ts","webpack://elise/./src/surface/surface-radio-item-sprite-element.ts","webpack://elise/./src/surface/surface-radio-item-text-element.ts","webpack://elise/./src/surface/surface-radio-strip-item.ts","webpack://elise/./src/surface/surface-radio-strip-selection-args.ts","webpack://elise/./src/surface/surface-radio-strip-view-controller.ts","webpack://elise/./src/core/matrix-2d.ts","webpack://elise/./src/core/stroke-info.ts","webpack://elise/./src/design/component/generic-component-props.ts","webpack://elise/./src/design/component/html-component-props.ts","webpack://elise/./src/design/component/navigate-component-props.ts","webpack://elise/./src/design/tools/ellipse-tool.ts","webpack://elise/./src/design/tools/image-element-tool.ts","webpack://elise/./src/design/tools/line-tool.ts","webpack://elise/./src/design/tools/model-element-tool.ts","webpack://elise/./src/design/tools/pen-tool.ts","webpack://elise/./src/design/tools/polygon-tool.ts","webpack://elise/./src/design/tools/polyline-tool.ts","webpack://elise/./src/design/tools/rectangle-tool.ts","webpack://elise/./src/design/tools/text-tool.ts","webpack://elise/./src/design/design-controller.ts","webpack://elise/./src/design/handle-moved-args.ts","webpack://elise/./src/elements/element-mouse-event-args.ts","webpack://elise/./src/resource/text-resource.ts","webpack://elise/./src/sketcher/sketcher.ts","webpack://elise/./src/surface/surface.ts","webpack://elise/./src/surface/surface-animation-layer.ts","webpack://elise/./src/surface/surface-hidden-layer.ts","webpack://elise/./src/surface/surface-html-layer.ts","webpack://elise/./src/surface/surface-image-layer.ts","webpack://elise/./src/surface/surface-pane.ts","webpack://elise/./src/surface/surface-radio-strip.ts","webpack://elise/./src/index.ts"],"names":[],"mappings":"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","file":"elise-graphics.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"elise\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"elise\"] = factory();\n\telse\n\t\troot[\"elise\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 131);\n","export class ErrorMessages {\r\n    public static BitmapResourceSourceIsUndefined = 'Bitmap resource source is undefined.';\r\n    public static BoundsAreUndefined = 'Bounds are undefined.';\r\n    public static CanvasContextIsNull = 'Canvas context is null.';\r\n    public static CanvasDrawImageError = 'Exception thrown calling canvas context drawImage.';\r\n    public static CanvasIsUndefined = 'Canvas is undefined.';\r\n    public static ComponentTypeNotRegistered = 'Component type is not registered.';\r\n    public static ControllerIsUndefined = 'Controller is undefined.';\r\n    public static ElementAlreadyExists = 'Element already exists in collection.';\r\n    public static ElementUndefined = 'Element is undefined';\r\n    public static ElementIdUndefined = 'Element ID is undefined.';\r\n    public static ErrorCreatingCanvasPattern = 'Error creating canvas pattern.';\r\n    public static HostElementUndefined = 'Host element is undefined.';\r\n    public static ImageUndefined = 'Image is undefined';\r\n    public static InvalidColorString = 'Invalid color string.';\r\n    public static InvalidFrameIndex = 'Invalid frame index.';\r\n    public static InvalidResourceType = 'Invalid resource type.';\r\n    public static InvalidPointIndex = 'Invalid point index: ';\r\n    public static InvalidPointString = 'Point string is invalid.';\r\n    public static InvalidSizeString = 'Invalid size string';\r\n    public static LocationUndefined = 'Location is undefined.';\r\n    public static ModelUndefined = 'Model is undefined.';\r\n    public static ModelBasePathUndefined = 'Model base path is undefined.';\r\n    public static ModelPathUndefined = 'Model path is undefined.';\r\n    public static ModelResourceUndefined = 'Model resource is undefined.';\r\n    public static NoAnimationFramesAreDefined = 'No animation frames are defined.';\r\n    public static NoCommandsAreDefined = 'No commands are defined.';\r\n    public static NoPointsAreDefined = 'No points are defined.';\r\n    public static NormalImageSourceUndefined = 'Normal image source is undefined.';\r\n    public static NotImplemented = 'Method not implemented.';\r\n    public static PaneSurfaceIsUndefined = 'Pane surface is undefined.';\r\n    public static PointsAreInvalid = 'Points are invalid.';\r\n    public static RendererIsUndefined = 'Renderer is undefined.';\r\n    public static ResourceIsInvalid = 'Resource is invalid.';\r\n    public static ResourceKeyIsUndefined = 'Resource key is undefined';\r\n    public static ResourceManagerIsUndefined = 'Resource manager is undefined';\r\n    public static ResourcesFailedToLoad = 'One or more resources failed to load';\r\n    public static SizeUndefined = 'Size is undefined.';\r\n    public static SourceUndefined = 'Source is undefined.';\r\n    public static StartTimeIsUndefined = 'Start time is undefined.';\r\n    public static SurfaceIsAlreadyBound = 'Surface is already bound.';\r\n    public static SurfaceDivIsUndefined = 'Surface div is undefined.';\r\n    public static SurfaceIsUndefined = 'Surface is undefined.';\r\n    public static TargetIsUndefined = 'Target is undefined.';\r\n    public static VideoIsUndefined = 'Video is undefined';\r\n}\r\n","import { ErrorMessages } from './error-messages';\n\n/**\n * Describes a point in 2D space\n */\nexport class Point {\n    public static Origin: Point = new Point(0, 0);\n\n    /**\n     * Point factory function\n     * @param x - X coordinate\n     * @param y - Y coordinate\n     * @returns New point\n     */\n    public static create(x: number, y: number): Point {\n        return new Point(x, y);\n    }\n\n    /**\n     * Parses a point described as a string or clones existing point\n     * @param pointSource - Point string description or point to clone\n     * @returns Parsed or cloned point object\n     */\n    public static parse(pointSource: string | Point): Point {\n        if (typeof pointSource === 'string') {\n            const parts = pointSource.split(',');\n            if (parts.length !== 2) {\n                throw new Error(ErrorMessages.InvalidPointString);\n            }\n            const x = parseFloat(parts[0]);\n            const y = parseFloat(parts[1]);\n            if (isNaN(x) || isNaN(y)) {\n                throw new Error(ErrorMessages.InvalidPointString);\n            }\n            return new Point(x, y);\n        }\n        else {\n            return new Point(pointSource.x, pointSource.y);\n        }\n    }\n\n    /**\n     * Scales a point by specified scaling factors.  Scaling reference can be optionally specified.\n     * @param point - Point to be scaled.\n     * @param scaleX - X scaling factor\n     * @param scaleY - Y scaling factor\n     * @param baseX - Optional x reference point\n     * @param baseY - Optional y reference point\n     * @returns Scaled point\n     */\n    public static scale(point: Point, scaleX: number, scaleY: number, baseX?: number, baseY?: number): Point {\n        if (baseX !== undefined && baseY !== undefined) {\n            return new Point((point.x - baseX) * scaleX + baseX, (point.y - baseY) * scaleY + baseY);\n        }\n        else {\n            return new Point(point.x * scaleX, point.y * scaleY);\n        }\n    }\n\n    /**\n     * Returns a new point from a given point translated by a given offset\n     * @param point - Original point\n     * @param offsetX - X offset\n     * @param offsetY - Y offset\n     * @returns Translated point\n     */\n    public static translate(point: Point, offsetX: number, offsetY: number): Point {\n        return new Point(point.x + offsetX, point.y + offsetY);\n    }\n\n    private _x: number;\n    private _y: number;\n\n    /**\n     * @param x - X Coordinate\n     * @param y - Y Coordinate\n     */\n    constructor(x: number, y: number) {\n        this._x = x;\n        this._y = y;\n        this.clone = this.clone.bind(this);\n        this.equals = this.equals.bind(this);\n        this.toString = this.toString.bind(this);\n    }\n\n    /**\n     * Clones this point into a new instance\n     * @returns Clone of point\n     */\n    public clone(): Point {\n        return new Point(this.x, this.y);\n    }\n\n    /**\n     * Returns x coordinate\n     * @returns X coordinate\n     */\n    get x(): number {\n        return this._x;\n    }\n\n    /**\n     * Sets x coordinate\n     * @param value - X coordinate\n     */\n    set x(value: number) {\n        this._x = value;\n    }\n\n    /**\n     * Returns y coordinate\n     * @returns Y coordinate\n     */\n    get y(): number {\n        return this._y;\n    }\n\n    /**\n     * Sets y coordinate\n     * @param value - Y coordinate\n     */\n    set y(value: number) {\n        this._y = value;\n    }\n\n    /**\n     * Compares this point with another for equality\n     * @param that - Point to compare with this\n     * @returns True if point given matches this\n     */\n    public equals(that: Point): boolean {\n        return that !== null && this.x === that.x && this.y === that.y;\n    }\n\n    /**\n     * Describes point as a string\n     * @returns Description of point\n     */\n    public toString(): string {\n        return this.x.toFixed(0) + ',' + this.y.toFixed(0);\n    }\n}\n","import { ErrorMessages } from './error-messages';\n\n/**\n * Describes the size of a 2D rectangular object or region\n */\nexport class Size {\n    /**\n     * Empty size\n     */\n    public static Empty: Size = new Size(0, 0);\n\n    /**\n     * Size factory function\n     * @param width - Width for new size\n     * @param height - Height for new size\n     */\n    public static create(width: number, height: number): Size {\n        return new Size(width, height);\n    }\n\n    /**\n     * Parses a size described as a string or clones existing size\n     * @param sizeSource - Size string description or size to clone\n     * @returns Parsed or cloned size\n     */\n    public static parse(sizeSource: string | Size): Size {\n        if (typeof sizeSource === 'string') {\n            const parts = sizeSource.split('x');\n            if (parts.length !== 2) {\n                throw new Error(ErrorMessages.InvalidSizeString);\n            }\n            const width = parseFloat(parts[0]);\n            const height = parseFloat(parts[1]);\n            if (isNaN(width) || isNaN(height)) {\n                throw new Error(ErrorMessages.InvalidSizeString);\n            }\n            return new Size(width, height);\n        }\n        else {\n            return new Size(sizeSource.width, sizeSource.height);\n        }\n    }\n\n    /**\n     * Returns a new scaled size\n     * @param s - Size to scale\n     * @param scaleX - Horizontal scale factor\n     * @param scaleY - Vertical scale factor\n     * @returns Scaled size\n     */\n    public static scale(s: Size, scaleX: number, scaleY: number): Size {\n        return new Size(s.width * scaleX, s.height * scaleY);\n    }\n\n    private _width: number;\n    private _height: number;\n\n    /**\n     * @param width - Width\n     * @param width - Height\n     */\n    constructor(width: number, height: number) {\n        this._width = width;\n        this._height = height;\n\n        this.clone = this.clone.bind(this);\n        this.equals = this.equals.bind(this);\n        this.toString = this.toString.bind(this);\n    }\n\n    /**\n     * Clones this size to a new instance\n     * @returns Clone of size\n     */\n    public clone(): Size {\n        return new Size(this._width, this._height);\n    }\n\n    /**\n     * Width\n     * @returns Width\n     */\n    get width(): number {\n        return this._width;\n    }\n\n    /**\n     * Height\n     * @returns Height\n     */\n    get height(): number {\n        return this._height;\n    }\n\n    /**\n     * Compares this size with another for equality\n     * @param that - Size to compare with this\n     * @returns True if that Size matches this\n     */\n    public equals(that: Size): boolean {\n        return this.width === that.width && this.height === that.height;\n    }\n\n    /**\n     * Describes size as a string\n     * @returns Description of size\n     */\n    public toString(): string {\n        return this.width + 'x' + this.height;\n    }\n}\n","import { Color } from '../core/color';\nimport { ErrorMessages } from '../core/error-messages';\nimport { Model } from '../core/model';\nimport { Point } from '../core/point';\nimport { IPointContainer } from '../core/point-container';\nimport { PointDepth } from '../core/point-depth';\nimport { Region } from '../core/region';\nimport { Size } from '../core/size';\nimport { LinearGradientFill } from '../fill/linear-gradient-fill';\nimport { RadialGradientFill } from '../fill/radial-gradient-fill';\nimport { ResourceManager } from '../resource/resource-manager';\n\n/**\n * Base class for renderable model elements\n */\nexport class ElementBase implements IPointContainer {\n    /**\n     * Element type tag\n     */\n    public type: string;\n\n    /**\n     * Element ID\n     */\n    public id?: string;\n\n    /**\n     * True if individual points can be edited\n     */\n    public editPoints: boolean = false;\n\n    /**\n     * Should element disallow moving/sizing\n     */\n    public locked: boolean = false;\n\n    /**\n     * Should aspect ratio be maintained during resizing\n     */\n    public aspectLocked: boolean = false;\n\n    /**\n     * Fill property\n     */\n    public fill?: string | LinearGradientFill | RadialGradientFill;\n\n    /**\n     * Fill scaling factor\n     */\n    public fillScale: number = 1;\n\n    /**\n     * Fill X Offset\n     */\n    public fillOffsetX: number = 0;\n\n    /**\n     * Fill Y Offset\n     */\n    public fillOffsetY: number = 0;\n\n    /**\n     * Stroke property\n     */\n    public stroke?: string;\n\n    /**\n     * Transform property\n     */\n    public transform?: string;\n\n    /**\n     * Should element support interaction\n     */\n    public interactive: boolean = false;\n\n    /**\n     * Mouse down command handler tag\n     */\n    public mouseDown?: string;\n\n    /**\n     * Mouse up command handler tag\n     */\n    public mouseUp?: string;\n\n    /**\n     * Mouse enter command handler tag\n     */\n    public mouseEnter?: string;\n\n    /**\n     * Mouse leave command handler tag\n     */\n    public mouseLeave?: string;\n\n    /**\n     * Click command handler tag\n     */\n    public click?: string;\n\n    /**\n     * Timer command handler tag\n     */\n    public timer?: string;\n\n    /**\n     * Owner model\n     */\n    public model?: Model;\n\n    /**\n     * Parent element\n     */\n    public parent?: ElementBase;\n\n    /**\n     * Element fill stack\n     */\n    public fillStack?: Array<string | LinearGradientFill | RadialGradientFill> = [];\n\n    /**\n     * Element stroke stack\n     */\n    public strokeStack?: string[];\n\n    /**\n     * Associated object\n     */\n    public tag: any;\n\n    /**\n     * Size\n     */\n    protected _size?: Size;\n\n    /**\n     * Location\n     */\n    protected _location?: Point;\n\n    constructor(type: string) {\n        this.type = type;\n\n        this.addTo = this.addTo.bind(this);\n        this.canEditPoints = this.canEditPoints.bind(this);\n        this.canFill = this.canFill.bind(this);\n        this.canMove = this.canMove.bind(this);\n        this.canMovePoint = this.canMovePoint.bind(this);\n        this.canNudge = this.canNudge.bind(this);\n        this.canResize = this.canResize.bind(this);\n        this.canStroke = this.canStroke.bind(this);\n        this.clearBounds = this.clearBounds.bind(this);\n        this.clone = this.clone.bind(this);\n        this.cloneTo = this.cloneTo.bind(this);\n        this.describe = this.describe.bind(this);\n        this.draw = this.draw.bind(this);\n        this.getBounds = this.getBounds.bind(this);\n        this.getLocation = this.getLocation.bind(this);\n        this.getPointAt = this.getPointAt.bind(this);\n        this.getResourceKeys = this.getResourceKeys.bind(this);\n        this.getSize = this.getSize.bind(this);\n        this.hitTest = this.hitTest.bind(this);\n        this.nudgeSize = this.nudgeSize.bind(this);\n        this.parse = this.parse.bind(this);\n        this.pointCount = this.pointCount.bind(this);\n        this.registerResources = this.registerResources.bind(this);\n        this.scale = this.scale.bind(this);\n        this.serialize = this.serialize.bind(this);\n        this.setFill = this.setFill.bind(this);\n        this.setFillOffsetX = this.setFillOffsetX.bind(this);\n        this.setFillOffsetY = this.setFillOffsetY.bind(this);\n        this.setFillScale = this.setFillScale.bind(this);\n        this.setInteractive = this.setInteractive.bind(this);\n        this.setLocation = this.setLocation.bind(this);\n        this.setPointAt = this.setPointAt.bind(this);\n        this.setSize = this.setSize.bind(this);\n        this.setStroke = this.setStroke.bind(this);\n        this.setTransform = this.setTransform.bind(this);\n        this.toString = this.toString.bind(this);\n        this.translate = this.translate.bind(this);\n    }\n\n    /**\n     * Size get accessor as string\n     * @returns Size as string\n     */\n    get size(): string | undefined {\n        if (!this._size) {\n            return undefined;\n        }\n        else {\n            return this._size.toString();\n        }\n    }\n\n    /**\n     * Size set accessor as string\n     * @param sizeString - Size as string\n     */\n    set size(sizeString: string | undefined) {\n        if (!sizeString) {\n            this._size = undefined;\n        }\n        else {\n            this._size = Size.parse(sizeString);\n        }\n    }\n\n    /**\n     * Location set accessor as string\n     * @returns Location as string\n     */\n    get location(): string | undefined {\n        if (!this._location) {\n            return undefined;\n        }\n        else {\n            return this._location.toString();\n        }\n    }\n    /**\n     * Location set accessor as string\n     * @param locationString - Location as string\n     */\n    set location(locationString: string | undefined) {\n        if (!locationString) {\n            this._location = undefined;\n        }\n        else {\n            this._location = Point.parse(locationString);\n        }\n    }\n\n    /**\n     * Copies properies of another element instance to this instance\n     * @param Source element\n     */\n    public parse(o: any): void {\n        if (o.type) {\n            this.type = String(o.type);\n        }\n        if (o.id) {\n            this.id = String(o.id);\n        }\n        if (o.size) {\n            this._size = Size.parse(o.size);\n        }\n        if (o.location) {\n            this._location = Point.parse(o.location);\n        }\n        if (o.locked) {\n            this.locked = o.locked;\n        }\n        else {\n            this.locked = false;\n        }\n        if (o.aspectLocked) {\n            this.aspectLocked = o.aspectLocked;\n        }\n        else {\n            this.aspectLocked = false;\n        }\n        if (o.fill) {\n            if (typeof o.fill === 'string') {\n                this.fill = o.fill;\n            }\n            else if (o.fill.type === 'linearGradient') {\n                const lgr1 = o.fill as LinearGradientFill;\n                const lgr2 = new LinearGradientFill(lgr1.start, lgr1.end);\n                for (const stop of lgr1.stops) {\n                    lgr2.addFillStop(stop.color, stop.offset);\n                }\n                this.fill = lgr2;\n            }\n            else if (o.fill.type === 'radialGradient') {\n                const rgr1 = o.fill as RadialGradientFill;\n                const rgr2 = new RadialGradientFill(rgr1.center, rgr1.focus, rgr1.radiusX, rgr1.radiusY);\n                for (const stop of rgr1.stops) {\n                    rgr2.addFillStop(stop.color, stop.offset);\n                }\n                this.fill = rgr2;\n            }\n            else {\n                this.fill = o.fill;\n            }\n        }\n        if (o.fillScale) {\n            this.fillScale = o.fillScale;\n        }\n        if (o.fillOffsetX) {\n            this.fillOffsetX = o.fillOffsetX;\n        }\n        if (o.fillOffsetY) {\n            this.fillOffsetY = o.fillOffsetY;\n        }\n        if (o.stroke) {\n            this.stroke = o.stroke;\n        }\n        if (o.transform) {\n            this.transform = o.transform;\n        }\n        if (o.mouseDown) {\n            this.mouseDown = o.mouseDown;\n            this.interactive = true;\n        }\n        if (o.mouseUp) {\n            this.mouseUp = o.mouseUp;\n            this.interactive = true;\n        }\n        if (o.mouseEnter) {\n            this.mouseEnter = o.mouseEnter;\n            this.interactive = true;\n        }\n        if (o.mouseLeave) {\n            this.mouseLeave = o.mouseLeave;\n            this.interactive = true;\n        }\n        if (o.click) {\n            this.click = o.click;\n            this.interactive = true;\n        }\n    }\n\n    /**\n     * Serializes persistent properties to new object instance\n     * @returns Serialized element\n     */\n    public serialize(): any {\n        const o: any = {};\n        o.type = this.type;\n        if (this.id) {\n            o.id = String(this.id);\n        }\n        if (this.size) {\n            o.size = this.size.toString();\n        }\n        if (this.location) {\n            o.location = this.location.toString();\n        }\n        if (this.locked) {\n            o.locked = this.locked;\n        }\n        if (this.aspectLocked) {\n            o.aspectLocked = this.aspectLocked;\n        }\n        if (this.fill) {\n            o.fill = this.fill;\n        }\n        if (this.fillScale && this.fillScale !== 1) {\n            o.fillScale = this.fillScale;\n        }\n        if (this.fillOffsetX) {\n            o.fillOffsetX = this.fillOffsetX;\n        }\n        if (this.fillOffsetY) {\n            o.fillOffsetY = this.fillOffsetY;\n        }\n        if (this.stroke) {\n            o.stroke = this.stroke;\n        }\n        if (this.transform) {\n            o.transform = this.transform;\n        }\n        if (this.mouseDown) {\n            o.mouseDown = this.mouseDown;\n        }\n        if (this.mouseUp) {\n            o.mouseUp = this.mouseUp;\n        }\n        if (this.mouseEnter) {\n            o.mouseEnter = this.mouseEnter;\n        }\n        if (this.mouseLeave) {\n            o.mouseLeave = this.mouseLeave;\n        }\n        if (this.click) {\n            o.click = this.click;\n        }\n        return o;\n    }\n\n    /**\n     * Clones this element to a new instance\n     * @returns Cloned element instance\n     */\n    public clone() {\n        const e: ElementBase = new ElementBase(this.type);\n        this.cloneTo(e);\n        return e;\n    }\n\n    /**\n     * Copies properties of this instance to another instance\n     * @param e - Target element instance\n     */\n    public cloneTo(e: any): void {\n        if (this.type) {\n            e.type = this.type;\n        }\n        if (this.id) {\n            e.id = this.id;\n        }\n        if (this.size) {\n            e.size = this.size.toString();\n        }\n        if (this.location) {\n            e.location = this.location.toString();\n        }\n        if (this.locked) {\n            e.locked = this.locked;\n        }\n        if (this.aspectLocked) {\n            e.aspectLocked = this.aspectLocked;\n        }\n        if (this.fill) {\n            e.fill = this.fill;\n        }\n        if (this.fillScale && this.fillScale !== 1) {\n            e.fillScale = this.fillScale;\n        }\n        if (this.fillOffsetX) {\n            e.fillOffsetX = this.fillOffsetX;\n        }\n        if (this.fillOffsetY) {\n            e.fillOffsetY = this.fillOffsetY;\n        }\n        if (this.stroke) {\n            e.stroke = this.stroke;\n        }\n        if (this.transform) {\n            e.transform = this.transform;\n        }\n        if (this.mouseDown) {\n            e.mouseDown = this.mouseDown;\n        }\n        if (this.mouseUp) {\n            e.mouseUp = this.mouseUp;\n        }\n        if (this.mouseEnter) {\n            e.mouseEnter = this.mouseEnter;\n        }\n        if (this.mouseLeave) {\n            e.mouseLeave = this.mouseLeave;\n        }\n        if (this.click) {\n            e.click = this.click;\n        }\n    }\n\n    /**\n     * Returns string description of element\n     * @returns Element description\n     */\n    public toString(): string {\n        let description = this.type;\n        if (this._location) {\n            description += ` - (${this._location.x},${this._location.y})`;\n        }\n        if (this._size) {\n            description += ` [${this._size.width}x${this._size.height}]`;\n        }\n        return description;\n    }\n\n    /**\n     * Returns detailed string description\n     * @returns Detailed description\n     */\n    public describe(): string {\n        let desc = this.toString();\n        if (this.stroke) {\n            desc = this.stroke.toString() + ' stroked ' + desc;\n        }\n        if (this.fill) {\n            desc = this.fill.toString() + ' filled ' + desc;\n        }\n        return desc;\n    }\n\n    /**\n     * Can element be stroked\n     * @returns Can stroke\n     */\n    public canStroke(): boolean {\n        return false;\n    }\n\n    /**\n     * Can element be filled\n     * @returns Can fill\n     */\n    public canFill(): boolean {\n        return false;\n    }\n\n    /**\n     * Can element be moved\n     * @returns Can move\n     */\n    public canMove(): boolean {\n        return true;\n    }\n\n    /**\n     * Can element be resized\n     * @returns Can resize\n     */\n    public canResize(): boolean {\n        return true;\n    }\n\n    /**\n     * Can element be nudged with keyboard commands\n     * @returns Can nudge\n     */\n    public canNudge(): boolean {\n        return true;\n    }\n\n    /**\n     * Can individual element points be moved\n     * @returns Can move point\n     */\n    public canMovePoint(): boolean {\n        return false;\n    }\n\n    /**\n     * Can element points be edited\n     * @returns Can edit points\n     */\n    public canEditPoints(): boolean {\n        return false;\n    }\n\n    /**\n     * Register any required resources with the provided resource manager\n     * @param rm - Resource manager\n     */\n    public registerResources(rm: ResourceManager): void {\n        let key: string;\n\n        // If an image or model fill, then register referenced resource\n        if (this.fill && typeof this.fill === 'string') {\n            const fillString: string = this.fill as string;\n            if (\n                fillString.toLowerCase().substring(0, 6) === 'image(' ||\n                fillString.toLowerCase().substring(0, 6) === 'model('\n            ) {\n                key = fillString.substring(6, fillString.length - 1);\n                if (key.indexOf(';') !== -1) {\n                    const parts = key.split(';');\n                    key = parts[1];\n                }\n                rm.register(key);\n            }\n        }\n    }\n\n    /**\n     * Returns list of keys referenced by element\n     */\n    public getResourceKeys() {\n        const keys = [];\n        let key: string;\n\n        // If an image or model fill, then register referenced resource\n        if (this.fill && typeof this.fill === 'string') {\n            const fillString: string = this.fill as string;\n            if (\n                fillString.toLowerCase().substring(0, 6) === 'image(' ||\n                fillString.toLowerCase().substring(0, 6) === 'model('\n            ) {\n                key = fillString.substring(6, fillString.length - 1);\n                if (key.indexOf(';') !== -1) {\n                    const parts = key.split(';');\n                    key = parts[1];\n                }\n                keys.push(key);\n            }\n        }\n        return keys;\n    }\n\n    /**\n     * Render the element to the HTML5 rendering context provided\n     * @param c - Rendering context\n     */\n    public draw(c: CanvasRenderingContext2D) {\n        return;\n    }\n\n    /**\n     * Determines if given x/y coordinate is contained within element\n     * @param Rendering context\n     * @param tx - X coordinate\n     * @param ty - Y coordinate\n     * @returns True if coordinate is contained within element\n     */\n    public hitTest(c: CanvasRenderingContext2D, tx: number, ty: number): boolean {\n        if (this._size === undefined) {\n            throw new Error(ErrorMessages.SizeUndefined);\n        }\n        if (this._location === undefined) {\n            throw new Error(ErrorMessages.LocationUndefined);\n        }\n        if (this.model === undefined) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        const model = this.model;\n        const x = this._location.x;\n        const y = this._location.y;\n        const w = this._size.width;\n        const h = this._size.height;\n        c.save();\n        if (this.transform) {\n            model.setRenderTransform(c, this.transform, this._location);\n        }\n        c.beginPath();\n        c.rect(x, y, w, h);\n        const hit = c.isPointInPath(tx, ty);\n        c.closePath();\n        c.restore();\n        return hit;\n    }\n\n    /**\n     * Resizes element by a given width and height amount\n     * @param widthDelta - Width adjustment\n     * @param heightDelta Height adjustment\n     * @returns Resized element\n     */\n    public nudgeSize(widthDelta: number, heightDelta: number) {\n        if (this._size === undefined) {\n            throw new Error(ErrorMessages.SizeUndefined);\n        }\n        let newWidth = this._size.width + widthDelta;\n        let newHeight = this._size.height + heightDelta;\n        if (newWidth < 0) {\n            newWidth = 0;\n        }\n        if (newHeight < 0) {\n            newHeight = 0;\n        }\n        this._size = new Size(newWidth, newHeight);\n        return this;\n    }\n\n    /**\n     * Moves element by a given horizontal and vertical offset\n     * @param offsetX - Horizontal offset\n     * @param offsetY - Vertical offset\n     * @returns Relocated element\n     */\n    public translate(offsetX: number, offsetY: number) {\n        if (this._location === undefined) {\n            throw new Error(ErrorMessages.LocationUndefined);\n        }\n        this._location = new Point(this._location.x + offsetX, this._location.y + offsetY);\n        return this;\n    }\n\n    /**\n     * Scales element by a given horizontal and vertical scaling factor\n     * @param scaleX - Horizontal scaling factor\n     * @param scaleY - Vertical scaling factor\n     * @returns Scaled element\n     */\n    public scale(scaleX: number, scaleY: number) {\n        if (this._size === undefined) {\n            throw new Error(ErrorMessages.SizeUndefined);\n        }\n        if (this._location === undefined) {\n            throw new Error(ErrorMessages.LocationUndefined);\n        }\n        this._size = Size.scale(this._size, scaleX, scaleY);\n        this._location = Point.scale(this._location, scaleY, scaleY);\n        return this;\n    }\n\n    /**\n     * Element bounding region. Returns rectangular region that completely encloses the element\n     * @returns Rectangular element bounding region\n     */\n    public getBounds(): Region | undefined {\n        if (this._size === undefined) {\n            throw new Error(ErrorMessages.SizeUndefined);\n        }\n        let location = this._location;\n        if (location === undefined) {\n            location = new Point(0, 0);\n        }\n        return new Region(location.x, location.y, this._size.width, this._size.height);\n    }\n\n    /**\n     * Clears the interal bounds of the associated complex element, forcing\n     * the bounds to be recomputed on the next request.\n     */\n    public clearBounds() {\n        this._location = undefined;\n        this._size = undefined;\n    }\n\n    /**\n     * Location get accessor\n     */\n    public getLocation(): Point | undefined {\n        if (this._location === undefined) {\n            const bounds = this.getBounds();\n            if (bounds) {\n                this._location = bounds.location;\n            }\n        }\n        return this._location;\n    }\n\n    /**\n     * Location set accessor.  Sets location value as string or Point\n     * @param pointSource - Location as Point object or string\n     * @returns This element\n     */\n    public setLocation(pointSource: string | Point) {\n        this._location = Point.parse(pointSource);\n        return this;\n    }\n\n    /**\n     * Size get accessor\n     * @returns Size of element bounding region\n     */\n    public getSize(): Size | undefined {\n        if (this._size === undefined) {\n            const bounds = this.getBounds();\n            if (bounds) {\n                this._size = bounds.size;\n            }\n        }\n        return this._size;\n    }\n\n    /**\n     * Size set accessor. Sets size of element as string or Size object\n     * @param sizeSource - Size as Size object or string\n     * @returns This element\n     */\n    public setSize(sizeSource: string | Size) {\n        this._size = Size.parse(sizeSource);\n        return this;\n    }\n\n    /**\n     * Sets stroke used to draw element outline\n     * @param stroke - Stroke definition\n     * @returns This element\n     */\n    public setStroke(stroke: string | Color | undefined) {\n        if (stroke instanceof Color) {\n            this.stroke = stroke.toString();\n        }\n        else {\n            this.stroke = stroke;\n        }\n        return this;\n    }\n\n    /**\n     * Sets fill used to fill element interior\n     * @param fill - Fill definition\n     * @returns This element\n     */\n    public setFill(fill: string | Color | LinearGradientFill | RadialGradientFill | undefined) {\n        if (fill instanceof Color) {\n            this.fill = fill.toString();\n        }\n        else {\n            this.fill = fill;\n        }\n        return this;\n    }\n\n    /**\n     * Sets fill scale used to alter fill rendering\n     * @param scale - Fill scale - Default 1\n     * @returns This element\n     */\n    public setFillScale(scale: number) {\n        this.fillScale = scale;\n        return this;\n    }\n\n    /**\n     * Sets fill X offset used to alter fill rendering\n     * @param offset - Fill X Offset\n     * @returns This element\n     */\n    public setFillOffsetX(offset: number) {\n        this.fillOffsetX = offset;\n        return this;\n    }\n\n    /**\n     * Sets fill Y offset used to alter fill rendering\n     * @param offset - Fill Y Offset\n     * @returns This element\n     */\n    public setFillOffsetY(offset: number) {\n        this.fillOffsetY = offset;\n        return this;\n    }\n\n    /**\n     * Sets user interface interactivity for element\n     * @param interactive - Interactive flag value\n     * @returns This element\n     */\n    public setInteractive(interactive: boolean) {\n        this.interactive = interactive;\n        return this;\n    }\n\n    /**\n     * Sets affine transform used for rendering element\n     * @param transform - Transform definition\n     * @returns This element\n     */\n    public setTransform(transform: string) {\n        this.transform = transform;\n        return this;\n    }\n\n    /**\n     * Retrieves number of points in element\n     * @returns Number of points\n     */\n    public pointCount(): number {\n        throw new Error(ErrorMessages.NotImplemented);\n    }\n\n    /**\n     * Gets value of point at given index\n     * @param index - Point index\n     * @param depth - Point depth (simple or complex)\n     * @returns Point at index\n     */\n    public getPointAt(index: number, depth?: PointDepth): Point {\n        throw new Error(ErrorMessages.NotImplemented);\n    }\n\n    /**\n     * Sets value of point at given index\n     * @param index - Point index\n     * @param value - New point value\n     * @param depth - Point depth (simple or complex)\n     */\n    public setPointAt(index: number, value: Point, depth: PointDepth) {\n        throw new Error(ErrorMessages.NotImplemented);\n    }\n\n    /**\n     * Adds element to the designated parent model.\n     * @param model - Parent model\n     * @returns This element\n     */\n    public addTo(model: Model) {\n        model.add(this);\n        return this;\n    }\n}\n","import { IController } from '../controller/controller';\nimport { ElementBase } from '../elements/element-base';\nimport { ElementFactory } from '../elements/element-factory';\nimport { FillFactory } from '../fill/fill-factory';\nimport { Resource } from '../resource/resource';\nimport { ResourceFactory } from '../resource/resource-factory';\nimport { ResourceManager } from '../resource/resource-manager';\nimport { ResourceState } from '../resource/resource-state';\nimport { Color } from './color';\nimport { ErrorMessages } from './error-messages';\nimport { ModelEvent } from './model-event';\nimport { Point } from './point';\nimport { ScalingInfo } from './scaling-info';\nimport { Size } from './size';\nimport { Utility } from './utility';\n\n/**\n * Container for rendered drawing elements and their referenced resource collection\n */\nexport class Model extends ElementBase {\n    /**\n     * Parses JSON string into model object\n     * @param json - JSON source string\n     */\n    public static parse(json: string) {\n        const o = JSON.parse(json);\n        const model = new Model();\n        model.parse(o);\n        if (o.resources) {\n            o.resources.forEach((value: Resource) => {\n                const res = ResourceFactory.create(value.type);\n                if (res) {\n                    res.parse(value);\n                    model.resourceManager.add(res);\n                }\n            });\n        }\n        if (o.elements) {\n            o.elements.forEach((value: Resource) => {\n                const element = ElementFactory.create(value.type);\n                if (element) {\n                    element.parse(value);\n                    model.add(element);\n                }\n            });\n        }\n        return model;\n    }\n\n    /**\n     * Loads serialized model from specified path\n     * @param basePath - Base path for model URI and resource references\n     * @param uri - Base path relative path to serialized model\n     * @param callback - Retrieval callback accepting deserialized Model instance\n     */\n    public static load(basePath: string, uri: string, callback: (model?: Model) => void) {\n        let modelPath: string;\n        let modelFilePath: string;\n        if (Utility.endsWith(uri, '/')) {\n            modelPath = basePath + uri;\n            modelFilePath = modelPath + 'model.json';\n        }\n        else {\n            modelPath = basePath + uri.substring(0, uri.lastIndexOf('/') + 1);\n            modelFilePath = basePath + uri;\n        }\n        Utility.getRemoteText(modelFilePath, json => {\n            if (json) {\n                const model = Model.parse(json);\n                model.setBasePath(basePath);\n                model.setModelPath(modelPath);\n                if (callback) {\n                    callback(model);\n                }\n            }\n            else {\n                callback(undefined);\n            }\n        });\n    }\n\n    /**\n     * Model factory function\n     * @param width - Model width\n     * @param height - Model height\n     * @returns New model instance\n     */\n    public static create(width: number, height: number): Model {\n        const model = new Model();\n        model._size = new Size(width, height);\n        return model;\n    }\n\n    /**\n     * Event fired when controller is attached to model\n     */\n    public controllerAttached: ModelEvent<IController> = new ModelEvent<IController>();\n\n    /**\n     * Event fired when controller is detached from model\n     */\n    public controllerDetached: ModelEvent<IController> = new ModelEvent<IController>();\n\n    /**\n     * Base path for relative resource reference\n     */\n    public basePath: string;\n\n    /**\n     * Model source path\n     */\n    public modelPath?: string;\n\n    /**\n     * Ordered array of element to be rendered. Elements are rendered using the 'painters model' with\n     * elements rendered in the order they exist in the element array.\n     */\n    public elements: ElementBase[] = [];\n\n    /**\n     * Collection of shared resources referenced by contained elements\n     */\n    public resources: Resource[] = [];\n\n    /**\n     * Manager for referenced resource resolution\n     */\n    public resourceManager: ResourceManager;\n\n    /**\n     * Controller providing rendering and user interaction services\n     */\n    public controller?: IController;\n\n    /**\n     * Hosting HTML canvas element into which model is rendered\n     */\n    public canvas?: HTMLCanvasElement;\n\n    /**\n     * Canvas 2D rendering context into which model is rendered\n     */\n    public context?: CanvasRenderingContext2D;\n\n    /**\n     * Time of last frame render\n     */\n    public lastTime: number;\n\n    /**\n     * Enables/disables display of rendering frame rate\n     */\n    public displayFPS: boolean;\n\n    constructor() {\n        super('model');\n\n        this.lastTime = 0;\n        this.basePath = '/';\n        this.displayFPS = false;\n\n        this.resourceManager = new ResourceManager(this);\n\n        // Enable for debugging\n        // this.resourceManager.listenerEvent.add(this.listen);\n\n        this.listen = this.listen.bind(this);\n        this.setBasePath = this.setBasePath.bind(this);\n        this.setModelPath = this.setModelPath.bind(this);\n        this.add = this.add.bind(this);\n        this.remove = this.remove.bind(this);\n        this.createCanvas = this.createCanvas.bind(this);\n        this.assignCanvas = this.assignCanvas.bind(this);\n        this.prepareResources = this.prepareResources.bind(this);\n        this.setElementStroke = this.setElementStroke.bind(this);\n        this.setRenderTransform = this.setRenderTransform.bind(this);\n        this.getFillScale = this.getFillScale.bind(this);\n        this.firstActiveElementAt = this.firstActiveElementAt.bind(this);\n        this.elementsAt = this.elementsAt.bind(this);\n        this.elementWithId = this.elementWithId.bind(this);\n        this.renderToContext = this.renderToContext.bind(this);\n        this.strokeForElement = this.strokeForElement.bind(this);\n        this.calculateFPS = this.calculateFPS.bind(this);\n        this.formattedJSON = this.formattedJSON.bind(this);\n        this.rawJSON = this.rawJSON.bind(this);\n    }\n\n    /**\n     * Debug resource listening function (optionally added as listener to resource manager)\n     *\n     * Example\n     *  ```\n     *  model.resourceManager.listenerEvent.add(model.listen);\n     *  ```\n     * @param rm - Resource manager\n     * @param state - Resource state\n     */\n    public listen(rm: ResourceManager, state: ResourceState): void {\n        console.log(state.numberLoaded + '/' + state.totalResources + ', ' + state.status + '(' + state.code + ')');\n    }\n\n    /**\n     * Sets base path for relative pathed resources\n     * @param basePath - Resources base path\n     */\n    public setBasePath(basePath: string): void {\n        this.basePath = basePath;\n    }\n\n    /**\n     * Sets model path and optionally resource folder path\n     * @param path - Model path\n     * @param resourceFolder - Resource folder local path\n     */\n    public setModelPath(path: string, resourceFolder?: string) {\n        this.modelPath = path;\n        if (!Utility.endsWith(this.modelPath, '/')) {\n            this.modelPath = this.modelPath + '/';\n        }\n        if (arguments.length !== 1) {\n            this.resourceManager.localResourcePath = this.modelPath + 'r/';\n        }\n        else {\n            this.resourceManager.localResourcePath = this.modelPath;\n        }\n    }\n\n    /**\n     * Adds an element to the end of the ordered elements array\n     * @param el - Element to add\n     * @returns New element index\n     */\n    public add(el: ElementBase): number {\n        if (this.elements.indexOf(el) !== -1) {\n            throw new Error(ErrorMessages.ElementAlreadyExists);\n        }\n        el.model = this;\n        this.elements.push(el);\n        return this.elements.length - 1;\n    }\n\n    /**\n     * Adds an element to the beginning of the ordered elements array\n     * @param el - Element to add\n     * @returns New element index\n     */\n    public addBottom(el: ElementBase): number {\n        if (this.elements.indexOf(el) !== -1) {\n            throw new Error(ErrorMessages.ElementAlreadyExists);\n        }\n        el.model = this;\n        this.elements.unshift(el);\n        return 0;\n    }\n\n    /**\n     * Removes an element from the elements array\n     * @param el - Element to remove\n     * @returns Index of removed element or -1 if not found\n     */\n    public remove(el: ElementBase): number {\n        const index = this.elements.indexOf(el);\n        if (index !== -1) {\n            el.model = undefined;\n            this.elements.splice(index, 1);\n        }\n        return index;\n    }\n\n    /**\n     * Creates canvas for rendering at specified scale\n     * @param scale - Rendering scale factor. Default is 1.\n     * @returns New canvas element\n     */\n    public createCanvas(scale?: number): HTMLCanvasElement {\n        const canvas = document.createElement('canvas');\n        let s = 1;\n        if (scale !== undefined && scale > 0) {\n            s = scale;\n        }\n        if (this._size) {\n            canvas.width = this._size.width * s;\n            canvas.height = this._size.height * s;\n        }\n        this.canvas = canvas;\n        return canvas;\n    }\n\n    /**\n     * Assigns an existing canvas, resizing if necessary\n     * @param canvas - Existing canvas element\n     * @param scale - Rendering scale. Default is 1.\n     */\n    public assignCanvas(canvas: HTMLCanvasElement, scale?: number) {\n        this.canvas = canvas;\n        let s = 1;\n        if (scale && scale > 0) {\n            s = scale;\n        }\n        if (this._size) {\n            this.canvas.width = this._size.width * s;\n            this.canvas.height = this._size.height * s;\n        }\n    }\n\n    /**\n     * Gets reference counts for resource keys\n     * @param localeId - Desired locale ID (e.g. en-US) or null for any locale\n     */\n    public getResourceKeyReferenceCounts(localeId: string) {\n        const keys: { [index: string]: any } = {};\n\n        const rm = this.resourceManager;\n        const model = this;\n\n        // Set locale\n        rm.currentLocaleId = localeId;\n\n        // Register resources for any model level fills\n        if (model.fill) {\n            if (typeof model.fill === 'string') {\n                const modelFill = model.fill as string;\n                if (modelFill.toLowerCase().substring(0, 6) === 'image(') {\n                    let key = modelFill.substring(6, modelFill.length - 1);\n                    if (key.indexOf(';') !== -1) {\n                        const parts = key.split(';');\n                        key = parts[1];\n                    }\n                    if (!keys[key]) {\n                        keys[key] = 1;\n                    }\n                    else {\n                        keys[key] += 1;\n                    }\n                }\n                else if (modelFill.toLowerCase().substring(0, 6) === 'model(') {\n                    let key = modelFill.substring(6, modelFill.length - 1);\n                    if (key.indexOf(';') !== -1) {\n                        const parts = key.split(';');\n                        key = parts[1];\n                    }\n                    if (!keys[key]) {\n                        keys[key] = 1;\n                    }\n                    else {\n                        keys[key] += 1;\n                    }\n                }\n            }\n        }\n\n        // Register resources from all elements\n        const ml = model.elements.length;\n        for (let i = 0; i < ml; i++) {\n            const element = model.elements[i];\n            if (element.getResourceKeys) {\n                const elementKeys = element.getResourceKeys();\n                for (const elementKey of elementKeys) {\n                    if (!keys[elementKey]) {\n                        keys[elementKey] = 1;\n                    }\n                    else {\n                        keys[elementKey] += 1;\n                    }\n                }\n            }\n        }\n\n        return keys;\n    }\n\n    /**\n     * Load all resource for the specified, optional, locale ID and\n     * call callback upon completion\n     * @param localeId - Desired locale ID (e.g. en-US) or null for any locale\n     * @param callback - Completion callback with boolean success or failure result (result: boolean)\n     */\n    public prepareResources(localeId?: string, callback?: (result: boolean) => void) {\n        const rm = this.resourceManager;\n        const model = this;\n\n        // Set locale\n        rm.currentLocaleId = localeId;\n\n        // Register resources for any model level fills\n        if (model.fill) {\n            if (typeof model.fill === 'string') {\n                const modelFill = model.fill as string;\n                if (modelFill.toLowerCase().substring(0, 6) === 'image(') {\n                    let key = modelFill.substring(6, modelFill.length - 1);\n                    if (key.indexOf(';') !== -1) {\n                        const parts = key.split(';');\n                        key = parts[1];\n                    }\n                    rm.register(key);\n                }\n                else if (modelFill.toLowerCase().substring(0, 6) === 'model(') {\n                    let key = modelFill.substring(6, modelFill.length - 1);\n                    if (key.indexOf(';') !== -1) {\n                        const parts = key.split(';');\n                        key = parts[1];\n                    }\n                    rm.register(key);\n                }\n            }\n        }\n\n        // Register resources from all elements\n        const ml = model.elements.length;\n        for (let i = 0; i < ml; i++) {\n            const element = model.elements[i];\n            if (element.registerResources) {\n                element.registerResources(rm);\n            }\n        }\n\n        // Load resources\n        rm.load(callback);\n    }\n\n    /**\n     * Sets rendering stroke style on canvas element for given element\n     * @param c - Rendering context\n     * @param el - Element being rendered\n     * @returns True if stroke was applied for element\n     */\n    public setElementStroke(c: CanvasRenderingContext2D, el: ElementBase): boolean {\n        let color: Color;\n        const stroke = this.strokeForElement(el);\n        if (!stroke || stroke === 'no') {\n            c.strokeStyle = 'rgba(0, 0, 0, 0)';\n            return false;\n        }\n        if (stroke.indexOf(',') !== -1) {\n            const parts = stroke.split(',');\n            color = Color.parse(parts[0]);\n            const width = parseFloat(parts[1]);\n            c.lineWidth = width;\n        }\n        else {\n            color = Color.parse(stroke);\n            c.lineWidth = 1;\n        }\n        c.strokeStyle = color.toStyleString();\n        c.globalAlpha = 1;\n        return true;\n    }\n\n    /**\n     * Sets rendering transform on canvas element for given element\n     * @param c - Rendering context\n     * @param t - Element transform property\n     * @param origin - Reference point for transform\n     */\n    public setRenderTransform(c: CanvasRenderingContext2D, t: string, origin: Point) {\n        if (t.length > 6 && t.substring(0, 6).toLowerCase() === 'scale(') {\n            let command = t.substring(6, t.length - 1);\n            let refX = origin.x;\n            let refY = origin.y;\n            if (command.indexOf('(') !== -1) {\n                const centerString = command.substring(command.indexOf('(') + 1, command.length - 1);\n                command = command.substring(0, command.indexOf('('));\n                const center = Point.parse(centerString);\n                refX += center.x;\n                refY += center.y;\n                c.translate(origin.x + center.x, origin.y + center.y);\n            }\n            else {\n                c.translate(origin.x, origin.y);\n            }\n            if (command.indexOf(',') !== -1) {\n                const parts = command.split(',');\n                c.scale(parseFloat(parts[0]), parseFloat(parts[1]));\n            }\n            else {\n                const scale = parseFloat(command);\n                c.scale(scale, scale);\n            }\n            c.translate(-refX, -refY);\n        }\n        else if (t.length > 7 && t.substring(0, 7).toLowerCase() === 'rotate(') {\n            let command = t.substring(7, t.length - 1);\n            let refX = origin.x;\n            let refY = origin.y;\n            if (command.indexOf('(') !== -1) {\n                const centerString = command.substring(command.indexOf('(') + 1, command.length - 1);\n                command = command.substring(0, command.indexOf('('));\n                const center = Point.parse(centerString);\n                refX += center.x;\n                refY += center.y;\n                c.translate(origin.x + center.x, origin.y + center.y);\n            }\n            else {\n                c.translate(origin.x, origin.y);\n            }\n            const angle = Math.PI / 180 * parseFloat(command);\n            c.rotate(angle);\n            c.translate(-refX, -refY);\n        }\n        else if (t.length > 10 && t.substring(0, 10).toLowerCase() === 'translate(') {\n            const command = t.substring(10, t.length - 1);\n            const parts = command.split(',');\n            c.translate(parseFloat(parts[0]), parseFloat(parts[1]));\n        }\n        else if (t.length > 5 && t.substring(0, 5).toLowerCase() === 'skew(') {\n            let command = t.substring(5, t.length - 1);\n            let refX = origin.x;\n            let refY = origin.y;\n            if (command.indexOf('(') !== -1) {\n                const centerString = command.substring(command.indexOf('(') + 1, command.length - 1);\n                command = command.substring(0, command.indexOf('('));\n                const center = Point.parse(centerString);\n                refX += center.x;\n                refY += center.y;\n                c.translate(origin.x + center.x, origin.y + center.y);\n            }\n            else {\n                c.translate(origin.x, origin.y);\n            }\n            const parts = command.split(',');\n            const skewX = Math.PI / 180 * parseFloat(parts[0]);\n            const skewY = Math.PI / 180 * parseFloat(parts[1]);\n            c.transform(1, skewY, skewX, 1, 0, 0);\n            c.translate(-refX, -refY);\n        }\n        else if (t.length > 7 && t.substring(0, 7).toLowerCase() === 'matrix(') {\n            let command = t.substring(7, t.length - 1);\n            let refX = origin.x;\n            let refY = origin.y;\n            if (command.indexOf('(') !== -1) {\n                const centerString = command.substring(command.indexOf('(') + 1, command.length - 1);\n                command = command.substring(0, command.indexOf('('));\n                const center = Point.parse(centerString);\n                refX += center.x;\n                refY += center.y;\n                c.translate(origin.x + center.x, origin.y + center.y);\n            }\n            else {\n                c.translate(origin.x, origin.y);\n            }\n            const parts = command.split(',');\n            c.transform(\n                parseFloat(parts[0]),\n                parseFloat(parts[1]),\n                parseFloat(parts[2]),\n                parseFloat(parts[3]),\n                parseFloat(parts[4]),\n                parseFloat(parts[5])\n            );\n            c.translate(-refX, -refY);\n        }\n    }\n\n    /**\n     * Retrieves  scaling factor for fill\n     * @param el - Element rendered\n     * @returns Fill scaling info\n     */\n    public getFillScale(el: ElementBase): ScalingInfo {\n        const result = new ScalingInfo();\n        result.rx = 1.0;\n        result.ry = 1.0;\n        if (el.fillScale) {\n            result.rx = el.fillScale;\n            result.ry = el.fillScale;\n        }\n        return result;\n    }\n\n    /**\n     * Returns topmost element at given coordinate or null if none found\n     * @param c - Rendering context\n     * @param tx - X coordinate\n     * @param ty - Y coordinate\n     * @returns Topmost element at coordinate or null if none found\n     */\n    public firstActiveElementAt(c: CanvasRenderingContext2D, tx: number, ty: number) {\n        const count = this.elements.length;\n        for (let i = count - 1; i >= 0; i--) {\n            const el = this.elements[i];\n            if (el.interactive && el.hitTest(c, tx, ty)) {\n                return el;\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Returns all elements at given coordinate or empty [] if none found\n     * @param c - Rendering context\n     * @param tx - X coordinate\n     * @param ty - Y coordinate\n     * @returns Array of elements at coordinate\n     */\n    public elementsAt(c: CanvasRenderingContext2D, tx: number, ty: number): ElementBase[] {\n        const els: ElementBase[] = [];\n        this.elements.forEach(el => {\n            if (el.interactive && el.hitTest(c, tx, ty)) {\n                els.push(el);\n            }\n        });\n        return els;\n    }\n\n    /**\n     * Returns element with given ID or null if not found\n     * @param id - Element ID\n     * @returns First element with given ID or undefined if not found\n     */\n    public elementWithId(id: string) {\n        const count = this.elements.length;\n        for (let i = 0; i < count; i++) {\n            const el = this.elements[i];\n            if (el.id === id) {\n                return el;\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Renders model to provided 2d canvas rendering context at specified scale\n     * @param c - Rendering context\n     * @param scale - Rendering scale. Default is 1.\n     */\n    public renderToContext(c: CanvasRenderingContext2D, scale?: number) {\n        if (!this._size) {\n            throw new Error('Size is undefined.');\n        }\n        let location = this._location;\n        if (!location) {\n            location = new Point(0, 0);\n        }\n        let w = this._size.width;\n        let h = this._size.height;\n        if (scale) {\n            w *= scale;\n            h *= scale;\n        }\n\n        // If transformed\n        c.save();\n        c.beginPath();\n        c.rect(0, 0, w, h);\n        c.clip();\n        if (this.transform) {\n            this.setRenderTransform(c, this.transform, location);\n        }\n\n        // Fill\n        if (FillFactory.setElementFill(c, this)) {\n            if (this.fillOffsetX || this.fillOffsetY) {\n                const fillOffsetX = this.fillOffsetX || 0;\n                const fillOffsetY = this.fillOffsetY || 0;\n                c.translate(fillOffsetX, fillOffsetY);\n                c.fillRect(-fillOffsetX, -fillOffsetY, w, h);\n                c.translate(-fillOffsetX, -fillOffsetY);\n            }\n            else {\n                c.fillRect(0, 0, w, h);\n            }\n        }\n\n        // Render elements\n        c.globalAlpha = 1.0;\n        const el = this.elements.length;\n        for (let i = 0; i < el; i++) {\n            this.elements[i].draw(c);\n        }\n\n        // Stroke\n        if (this.setElementStroke(c, this)) {\n            c.strokeRect(0, 0, this._size.width, this._size.height);\n        }\n        c.restore();\n    }\n\n    /**\n     * Returns stroke for given element with inheritance\n     * @param el - Element\n     * @returns Element stroke\n     */\n    public strokeForElement(el: ElementBase): string | undefined {\n        let compare: ElementBase | undefined = el;\n        while (compare) {\n            if (compare.stroke) {\n                return compare.stroke;\n            }\n            compare = compare.parent;\n        }\n        return undefined;\n    }\n\n    /**\n     * Calculates frame rate in frames/second based on time since last frame\n     * @returns Frame rate in frames / second\n     */\n    public calculateFPS(): number {\n        const now = +new Date();\n        const fps = 1000 / (now - this.lastTime);\n        this.lastTime = now;\n        return fps;\n    }\n\n    /**\n     * Clones this model to a new instance\n     * @returns Cloned model instance\n     */\n    public clone(): Model {\n        if (!this._size) {\n            throw new Error('Size is undefined.');\n        }\n        const m: Model = Model.create(this._size.width, this._size.height);\n        super.cloneTo(m);\n        if (this.resourceManager && this.resources && this.resources.length > 0) {\n            m.resources = [];\n            this.resources.forEach(r => {\n                m.resources.push(r.clone());\n            });\n        }\n        if (this.elements && this.elements.length > 0) {\n            m.elements = [];\n            this.elements.forEach(e => {\n                const clone = e.clone();\n                clone.model = m;\n                m.elements.push(clone);\n            });\n        }\n        return m;\n    }\n\n    /**\n     * Serializes persistent properties to new object instance\n     * @returns Serialized element\n     */\n    public serialize(): any {\n        const o = super.serialize();\n        if (this.resources && this.resources.length > 0) {\n            o.resources = [];\n            this.resources.forEach(r => {\n                o.resources.push(r.serialize());\n            });\n        }\n        if (this.elements && this.elements.length > 0) {\n            o.elements = [];\n            this.elements.forEach(e => {\n                o.elements.push(e.serialize());\n            });\n        }\n        return o;\n    }\n\n    /**\n     * Serializes model to formatted JSON string\n     */\n    public formattedJSON(): string {\n        const o = this.serialize();\n        return JSON.stringify(o, null, ' ');\n    }\n\n    /**\n     * Serializes model to raw JSON string\n     */\n    public rawJSON(): string {\n        const o = this.serialize();\n        return JSON.stringify(o);\n    }\n}\n","/**\n * Exposes shared utility methods\n */\nexport class Utility {\n    /**\n     * Retrieves text context via async ajax call\n     * @param url - URL to be retrieved\n     * @param callback - Result callback (result:string)\n     * @returns void\n     */\n    public static getRemoteText(url: string, callback: (result: string | undefined) => void): void {\n        const request = new XMLHttpRequest();\n        request.open('GET', url, true);\n        request.onreadystatechange = status => {\n            if (request.readyState === 4) {\n                if (request.status === 200) {\n                    callback(request.responseText);\n                }\n                else {\n                    callback(undefined);\n                }\n            }\n        };\n        request.onabort = () => {\n            console.log('Request Aborted: ' + url);\n            callback(undefined);\n        };\n        request.onerror = () => {\n            console.log('Request Error: ' + url + '\\r' + request.responseText);\n            callback(undefined);\n        };\n        request.send(null);\n    }\n\n    /**\n     * Determines if a string ends with a different string\n     * @param str - String to be evaluated\n     * @param suffix - Suffix to be evaluated\n     * @returns True if string ends with suffix\n     */\n    public static endsWith(str: string, suffix: string): boolean {\n        return str.indexOf(suffix, str.length - suffix.length) !== -1;\n    }\n\n    /**\n     * Joins two path segments, ensuring they are separated by a single path separator character ('/')\n     * @param path1 - First path segment\n     * @param path2 - Second path segment\n     * @returns Joined path segment\n     */\n    public static joinPaths(path1: string, path2: string) {\n        if (!path1) {\n            path1 = '';\n        }\n        if (path2.substring(0, 1) === '/') {\n            path2 = path2.substring(1, path2.length);\n        }\n        if (Utility.endsWith(path1, '/')) {\n            return path1 + path2;\n        }\n        return path1 + '/' + path2;\n    }\n\n    /**\n     * Creates a new globally unique identifier (GUID)\n     * @returns New guid represented as a string in the form xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n     */\n    public static guid(): string {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n            const r = (Math.random() * 16) | 0;\n            const v = c === 'x' ? r : (r & 0x3) | 0x8;\n            return v.toString(16);\n        });\n    }\n}\n","/**\n * Generic multicast event dispatcher\n */\nexport class CommonEvent<T> {\n    private handlers: Array<(data?: T) => void> = [];\n\n    constructor() {\n        this.add = this.add.bind(this);\n        this.remove = this.remove.bind(this);\n        this.hasListeners = this.hasListeners.bind(this);\n        this.clear = this.clear.bind(this);\n        this.trigger = this.trigger.bind(this);\n    }\n\n    public add(handler: (data?: T) => void) {\n        this.handlers.push(handler);\n    }\n\n    public remove(handler: any): void {\n        const index = this.handlers.indexOf(handler);\n        if (index > -1) {\n            this.handlers.splice(index, 1);\n        }\n    }\n\n    public hasListeners(): boolean {\n        return this.handlers.length > 0;\n    }\n\n    public clear(): void {\n        this.handlers.splice(0, this.handlers.length);\n    }\n\n    public trigger(data?: T) {\n        this.handlers.slice(0).forEach(h => h(data));\n    }\n}\n","import { Point } from './point';\nimport { Size } from './size';\n\n/**\n * Represents a rectangular region in 2D space\n */\nexport class Region {\n    /**\n     * Region factory function\n     * @param x - X coordinate\n     * @param y - Y coordinate\n     * @param width - Width\n     * @param height - Height\n     * @returns New region\n     */\n    public static create(x: number, y: number, width: number, height: number): Region {\n        return new Region(x, y, width, height);\n    }\n\n    private _x: number;\n    private _y: number;\n    private _width: number;\n    private _height: number;\n    private _location: Point;\n    private _size: Size;\n\n    /**\n     * @param x - X coordinate\n     * @param y - Y coordinate\n     * @param width - Width\n     * @param height - Height\n     */\n    constructor(x: number, y: number, width: number, height: number) {\n        this._x = x;\n        this._y = y;\n        this._width = width;\n        this._height = height;\n        this._size = new Size(width, height);\n        this._location = new Point(x, y);\n\n        this.clone = this.clone.bind(this);\n        this.containsPoint = this.containsPoint.bind(this);\n        this.containsCoordinate = this.containsCoordinate.bind(this);\n        this.containsRegion = this.containsRegion.bind(this);\n        this.intersectsWith = this.intersectsWith.bind(this);\n    }\n\n    /**\n     * Clones this region into a new instance\n     * @returns Cloned region\n     */\n    public clone(): Region {\n        return new Region(this._x, this._y, this._width, this._height);\n    }\n\n    /**\n     * Returns X coordinate\n     * @returns X coordinate\n     */\n    get x(): number {\n        return this._x;\n    }\n\n    /**\n     * Returns Y coordinate\n     * @returns Y coordinate\n     */\n    get y(): number {\n        return this._y;\n    }\n\n    /**\n     * Returns width\n     * @returns Width\n     */\n    get width(): number {\n        return this._width;\n    }\n\n    /**\n     * Returns height\n     * @returns Height\n     */\n    get height(): number {\n        return this._height;\n    }\n\n    /**\n     * Returns location\n     * @returns Location\n     */\n    get location(): Point {\n        return this._location;\n    }\n\n    /**\n     * Returns size\n     * @returns Size\n     */\n    get size(): Size {\n        return this._size;\n    }\n\n    /**\n     * Determines if this region contains a given point\n     * @param point - Point of interest\n     * @returns True if point is in this region\n     */\n    public containsPoint(point: Point): boolean {\n        if (\n            point.x >= this.x &&\n            point.x <= this.x + this.width &&\n            point.y >= this.y &&\n            point.y <= this.y + this.height\n        ) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Determines if this region contains a coordinate\n     * @param x - X coordinate\n     * @param y - Y coordinate\n     * @returns True if coordinate is in this region\n     */\n    public containsCoordinate(x: number, y: number): boolean {\n        if (x >= this.x && x <= this.x + this.width && y >= this.y && y <= this.y + this.height) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Determines if this region intersects with a another region\n     * @param region - Region of interest\n     * @returns True if region of interest intersects with this region\n     */\n    public intersectsWith(region: Region): boolean {\n        const x1 = this.x;\n        const x2 = this.x + this.width;\n        const y1 = this.y;\n        const y2 = this.y + this.height;\n        const x3 = region.x;\n        const x4 = region.x + region.width;\n        const y3 = region.y;\n        const y4 = region.y + region.height;\n        if (x1 < x4 && x2 > x3 && y1 < y4 && y2 > y3) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Determines if this region completely contains another region\n     * @param region - Region of interest\n     * @returns True if this region completely contains the region of interest\n     */\n    public containsRegion(region: Region): boolean {\n        const x1 = this.x;\n        const x2 = this.x + this.width;\n        const y1 = this.y;\n        const y2 = this.y + this.height;\n        const x3 = region.x;\n        const x4 = region.x + region.width;\n        const y3 = region.y;\n        const y4 = region.y + region.height;\n        if (x3 >= x1 && x4 <= x2 && y3 >= y1 && y4 <= y2) {\n            return true;\n        }\n        return false;\n    }\n}\n","import { Color } from '../core/color';\nimport { ErrorMessages } from '../core/error-messages';\nimport { Model } from '../core/model';\nimport { Point } from '../core/point';\nimport { ElementBase } from '../elements/element-base';\nimport { BitmapResource } from '../resource/bitmap-resource';\nimport { ModelResource } from '../resource/model-resource';\nimport { LinearGradientFill } from './linear-gradient-fill';\nimport { RadialGradientFill } from './radial-gradient-fill';\n\n/**\n * Element fill creation methods\n */\nexport class FillFactory {\n    /**\n     * Returns fill for given element with inheritance\n     * @param el - Element\n     * @returns Element stroke\n     */\n    public static fillForElement(el: ElementBase): string | LinearGradientFill | RadialGradientFill | undefined {\n        let compare: ElementBase | undefined = el;\n        while (compare) {\n            if (compare.fill) {\n                return compare.fill;\n            }\n            compare = compare.parent;\n        }\n        return undefined;\n    }\n\n    /**\n     * Sets rendering fill style on canvas element for given element\n     * @param c - Rendering context\n     * @param el - Element being rendered\n     * @returns True if fill was applied for element\n     */\n    public static setElementFill(c: CanvasRenderingContext2D, el: ElementBase): boolean {\n        let model = el.model;\n        if (!model && el instanceof Model) {\n            model = el;\n        }\n        if (!model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        const fill = FillFactory.fillForElement(el);\n        if (!fill || (typeof fill === 'string' && fill === 'no')) {\n            c.fillStyle = 'rgba(0,0,0,0)';\n            return false;\n        }\n        if (fill instanceof LinearGradientFill) {\n            const lgr = fill as LinearGradientFill;\n            const start = Point.parse(lgr.start);\n            const end = Point.parse(lgr.end);\n            const linearGradient = c.createLinearGradient(start.x, start.y, end.x, end.y);\n            for (const stop of lgr.stops) {\n                linearGradient.addColorStop(stop.offset, Color.parse(stop.color).toStyleString());\n            }\n            c.fillStyle = linearGradient;\n            return true;\n        }\n        if (fill instanceof RadialGradientFill) {\n            const rgr = fill as RadialGradientFill;\n            const focus = Point.parse(rgr.focus);\n            const center = Point.parse(rgr.center);\n            const radialGradient = c.createRadialGradient(\n                focus.x,\n                focus.y,\n                0,\n                center.x,\n                center.y,\n                Math.max(rgr.radiusX, rgr.radiusY)\n            );\n            for (const stop of rgr.stops) {\n                radialGradient.addColorStop(stop.offset, Color.parse(stop.color).toStyleString());\n            }\n            c.fillStyle = radialGradient;\n            return true;\n        }\n\n        if (typeof fill === 'string') {\n            if (fill.toLowerCase().substring(0, 6) === 'image(') {\n                let key = fill.substring(6, fill.length - 1);\n                if (key.indexOf(';') !== -1) {\n                    const parts = key.split(';');\n                    const opacity = parseFloat(parts[0]);\n                    c.globalAlpha = opacity;\n                    key = parts[1];\n                }\n                const res = model.resourceManager.get(key) as BitmapResource;\n                if (!res) {\n                    c.fillStyle = Color.Magenta.toStyleString();\n                    throw new Error(ErrorMessages.ImageUndefined + ': ' + key);\n                }\n                const scaling = model.getFillScale(el);\n                let pattern: CanvasPattern | null;\n                if (!res.image) {\n                    throw new Error(ErrorMessages.ImageUndefined);\n                }\n                if (scaling.rx === 1 && scaling.ry === 1) {\n                    pattern = c.createPattern(res.image, 'repeat');\n                }\n                else {\n                    const offscreen = document.createElement('canvas');\n                    offscreen.width = res.image.width * scaling.rx;\n                    offscreen.height = res.image.height * scaling.ry;\n                    const c2 = offscreen.getContext('2d');\n                    if (c2 !== null) {\n                        c2.scale(scaling.rx, scaling.ry);\n                        c2.drawImage(res.image, 0, 0);\n                    }\n                    pattern = c.createPattern(offscreen, 'repeat');\n                }\n                if (pattern != null) {\n                    c.fillStyle = pattern;\n                    return true;\n                }\n                else {\n                    throw new Error(ErrorMessages.ErrorCreatingCanvasPattern);\n                }\n            }\n            if (fill.toLowerCase().substring(0, 6) === 'model(') {\n                let key = fill.substring(6, fill.length - 1);\n                if (key.indexOf(';') !== -1) {\n                    const parts = key.split(';');\n                    const opacity = parseFloat(parts[0]);\n                    c.globalAlpha = opacity;\n                    key = parts[1];\n                }\n                const res = model.resourceManager.get(key) as ModelResource;\n                if (!res) {\n                    c.fillStyle = Color.Magenta.toStyleString();\n                    throw new Error(ErrorMessages.ModelResourceUndefined + ': ' + key);\n                }\n                const innerModel = res.model;\n                if (innerModel === undefined) {\n                    throw new Error(ErrorMessages.ModelUndefined);\n                }\n                const size = innerModel.getSize();\n                if (!size) {\n                    throw new Error(ErrorMessages.SizeUndefined);\n                }\n                const offscreen = document.createElement('canvas');\n                const scaling = model.getFillScale(el);\n                if (scaling.rx === 1 && scaling.ry === 1) {\n                    offscreen.width = size.width;\n                    offscreen.height = size.height;\n                }\n                else {\n                    offscreen.width = size.width * scaling.rx;\n                    offscreen.height = size.height * scaling.ry;\n                }\n                const c2 = offscreen.getContext('2d');\n                if (c2 !== null) {\n                    if (scaling.rx !== 1 || scaling.ry !== 1) {\n                        c2.scale(scaling.rx, scaling.ry);\n                    }\n                    innerModel.renderToContext(c2);\n                }\n\n                const pattern = c.createPattern(offscreen, 'repeat');\n                if (pattern !== null) {\n                    c.fillStyle = pattern;\n                    return true;\n                }\n                else {\n                    throw new Error(ErrorMessages.ErrorCreatingCanvasPattern);\n                }\n            }\n            c.fillStyle = Color.parse(fill).toStyleString();\n            return true;\n        }\n        return false;\n    }\n}\n","import { Model } from '../../core/model';\nimport { MouseLocationArgs } from '../../core/mouse-location-args';\nimport { LinearGradientFill } from '../../fill/linear-gradient-fill';\nimport { RadialGradientFill } from '../../fill/radial-gradient-fill';\nimport { DesignController } from '../design-controller';\n\n/**\n * Base class for design surface tools\n */\nexport abstract class DesignTool {\n    public model?: Model;\n    public controller?: DesignController;\n    public opacity: number;\n    public stroke?: string;\n    public fill?: string | LinearGradientFill | RadialGradientFill;\n    public fillScale: number;\n    public fillOffsetX: number;\n    public fillOffsetY: number;\n    public isCreating: boolean = false;\n\n    constructor() {\n        this.cancel = this.cancel.bind(this);\n        this.mouseDown = this.mouseDown.bind(this);\n        this.mouseMove = this.mouseMove.bind(this);\n        this.mouseUp = this.mouseUp.bind(this);\n\n        this.opacity = 255;\n        this.fillScale = 1;\n        this.fillOffsetX = 0;\n        this.fillOffsetY = 0;\n    }\n\n    public abstract mouseDown(args: MouseLocationArgs): void;\n    public abstract mouseMove(args: MouseLocationArgs): void;\n    public abstract mouseUp(args: MouseLocationArgs): void;\n    public abstract cancel(): void;\n\n    public setFill(fill: string | LinearGradientFill | RadialGradientFill | undefined) {\n        if (typeof fill === 'string') {\n            this.fill = fill;\n        }\n        else if (fill !== undefined) {\n            this.fill = fill.clone();\n        }\n    }\n}\n","import { ErrorMessages } from './error-messages';\nimport { NamedColor } from './named-color';\n\n/**\n * Represents a 32-bit RGBA color\n */\nexport class Color {\n    public static Transparent = new Color(0, 255, 255, 255);\n    public static AliceBlue = new Color(255, 240, 248, 255);\n    public static AntiqueWhite = new Color(255, 250, 235, 215);\n    public static Aqua = new Color(255, 0, 255, 255);\n    public static Aquamarine = new Color(255, 127, 255, 212);\n    public static Azure = new Color(255, 240, 255, 255);\n    public static Beige = new Color(255, 245, 245, 220);\n    public static Bisque = new Color(255, 255, 228, 196);\n    public static Black = new Color(255, 0, 0, 0);\n    public static BlanchedAlmond = new Color(255, 255, 235, 205);\n    public static Blue = new Color(255, 0, 0, 255);\n    public static BlueViolet = new Color(255, 138, 43, 226);\n    public static Brown = new Color(255, 165, 42, 42);\n    public static BurlyWood = new Color(255, 222, 184, 135);\n    public static CadetBlue = new Color(255, 95, 158, 160);\n    public static Chartreuse = new Color(255, 127, 255, 0);\n    public static Chocolate = new Color(255, 210, 105, 30);\n    public static Coral = new Color(255, 255, 127, 80);\n    public static CornflowerBlue = new Color(255, 100, 149, 237);\n    public static Cornsilk = new Color(255, 255, 248, 220);\n    public static Crimson = new Color(255, 220, 20, 60);\n    public static Cyan = new Color(255, 0, 255, 255);\n    public static DarkBlue = new Color(255, 0, 0, 139);\n    public static DarkCyan = new Color(255, 0, 139, 139);\n    public static DarkGoldenrod = new Color(255, 184, 134, 11);\n    public static DarkGray = new Color(255, 169, 169, 169);\n    public static DarkGreen = new Color(255, 0, 100, 0);\n    public static DarkKhaki = new Color(255, 189, 183, 107);\n    public static DarkMagenta = new Color(255, 139, 0, 139);\n    public static DarkOliveGreen = new Color(255, 85, 107, 47);\n    public static DarkOrange = new Color(255, 255, 140, 0);\n    public static DarkOrchid = new Color(255, 153, 50, 204);\n    public static DarkRed = new Color(255, 139, 0, 0);\n    public static DarkSalmon = new Color(255, 233, 150, 122);\n    public static DarkSeaGreen = new Color(255, 143, 188, 139);\n    public static DarkSlateBlue = new Color(255, 72, 61, 139);\n    public static DarkSlateGray = new Color(255, 47, 79, 79);\n    public static DarkTurquoise = new Color(255, 0, 206, 209);\n    public static DarkViolet = new Color(255, 148, 0, 211);\n    public static DeepPink = new Color(255, 255, 20, 147);\n    public static DeepSkyBlue = new Color(255, 0, 191, 255);\n    public static DimGray = new Color(255, 105, 105, 105);\n    public static DodgerBlue = new Color(255, 30, 144, 255);\n    public static Firebrick = new Color(255, 178, 34, 34);\n    public static FloralWhite = new Color(255, 255, 250, 240);\n    public static ForestGreen = new Color(255, 34, 139, 34);\n    public static Fuchsia = new Color(255, 255, 0, 255);\n    public static Gainsboro = new Color(255, 220, 220, 220);\n    public static GhostWhite = new Color(255, 248, 248, 255);\n    public static Gold = new Color(255, 255, 215, 0);\n    public static Goldenrod = new Color(255, 218, 165, 32);\n    public static Gray = new Color(255, 128, 128, 128);\n    public static Green = new Color(255, 0, 128, 0);\n    public static GreenYellow = new Color(255, 173, 255, 47);\n    public static Honeydew = new Color(255, 240, 255, 240);\n    public static HotPink = new Color(255, 255, 105, 180);\n    public static IndianRed = new Color(255, 205, 92, 92);\n    public static Indigo = new Color(255, 75, 0, 130);\n    public static Ivory = new Color(255, 255, 255, 240);\n    public static Khaki = new Color(255, 240, 230, 140);\n    public static Lavender = new Color(255, 230, 230, 250);\n    public static LavenderBlush = new Color(255, 255, 240, 245);\n    public static LawnGreen = new Color(255, 124, 252, 0);\n    public static LemonChiffon = new Color(255, 255, 250, 205);\n    public static LightBlue = new Color(255, 173, 216, 230);\n    public static LightCoral = new Color(255, 240, 128, 128);\n    public static LightCyan = new Color(255, 224, 255, 255);\n    public static LightGoldenrodYellow = new Color(255, 250, 250, 210);\n    public static LightGray = new Color(255, 211, 211, 211);\n    public static LightGreen = new Color(255, 144, 238, 144);\n    public static LightPink = new Color(255, 255, 182, 193);\n    public static LightSalmon = new Color(255, 255, 160, 122);\n    public static LightSeaGreen = new Color(255, 32, 178, 170);\n    public static LightSkyBlue = new Color(255, 135, 206, 250);\n    public static LightSlateGray = new Color(255, 119, 136, 153);\n    public static LightSteelBlue = new Color(255, 176, 196, 222);\n    public static LightYellow = new Color(255, 255, 255, 224);\n    public static Lime = new Color(255, 0, 255, 0);\n    public static LimeGreen = new Color(255, 50, 205, 50);\n    public static Linen = new Color(255, 250, 240, 230);\n    public static Magenta = new Color(255, 255, 0, 255);\n    public static Maroon = new Color(255, 128, 0, 0);\n    public static MediumAquamarine = new Color(255, 102, 205, 170);\n    public static MediumBlue = new Color(255, 0, 0, 205);\n    public static MediumOrchid = new Color(255, 186, 85, 211);\n    public static MediumPurple = new Color(255, 147, 112, 219);\n    public static MediumSeaGreen = new Color(255, 60, 179, 113);\n    public static MediumSlateBlue = new Color(255, 123, 104, 238);\n    public static MediumSpringGreen = new Color(255, 0, 250, 154);\n    public static MediumTurquoise = new Color(255, 72, 209, 204);\n    public static MediumVioletRed = new Color(255, 199, 21, 133);\n    public static MidnightBlue = new Color(255, 25, 25, 112);\n    public static MintCream = new Color(255, 245, 255, 250);\n    public static MistyRose = new Color(255, 255, 228, 225);\n    public static Moccasin = new Color(255, 255, 228, 181);\n    public static NavajoWhite = new Color(255, 255, 222, 173);\n    public static Navy = new Color(255, 0, 0, 128);\n    public static OldLace = new Color(255, 253, 245, 230);\n    public static Olive = new Color(255, 128, 128, 0);\n    public static OliveDrab = new Color(255, 107, 142, 35);\n    public static Orange = new Color(255, 255, 165, 0);\n    public static OrangeRed = new Color(255, 255, 69, 0);\n    public static Orchid = new Color(255, 218, 112, 214);\n    public static PaleGoldenrod = new Color(255, 238, 232, 170);\n    public static PaleGreen = new Color(255, 152, 251, 152);\n    public static PaleTurquoise = new Color(255, 175, 238, 238);\n    public static PaleVioletRed = new Color(255, 219, 112, 147);\n    public static PapayaWhip = new Color(255, 255, 239, 213);\n    public static PeachPuff = new Color(255, 255, 218, 185);\n    public static Peru = new Color(255, 205, 133, 63);\n    public static Pink = new Color(255, 255, 192, 203);\n    public static Plum = new Color(255, 221, 160, 221);\n    public static PowderBlue = new Color(255, 176, 224, 230);\n    public static Purple = new Color(255, 128, 0, 128);\n    public static Red = new Color(255, 255, 0, 0);\n    public static RosyBrown = new Color(255, 188, 143, 143);\n    public static RoyalBlue = new Color(255, 65, 105, 225);\n    public static SaddleBrown = new Color(255, 139, 69, 19);\n    public static Salmon = new Color(255, 250, 128, 114);\n    public static SandyBrown = new Color(255, 244, 164, 96);\n    public static SeaGreen = new Color(255, 46, 139, 87);\n    public static SeaShell = new Color(255, 255, 245, 238);\n    public static Sienna = new Color(255, 160, 82, 45);\n    public static Silver = new Color(255, 192, 192, 192);\n    public static SkyBlue = new Color(255, 135, 206, 235);\n    public static SlateBlue = new Color(255, 106, 90, 205);\n    public static SlateGray = new Color(255, 112, 128, 144);\n    public static Snow = new Color(255, 255, 250, 250);\n    public static SpringGreen = new Color(255, 0, 255, 127);\n    public static SteelBlue = new Color(255, 70, 130, 180);\n    public static Tan = new Color(255, 210, 180, 140);\n    public static Teal = new Color(255, 0, 128, 128);\n    public static Thistle = new Color(255, 216, 191, 216);\n    public static Tomato = new Color(255, 255, 99, 71);\n    public static Turquoise = new Color(255, 64, 224, 208);\n    public static Violet = new Color(255, 238, 130, 238);\n    public static Wheat = new Color(255, 245, 222, 179);\n    public static White = new Color(255, 255, 255, 255);\n    public static WhiteSmoke = new Color(255, 245, 245, 245);\n    public static Yellow = new Color(255, 255, 255, 0);\n    public static YellowGreen = new Color(255, 154, 205, 50);\n\n    /**\n     * Array of predefined named colors\n     */\n    public static NamedColors: NamedColor[] = [];\n\n    /**\n     * Color factory function\n     * @param a - Alpha component (0-255)\n     * @param r - Red component (0-255)\n     * @param g - Green component (0-255)\n     * @param b - Blue component (0-255)\n     * @returns New color\n     */\n    public static create(a: number, r: number, g: number, b: number): Color {\n        return new Color(a, r, g, b);\n    }\n\n    /**\n     * Parses a string representation of a color into a color instance,\n     * handling known color names and hex formatted color strings\n     * @param color - String representation of color\n     * @returns Parsed color instance\n     */\n    public static parse(color: string): Color {\n        let a: number;\n        let r: number;\n        let g: number;\n        let b: number;\n\n        // Parse hex prefixed color\n        if (color.charAt(0) === '#') {\n            switch (color.length) {\n                // Six digits\n                case 7:\n                    r = parseInt(color.substring(1, 3), 16);\n                    g = parseInt(color.substring(3, 5), 16);\n                    b = parseInt(color.substring(5, 7), 16);\n                    return new Color(255, r, g, b);\n\n                // Eight digits - with alpha\n                case 9:\n                    a = parseInt(color.substring(1, 3), 16);\n                    r = parseInt(color.substring(3, 5), 16);\n                    g = parseInt(color.substring(5, 7), 16);\n                    b = parseInt(color.substring(7, 9), 16);\n                    return new Color(a, r, g, b);\n\n                default:\n                    throw new Error(ErrorMessages.InvalidColorString + ': ' + color);\n            }\n        }\n\n        let evalString = color.toLowerCase();\n        let alpha = 1;\n        if (color.indexOf(';') !== -1) {\n            const colorParts = evalString.split(';');\n            evalString = colorParts[1];\n            alpha = parseFloat(colorParts[0]);\n            if (alpha > 1) {\n                alpha = 1;\n            }\n            else if (alpha < 0) {\n                alpha = 0;\n            }\n        }\n\n        // Lookup known color\n        if (evalString === 'transparent') {\n            return Color.Transparent;\n        }\n        for (const namedColor of Color.NamedColors) {\n            if (namedColor.name.toLowerCase() === evalString) {\n                if (alpha === 255) {\n                    return namedColor.color;\n                }\n                else {\n                    return new Color(alpha * 255, namedColor.color.r, namedColor.color.g, namedColor.color.b);\n                }\n            }\n        }\n        return Color.Transparent;\n    }\n\n    /**\n     * Alpha component (0-255)\n     */\n    public a: number;\n\n    /**\n     * Red component (0-255)\n     */\n    public r: number;\n\n    /**\n     * Green component (0-255)\n     */\n    public g: number;\n\n    /**\n     * Blue component (0-255)\n     */\n    public b: number;\n\n    /**\n     * Color name\n     */\n    public name?: string;\n\n    /**\n     * Creates a new color\n     * @param a - Alpha component\n     * @param r - Red component\n     * @param g - Green component\n     * @param b - Blue component\n     */\n    constructor(a: number, r: number, g: number, b: number) {\n        this.a = a;\n        this.r = r;\n        this.g = g;\n        this.b = b;\n\n        this.clone = this.clone.bind(this);\n        this.equals = this.equals.bind(this);\n        this.equalsHue = this.equalsHue.bind(this);\n        this.hexPart = this.hexPart.bind(this);\n        this.toHexString = this.toHexString.bind(this);\n        this.toStyleString = this.toStyleString.bind(this);\n        this.toString = this.toString.bind(this);\n        this.isNamedColor = this.isNamedColor.bind(this);\n    }\n\n    /**\n     * Returns a string representation of this color, returning known color names for\n     * color values that equate to known color values or hex formatted string otherwise\n     * @returns String representation of color\n     */\n    public toString(): string {\n        // Check for transparent\n        if (this.a === 0) {\n            return 'Transparent';\n        }\n\n        // Check for known color\n        for (const namedColor of Color.NamedColors) {\n            if (this.equalsHue(namedColor.color)) {\n                if (this.a === 255) {\n                    return namedColor.name;\n                }\n                else {\n                    return this.a / 255 + ';' + namedColor.name;\n                }\n            }\n        }\n\n        // Not known color, return hex string\n        return this.toHexString();\n    }\n\n    /**\n     * Returns a # prefixed hex representation of this color\n     * @returns Six or eight digit (alpha <> 255) hex prefixed color string\n     */\n    public toHexString(): string {\n        if (this.a === 255) {\n            return '#' + this.hexPart(this.r) + this.hexPart(this.g) + this.hexPart(this.b);\n        }\n        return '#' + this.hexPart(this.a) + this.hexPart(this.r) + this.hexPart(this.g) + this.hexPart(this.b);\n    }\n\n    /**\n     * Returns an rgb(r,g,b) or rgba(r,g,b,a) string representation of color\n     * @returns rgb() or rgba() (alpha <> 255) string representation.\n     */\n    public toStyleString(): string {\n        if (this.a === 255) {\n            return 'rgb(' + this.r + ',' + this.g + ',' + this.b + ')';\n        }\n        return 'rgba(' + this.r + ',' + this.g + ',' + this.b + ',' + this.a / 255 + ')';\n    }\n\n    /**\n     * Compares this color to another color for equality\n     * @param that - Color of interest\n     * @returns True if color of interest equals this\n     */\n    public equals(that: Color): boolean {\n        return that !== null && this.a === that.a && this.r === that.r && this.g === that.g && this.b === that.b;\n    }\n\n    /**\n     * Compares this color to another color for hue equality\n     * @param that - Color of interest\n     * @returns True if color of interest equals this without regard to alpha\n     */\n    public equalsHue(that: Color): boolean {\n        return this.r === that.r && this.g === that.g && this.b === that.b;\n    }\n\n    /**\n     * Determines if this color is a named color hue\n     * @returns True if this is a named color hue\n     */\n    public isNamedColor(): boolean {\n        for (const namedColor of Color.NamedColors) {\n            if (this.equalsHue(namedColor.color)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    public clone() {\n        return new Color(this.a, this.r, this.g, this.b);\n    }\n\n    /**\n     * Returns 0-255 encoded as two character hex string\n     * @param n - 0-255 color component\n     * @returns Two character hex string\n     */\n    private hexPart(n: number): string {\n        if (n < 16) {\n            return '0' + n.toString(16);\n        }\n        return n.toString(16);\n    }\n}\n\nColor.NamedColors.push(new NamedColor('Transparent', Color.Transparent));\nColor.NamedColors.push(new NamedColor('AliceBlue', Color.AliceBlue));\nColor.NamedColors.push(new NamedColor('AntiqueWhite', Color.AntiqueWhite));\nColor.NamedColors.push(new NamedColor('Aqua', Color.Aqua));\nColor.NamedColors.push(new NamedColor('Aquamarine', Color.Aquamarine));\nColor.NamedColors.push(new NamedColor('Azure', Color.Azure));\nColor.NamedColors.push(new NamedColor('Beige', Color.Beige));\nColor.NamedColors.push(new NamedColor('Bisque', Color.Bisque));\nColor.NamedColors.push(new NamedColor('Black', Color.Black));\nColor.NamedColors.push(new NamedColor('BlanchedAlmond', Color.BlanchedAlmond));\nColor.NamedColors.push(new NamedColor('Blue', Color.Blue));\nColor.NamedColors.push(new NamedColor('BlueViolet', Color.BlueViolet));\nColor.NamedColors.push(new NamedColor('Brown', Color.Brown));\nColor.NamedColors.push(new NamedColor('BurlyWood', Color.BurlyWood));\nColor.NamedColors.push(new NamedColor('CadetBlue', Color.CadetBlue));\nColor.NamedColors.push(new NamedColor('Chartreuse', Color.Chartreuse));\nColor.NamedColors.push(new NamedColor('Chocolate', Color.Chocolate));\nColor.NamedColors.push(new NamedColor('Coral', Color.Coral));\nColor.NamedColors.push(new NamedColor('CornflowerBlue', Color.CornflowerBlue));\nColor.NamedColors.push(new NamedColor('Cornsilk', Color.Cornsilk));\nColor.NamedColors.push(new NamedColor('Crimson', Color.Crimson));\nColor.NamedColors.push(new NamedColor('Cyan', Color.Cyan));\nColor.NamedColors.push(new NamedColor('DarkBlue', Color.DarkBlue));\nColor.NamedColors.push(new NamedColor('DarkCyan', Color.DarkCyan));\nColor.NamedColors.push(new NamedColor('DarkGoldenrod', Color.DarkGoldenrod));\nColor.NamedColors.push(new NamedColor('DarkGray', Color.DarkGray));\nColor.NamedColors.push(new NamedColor('DarkGreen', Color.DarkGreen));\nColor.NamedColors.push(new NamedColor('DarkKhaki', Color.DarkKhaki));\nColor.NamedColors.push(new NamedColor('DarkMagenta', Color.DarkMagenta));\nColor.NamedColors.push(new NamedColor('DarkOliveGreen', Color.DarkOliveGreen));\nColor.NamedColors.push(new NamedColor('DarkOrange', Color.DarkOrange));\nColor.NamedColors.push(new NamedColor('DarkOrchid', Color.DarkOrchid));\nColor.NamedColors.push(new NamedColor('DarkRed', Color.DarkRed));\nColor.NamedColors.push(new NamedColor('DarkSalmon', Color.DarkSalmon));\nColor.NamedColors.push(new NamedColor('DarkSeaGreen', Color.DarkSeaGreen));\nColor.NamedColors.push(new NamedColor('DarkSlateBlue', Color.DarkSlateBlue));\nColor.NamedColors.push(new NamedColor('DarkSlateGray', Color.DarkSlateGray));\nColor.NamedColors.push(new NamedColor('DarkTurquoise', Color.DarkTurquoise));\nColor.NamedColors.push(new NamedColor('DarkViolet', Color.DarkViolet));\nColor.NamedColors.push(new NamedColor('DeepPink', Color.DeepPink));\nColor.NamedColors.push(new NamedColor('DeepSkyBlue', Color.DeepSkyBlue));\nColor.NamedColors.push(new NamedColor('DimGray', Color.DimGray));\nColor.NamedColors.push(new NamedColor('DodgerBlue', Color.DodgerBlue));\nColor.NamedColors.push(new NamedColor('Firebrick', Color.Firebrick));\nColor.NamedColors.push(new NamedColor('FloralWhite', Color.FloralWhite));\nColor.NamedColors.push(new NamedColor('ForestGreen', Color.ForestGreen));\nColor.NamedColors.push(new NamedColor('Fuchsia', Color.Fuchsia));\nColor.NamedColors.push(new NamedColor('Gainsboro', Color.Gainsboro));\nColor.NamedColors.push(new NamedColor('GhostWhite', Color.GhostWhite));\nColor.NamedColors.push(new NamedColor('Gold', Color.Gold));\nColor.NamedColors.push(new NamedColor('Goldenrod', Color.Goldenrod));\nColor.NamedColors.push(new NamedColor('Gray', Color.Gray));\nColor.NamedColors.push(new NamedColor('Green', Color.Green));\nColor.NamedColors.push(new NamedColor('GreenYellow', Color.GreenYellow));\nColor.NamedColors.push(new NamedColor('Honeydew', Color.Honeydew));\nColor.NamedColors.push(new NamedColor('HotPink', Color.HotPink));\nColor.NamedColors.push(new NamedColor('IndianRed', Color.IndianRed));\nColor.NamedColors.push(new NamedColor('Indigo', Color.Indigo));\nColor.NamedColors.push(new NamedColor('Ivory', Color.Ivory));\nColor.NamedColors.push(new NamedColor('Khaki', Color.Khaki));\nColor.NamedColors.push(new NamedColor('Lavender', Color.Lavender));\nColor.NamedColors.push(new NamedColor('LavenderBlush', Color.LavenderBlush));\nColor.NamedColors.push(new NamedColor('LawnGreen', Color.LawnGreen));\nColor.NamedColors.push(new NamedColor('LemonChiffon', Color.LemonChiffon));\nColor.NamedColors.push(new NamedColor('LightBlue', Color.LightBlue));\nColor.NamedColors.push(new NamedColor('LightCoral', Color.LightCoral));\nColor.NamedColors.push(new NamedColor('LightCyan', Color.LightCyan));\nColor.NamedColors.push(new NamedColor('LightGoldenrodYellow', Color.LightGoldenrodYellow));\nColor.NamedColors.push(new NamedColor('LightGray', Color.LightGray));\nColor.NamedColors.push(new NamedColor('LightGreen', Color.LightGreen));\nColor.NamedColors.push(new NamedColor('LightPink', Color.LightPink));\nColor.NamedColors.push(new NamedColor('LightSalmon', Color.LightSalmon));\nColor.NamedColors.push(new NamedColor('LightSeaGreen', Color.LightSeaGreen));\nColor.NamedColors.push(new NamedColor('LightSkyBlue', Color.LightSkyBlue));\nColor.NamedColors.push(new NamedColor('LightSlateGray', Color.LightSlateGray));\nColor.NamedColors.push(new NamedColor('LightSteelBlue', Color.LightSteelBlue));\nColor.NamedColors.push(new NamedColor('LightYellow', Color.LightYellow));\nColor.NamedColors.push(new NamedColor('Lime', Color.Lime));\nColor.NamedColors.push(new NamedColor('LimeGreen', Color.LimeGreen));\nColor.NamedColors.push(new NamedColor('Linen', Color.Linen));\nColor.NamedColors.push(new NamedColor('Magenta', Color.Magenta));\nColor.NamedColors.push(new NamedColor('Maroon', Color.Maroon));\nColor.NamedColors.push(new NamedColor('MediumAquamarine', Color.MediumAquamarine));\nColor.NamedColors.push(new NamedColor('MediumBlue', Color.MediumBlue));\nColor.NamedColors.push(new NamedColor('MediumOrchid', Color.MediumOrchid));\nColor.NamedColors.push(new NamedColor('MediumPurple', Color.MediumPurple));\nColor.NamedColors.push(new NamedColor('MediumSeaGreen', Color.MediumSeaGreen));\nColor.NamedColors.push(new NamedColor('MediumSlateBlue', Color.MediumSlateBlue));\nColor.NamedColors.push(new NamedColor('MediumSpringGreen', Color.MediumSpringGreen));\nColor.NamedColors.push(new NamedColor('MediumTurquoise', Color.MediumTurquoise));\nColor.NamedColors.push(new NamedColor('MediumVioletRed', Color.MediumVioletRed));\nColor.NamedColors.push(new NamedColor('MidnightBlue', Color.MidnightBlue));\nColor.NamedColors.push(new NamedColor('MintCream', Color.MintCream));\nColor.NamedColors.push(new NamedColor('MistyRose', Color.MistyRose));\nColor.NamedColors.push(new NamedColor('Moccasin', Color.Moccasin));\nColor.NamedColors.push(new NamedColor('NavajoWhite', Color.NavajoWhite));\nColor.NamedColors.push(new NamedColor('Navy', Color.Navy));\nColor.NamedColors.push(new NamedColor('OldLace', Color.OldLace));\nColor.NamedColors.push(new NamedColor('Olive', Color.Olive));\nColor.NamedColors.push(new NamedColor('OliveDrab', Color.OliveDrab));\nColor.NamedColors.push(new NamedColor('Orange', Color.Orange));\nColor.NamedColors.push(new NamedColor('OrangeRed', Color.OrangeRed));\nColor.NamedColors.push(new NamedColor('Orchid', Color.Orchid));\nColor.NamedColors.push(new NamedColor('PaleGoldenrod', Color.PaleGoldenrod));\nColor.NamedColors.push(new NamedColor('PaleGreen', Color.PaleGreen));\nColor.NamedColors.push(new NamedColor('PaleTurquoise', Color.PaleTurquoise));\nColor.NamedColors.push(new NamedColor('PaleVioletRed', Color.PaleVioletRed));\nColor.NamedColors.push(new NamedColor('PapayaWhip', Color.PapayaWhip));\nColor.NamedColors.push(new NamedColor('PeachPuff', Color.PeachPuff));\nColor.NamedColors.push(new NamedColor('Peru', Color.Peru));\nColor.NamedColors.push(new NamedColor('Pink', Color.Pink));\nColor.NamedColors.push(new NamedColor('Plum', Color.Plum));\nColor.NamedColors.push(new NamedColor('PowderBlue', Color.PowderBlue));\nColor.NamedColors.push(new NamedColor('Purple', Color.Purple));\nColor.NamedColors.push(new NamedColor('Red', Color.Red));\nColor.NamedColors.push(new NamedColor('RosyBrown', Color.RosyBrown));\nColor.NamedColors.push(new NamedColor('RoyalBlue', Color.RoyalBlue));\nColor.NamedColors.push(new NamedColor('SaddleBrown', Color.SaddleBrown));\nColor.NamedColors.push(new NamedColor('Salmon', Color.Salmon));\nColor.NamedColors.push(new NamedColor('SandyBrown', Color.SandyBrown));\nColor.NamedColors.push(new NamedColor('SeaGreen', Color.SeaGreen));\nColor.NamedColors.push(new NamedColor('SeaShell', Color.SeaShell));\nColor.NamedColors.push(new NamedColor('Sienna', Color.Sienna));\nColor.NamedColors.push(new NamedColor('Silver', Color.Silver));\nColor.NamedColors.push(new NamedColor('SkyBlue', Color.SkyBlue));\nColor.NamedColors.push(new NamedColor('SlateBlue', Color.SlateBlue));\nColor.NamedColors.push(new NamedColor('SlateGray', Color.SlateGray));\nColor.NamedColors.push(new NamedColor('Snow', Color.Snow));\nColor.NamedColors.push(new NamedColor('SpringGreen', Color.SpringGreen));\nColor.NamedColors.push(new NamedColor('SteelBlue', Color.SteelBlue));\nColor.NamedColors.push(new NamedColor('Tan', Color.Tan));\nColor.NamedColors.push(new NamedColor('Teal', Color.Teal));\nColor.NamedColors.push(new NamedColor('Thistle', Color.Thistle));\nColor.NamedColors.push(new NamedColor('Tomato', Color.Tomato));\nColor.NamedColors.push(new NamedColor('Turquoise', Color.Turquoise));\nColor.NamedColors.push(new NamedColor('Violet', Color.Violet));\nColor.NamedColors.push(new NamedColor('Wheat', Color.Wheat));\nColor.NamedColors.push(new NamedColor('White', Color.White));\nColor.NamedColors.push(new NamedColor('WhiteSmoke', Color.WhiteSmoke));\nColor.NamedColors.push(new NamedColor('Yellow', Color.Yellow));\nColor.NamedColors.push(new NamedColor('YellowGreen', Color.Yellow));\n","import { ErrorMessages } from '../core/error-messages';\nimport { Point } from '../core/point';\nimport { Size } from '../core/size';\nimport { FillFactory } from '../fill/fill-factory';\nimport { ElementBase } from './element-base';\n\n/**\n * Renders stroked and/or filled rectangle\n */\nexport class RectangleElement extends ElementBase {\n    /**\n     * Rectangle element factory function\n     * @param x - X coordinate\n     * @param y - Y coordinate\n     * @param width - Width\n     * @param height - Height\n     * @returns New rectangle element\n     */\n    public static create(x?: number, y?: number, width?: number, height?: number) {\n        const e = new RectangleElement();\n        if (x !== undefined && y !== undefined && width !== undefined && height !== undefined) {\n            e._location = new Point(x, y);\n            e._size = new Size(width, height);\n        }\n        return e;\n    }\n\n    constructor() {\n        super('rectangle');\n    }\n\n    /**\n     * Copies properties of another object to this instance\n     * @param o - Source element\n     */\n    public parse(o: any): void {\n        super.parse(o);\n        if (!this._location) {\n            this._location = new Point(0, 0);\n        }\n    }\n\n    /**\n     * Serializes persistent properties to new object instance\n     * @returns Serialized element\n     */\n    public serialize(): any {\n        const o = super.serialize();\n        return o;\n    }\n\n    /**\n     * Clones this rectangle element to a new instance\n     * @returns Cloned rectangle instance\n     */\n    public clone(): RectangleElement {\n        const e: RectangleElement = RectangleElement.create();\n        super.cloneTo(e);\n        return e;\n    }\n\n    /**\n     * Render rectangle element to canvas context\n     * @param c - Rendering context\n     */\n    public draw(c: CanvasRenderingContext2D) {\n        const model = this.model;\n        if (!model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        const bounds = this.getBounds();\n        if (!bounds) {\n            throw new Error(ErrorMessages.BoundsAreUndefined);\n        }\n        const x = bounds.location.x;\n        const y = bounds.location.y;\n        const w = bounds.size.width;\n        const h = bounds.size.height;\n        c.save();\n        if (this.transform) {\n            model.setRenderTransform(c, this.transform, bounds.location);\n        }\n        if (FillFactory.setElementFill(c, this)) {\n            if (this.fillOffsetX || this.fillOffsetY) {\n                const fillOffsetX = this.fillOffsetX || 0;\n                const fillOffsetY = this.fillOffsetY || 0;\n                c.translate(x + fillOffsetX, y + fillOffsetY);\n                c.fillRect(-fillOffsetX, -fillOffsetY, w, h);\n                c.translate(-(x + fillOffsetX), -(y + fillOffsetY));\n            }\n            else {\n                c.translate(x, y);\n                c.fillRect(0, 0, w, h);\n                c.translate(-x, -y);\n            }\n        }\n        if (model.setElementStroke(c, this)) {\n            c.strokeRect(x, y, w, h);\n        }\n        c.restore();\n    }\n\n    /**\n     * Can element be stroked\n     * @returns Can stroke\n     */\n    public canStroke(): boolean {\n        return true;\n    }\n\n    /**\n     * Can element be filled\n     * @returns Can fill\n     */\n    public canFill(): boolean {\n        return true;\n    }\n}\n","import { Surface } from './surface';\nimport { SurfaceElement } from './surface-element';\n\n/**\n * Base class for layered surface elements\n */\nexport abstract class SurfaceLayer extends SurfaceElement {\n    /**\n     * True after item has been initialized\n     */\n    public isPrepared: boolean;\n\n    /**\n     * DOM Element\n     */\n    public element?: HTMLElement;\n\n    /**\n     * Layer opacity\n     */\n    public opacity: number;\n\n    /**\n     * Layer X Translation\n     */\n    public translateX: number;\n\n    /**\n     * Layer Y Translation\n     */\n    public translateY: number;\n\n    /**\n     * @param id - Item id\n     * @param left - Layout area x coordinate\n     * @param top - Layout area y coordinate\n     * @param width - Layout area width\n     * @param height - Layout area height\n     */\n    constructor(id: string, left: number, top: number, width: number, height: number) {\n        super(id, left, top, width, height);\n        this.addToSurface = this.addToSurface.bind(this);\n        this.prepare = this.prepare.bind(this);\n        this.destroy = this.destroy.bind(this);\n        this.onload = this.onload.bind(this);\n        this.onunload = this.onunload.bind(this);\n        this.setScale = this.setScale.bind(this);\n        this.setOpacity = this.setOpacity.bind(this);\n        this.setTranslateX = this.setTranslateX.bind(this);\n        this.setTranslateY = this.setTranslateY.bind(this);\n        this.isPrepared = false;\n        this.opacity = 1;\n        this.translateX = 0;\n        this.translateY = 0;\n    }\n\n    /**\n     * Adds layer to parent surface\n     * @param surface - Parent surface\n     */\n    public abstract addToSurface(surface: Surface): void;\n\n    /**\n     * Loads required requires and calls completion callback\n     */\n    public abstract prepare(callback: (result: boolean) => void): void;\n\n    /**\n     * Tears down and destroys visual elements\n     */\n    public abstract destroy(): void;\n\n    /**\n     * Onload initialization\n     */\n    public abstract onload(): void;\n\n    /**\n     * Onunload teardown\n     */\n    public abstract onunload(): void;\n\n    /**\n     * Sets rendering scale\n     */\n    public setScale(scale: number | undefined) {\n        return this;\n    }\n\n    /**\n     * Sets rendering opacity\n     */\n    public setOpacity(opacity: number) {\n        this.opacity = opacity;\n        return this;\n    }\n\n    /**\n     * Sets X translation\n     */\n    public setTranslateX(translateX: number) {\n        this.translateX = translateX;\n        return this;\n    }\n\n    /**\n     * Sets Y translation\n     */\n    public setTranslateY(translateY: number) {\n        this.translateY = translateY;\n        return this;\n    }\n}\n","import { ErrorMessages } from '../../core/error-messages';\r\nimport { Surface } from '../surface';\r\nimport { SurfacePane } from '../surface-pane';\r\n\r\n/**\r\n * Base class for pane transitions\r\n */\r\nexport abstract class PaneTransition {\r\n    public pane?: SurfacePane;\r\n    public target?: Surface;\r\n    public callback?: (pane: SurfacePane) => void;\r\n\r\n    constructor(pane: SurfacePane, target: Surface, callback: (pane: SurfacePane) => void) {\r\n        this.start = this.start.bind(this);\r\n        this.onStart = this.onStart.bind(this);\r\n        this.onComplete = this.onComplete.bind(this);\r\n        this.bind = this.bind.bind(this);\r\n        this.pane = pane;\r\n        this.target = target;\r\n        this.callback = callback;\r\n    }\r\n\r\n    public abstract start(): void;\r\n\r\n    public onStart() {\r\n        if (!this.pane || !this.target) {\r\n            return;\r\n        }\r\n        if (!this.pane.surface) {\r\n            throw new Error(ErrorMessages.PaneSurfaceIsUndefined);\r\n        }\r\n        this.pane.childSurface.resourceListenerEvent.clear();\r\n        if (this.pane.element) {\r\n            this.pane.element.style.overflow = 'hidden';\r\n        }\r\n        this.pane.childSurface = this.target;\r\n        this.target.scale = this.pane.surface.scale;\r\n        this.target.isChild = true;\r\n        this.pane.isPrepared = false;\r\n    }\r\n\r\n    public onComplete() {\r\n        const self = this;\r\n        if (!self.pane || !self.target) {\r\n            return;\r\n        }\r\n        if (self.callback) {\r\n            self.callback(self.pane);\r\n        }\r\n        self.pane.isPrepared = true;\r\n        self.pane.setHostDivScrolling();\r\n        self.target.onload();\r\n        self.pane = undefined;\r\n        self.callback = undefined;\r\n        self.target = undefined;\r\n    }\r\n\r\n    public bind(callback: (surface: Surface) => void, onBottom: boolean) {\r\n        if (!this.pane || !this.target) {\r\n            return;\r\n        }\r\n        const surface = this.target;\r\n        const hostDiv = this.pane.element;\r\n        if (!hostDiv) {\r\n            throw new Error(ErrorMessages.HostElementUndefined);\r\n        }\r\n        if (surface.controller) {\r\n            surface.onErrorInternal(ErrorMessages.SurfaceIsAlreadyBound);\r\n            return;\r\n        }\r\n        surface.hostDiv = hostDiv;\r\n        surface.createDiv(onBottom);\r\n        if (surface.model) {\r\n            surface.initializeController();\r\n            if (callback) {\r\n                callback(surface);\r\n            }\r\n        }\r\n        else {\r\n            surface.createModel(() => {\r\n                if (surface.model) {\r\n                    surface.initializeController();\r\n                    if (callback) {\r\n                        callback(surface);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { ElementCommand } from '../command/element-command';\nimport { IController } from '../controller/controller';\nimport { ErrorMessages } from '../core/error-messages';\nimport { TimerParameters } from '../core/timer-parameters';\nimport { ElementBase } from '../elements/element-base';\nimport { SpriteElement } from '../elements/sprite-element';\nimport { BitmapResource } from '../resource/bitmap-resource';\n\nexport type TransitionRenderFunction = (\n    context: CanvasRenderingContext2D,\n    c1: HTMLCanvasElement | undefined,\n    c2: HTMLCanvasElement | undefined,\n    offset: number | undefined,\n    left: number | undefined,\n    top: number | undefined,\n    width: number | undefined,\n    height: number | undefined\n) => void;\n\nexport interface INamedTransitionRenderFunction {\n    name: string;\n    render: TransitionRenderFunction;\n}\n\nexport type EasingFunction = (t: number) => number;\n\nexport interface INamedEasingFunction {\n    name: string;\n    ease: EasingFunction;\n}\n\n/**\n * Image transition rendering functions\n */\nexport class TransitionRenderer {\n    public static PUSH_FRAME_TRANSITION = 'pushFrameTransition';\n    public static POP_FRAME_TRANSITION = 'popFrameTransition';\n    public static SPRITE_INCREMENT = 'spriteIncrement';\n    public static SPRITE_TRANSITION = 'spriteTransition';\n\n    public static renderFunctions: INamedTransitionRenderFunction[] = [\n        { name: 'none', render: TransitionRenderer.renderNone },\n        { name: 'fade', render: TransitionRenderer.renderFade },\n        { name: 'pushLeft', render: TransitionRenderer.renderPushLeft },\n        { name: 'pushRight', render: TransitionRenderer.renderPushRight },\n        { name: 'pushUp', render: TransitionRenderer.renderPushUp },\n        { name: 'pushDown', render: TransitionRenderer.renderPushDown },\n        { name: 'wipeLeft', render: TransitionRenderer.renderWipeLeft },\n        { name: 'wipeRight', render: TransitionRenderer.renderWipeRight },\n        { name: 'wipeUp', render: TransitionRenderer.renderWipeUp },\n        { name: 'wipeDown', render: TransitionRenderer.renderWipeDown },\n        { name: 'slideLeft', render: TransitionRenderer.renderSlideLeft },\n        { name: 'slideRight', render: TransitionRenderer.renderSlideRight },\n        { name: 'slideUp', render: TransitionRenderer.renderSlideUp },\n        { name: 'slideDown', render: TransitionRenderer.renderSlideDown },\n        { name: 'slideLeftDown', render: TransitionRenderer.renderSlideLeftDown },\n        { name: 'slideRightDown', render: TransitionRenderer.renderSlideRightDown },\n        { name: 'slideLeftUp', render: TransitionRenderer.renderSlideLeftUp },\n        { name: 'slideRightUp', render: TransitionRenderer.renderSlideRightUp },\n        { name: 'revealLeft', render: TransitionRenderer.renderRevealLeft },\n        { name: 'revealRight', render: TransitionRenderer.renderRevealRight },\n        { name: 'revealUp', render: TransitionRenderer.renderRevealUp },\n        { name: 'revealDown', render: TransitionRenderer.renderRevealDown },\n        { name: 'revealLeftDown', render: TransitionRenderer.renderRevealLeftDown },\n        { name: 'revealRightDown', render: TransitionRenderer.renderRevealRightDown },\n        { name: 'revealLeftUp', render: TransitionRenderer.renderRevealLeftUp },\n        { name: 'revealRightUp', render: TransitionRenderer.renderRevealRightUp },\n        { name: 'ellipticalIn', render: TransitionRenderer.renderEllipticalIn },\n        { name: 'ellipticalOut', render: TransitionRenderer.renderEllipticalOut },\n        { name: 'rectangularIn', render: TransitionRenderer.renderRectangularIn },\n        { name: 'rectangularOut', render: TransitionRenderer.renderRectangularOut },\n        { name: 'grid', render: TransitionRenderer.renderGrid },\n        { name: 'expandHorizontal', render: TransitionRenderer.renderExpandHorizontal },\n        { name: 'expandVertical', render: TransitionRenderer.renderExpandVertical },\n        { name: 'zoomIn', render: TransitionRenderer.renderZoomIn },\n        { name: 'zoomOut', render: TransitionRenderer.renderZoomOut },\n        { name: 'zoomRotateIn', render: TransitionRenderer.renderZoomRotateIn },\n        { name: 'zoomRotateOut', render: TransitionRenderer.renderZoomRotateOut },\n        { name: 'radar', render: TransitionRenderer.renderRadar }\n    ];\n\n    public static easingFunctions: INamedEasingFunction[] = [\n        { name: 'easeLinear', ease: TransitionRenderer.easeLinear },\n        { name: 'easeInQuad', ease: TransitionRenderer.easeInQuad },\n        { name: 'easeOutQuad', ease: TransitionRenderer.easeOutQuad },\n        { name: 'easeInOutQuad', ease: TransitionRenderer.easeInOutQuad },\n        { name: 'easeInCubic', ease: TransitionRenderer.easeInCubic },\n        { name: 'easeOutCubic', ease: TransitionRenderer.easeOutCubic },\n        { name: 'easeInOutCubic', ease: TransitionRenderer.easeInOutCubic },\n        { name: 'easeInQuart', ease: TransitionRenderer.easeInQuart },\n        { name: 'easeOutQuart', ease: TransitionRenderer.easeOutQuart },\n        { name: 'easeInOutQuart', ease: TransitionRenderer.easeInOutQuart },\n        { name: 'easeInQuint', ease: TransitionRenderer.easeInQuint },\n        { name: 'easeOutQuint', ease: TransitionRenderer.easeOutQuint },\n        { name: 'easeInOutQuint', ease: TransitionRenderer.easeInOutQuint }\n    ];\n\n    public static transitionSprite(\n        controller: IController,\n        sprite: SpriteElement,\n        sourceFrame: number,\n        targetFrame: number,\n        transition: string\n    ) {\n        const size = sprite.getSize();\n        if (!size) {\n            throw new Error(ErrorMessages.SizeUndefined);\n        }\n        if (!sprite.model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        if (!sprite.frames) {\n            return;\n        }\n        if (!sprite.c2) {\n            sprite.c2 = document.createElement('canvas');\n            sprite.c2.width = size.width;\n            sprite.c2.height = size.height;\n        }\n        if (!sprite.c1) {\n            sprite.c1 = document.createElement('canvas');\n            sprite.c1.width = size.width;\n            sprite.c1.height = size.height;\n        }\n\n        if (sprite.c1index === undefined || sprite.c1index !== sourceFrame) {\n            const c = sprite.c1.getContext('2d');\n            const f = sprite.frames[sourceFrame];\n            const r = sprite.model.resourceManager.get(f.source) as BitmapResource;\n            if (c && r.image) {\n                c.clearRect(0, 0, size.width, size.height);\n                c.drawImage(r.image, f.x, f.y, f.width, f.height, 0, 0, size.width, size.height);\n            }\n            sprite.c1index = sourceFrame;\n        }\n        if (sprite.c2index !== undefined || sprite.c2index !== targetFrame) {\n            const c = sprite.c2.getContext('2d');\n            const f = sprite.frames[targetFrame];\n            const r = sprite.model.resourceManager.get(f.source) as BitmapResource;\n            if (c && r.image) {\n                c.clearRect(0, 0, size.width, size.height);\n                c.drawImage(r.image, f.x, f.y, f.width, f.height, 0, 0, size.width, size.height);\n            }\n            sprite.c2index = targetFrame;\n        }\n        sprite.transition = TransitionRenderer.getRenderFunction(transition);\n        // sprite.transitionOffset = spriteState.offset;\n\n        // Animate on timer\n        if (sprite.timerHandle) {\n            clearInterval(sprite.timerHandle);\n        }\n        let offset = 0;\n        sprite.timerHandle = setInterval(() => {\n            offset += 0.075;\n            if (offset >= 1.0) {\n                if (sprite.timerHandle !== undefined) {\n                    clearInterval(sprite.timerHandle);\n                    sprite.timerHandle = undefined;\n                }\n                sprite.frameIndex = targetFrame;\n                sprite.transition = undefined;\n                sprite.transitionOffset = undefined;\n                sprite.c1index = undefined;\n                sprite.c2index = undefined;\n                sprite.c2 = undefined;\n                sprite.c1 = undefined;\n                controller.draw();\n            }\n            else {\n                sprite.transitionOffset = TransitionRenderer.getEasingFunction('easeInOutCubic')(offset);\n                controller.draw();\n            }\n        }, 15);\n    }\n\n    public static pushFrameTransition(\n        c: IController,\n        el: SpriteElement,\n        command: string,\n        trigger: string,\n        parameters: any\n    ) {\n        if (!el.frameStack) {\n            el.frameStack = [];\n        }\n        el.frameStack.push(el.frameIndex);\n        const ec: ElementCommand = ElementCommand.parse(command);\n        const sourceFrame: number = el.frameIndex;\n        const targetFrame: number = parseInt(ec.parameter, 10);\n        TransitionRenderer.transitionSprite(c, el, sourceFrame, targetFrame, 'fade');\n    }\n\n    public static popFrameTransition(\n        c: IController,\n        el: SpriteElement,\n        command: string,\n        trigger: string,\n        parameters: any\n    ) {\n        if (!el.frameStack) {\n            return;\n        }\n        const sourceFrame: number = el.frameIndex;\n        let targetFrame: number = sourceFrame;\n        if (el.frameStack.length > 0) {\n            const frame = el.frameStack.pop();\n            if (frame) {\n                targetFrame = frame;\n            }\n        }\n        if (el.frameStack.length === 0) {\n            el.frameStack = undefined;\n        }\n        TransitionRenderer.transitionSprite(c, el, sourceFrame, targetFrame, 'fade');\n    }\n\n    public static spriteIncrementHandler(\n        c: IController,\n        el: SpriteElement,\n        command: string,\n        trigger: string,\n        parameters: TimerParameters\n    ) {\n        const sprite = el;\n        const time = parameters.elapsedTime;\n        const spriteState = sprite.getStateForTime(time);\n        if (!spriteState) {\n            return;\n        }\n        if (sprite.frameIndex !== spriteState.frame1) {\n            sprite.frameIndex = spriteState.frame1;\n            c.invalidate();\n        }\n    }\n\n    public static renderNone(\n        context: CanvasRenderingContext2D,\n        c1?: HTMLCanvasElement,\n        c2?: HTMLCanvasElement,\n        offset?: number,\n        left?: number,\n        top?: number,\n        width?: number,\n        height?: number\n    ): void {\n        if (c1 && left !== undefined && top !== undefined && width !== undefined && height !== undefined) {\n            context.drawImage(c1, left, top, width, height);\n        }\n    }\n\n    public static renderFade(\n        context: CanvasRenderingContext2D,\n        c1: HTMLCanvasElement,\n        c2: HTMLCanvasElement,\n        offset: number,\n        left: number,\n        top: number,\n        width: number,\n        height: number\n    ): void {\n        context.globalAlpha = 1.0;\n        context.drawImage(c1, left, top, width, height);\n        context.globalAlpha = offset;\n        context.drawImage(c2, left, top, width, height);\n    }\n\n    public static renderPushLeft(\n        context: CanvasRenderingContext2D,\n        c1: HTMLCanvasElement,\n        c2: HTMLCanvasElement,\n        offset: number,\n        left: number,\n        top: number,\n        width: number,\n        height: number\n    ): void {\n        const offsetX = offset * width;\n        context.drawImage(c2, left + width - offsetX, top);\n        context.drawImage(c1, left - offsetX, top);\n    }\n\n    public static renderPushRight(\n        context: CanvasRenderingContext2D,\n        c1: HTMLCanvasElement,\n        c2: HTMLCanvasElement,\n        offset: number,\n        left: number,\n        top: number,\n        width: number,\n        height: number\n    ): void {\n        const offsetX = offset * width;\n        context.drawImage(c2, left - width + offsetX, top);\n        context.drawImage(c1, left + offsetX, top);\n    }\n\n    public static renderPushUp(\n        context: CanvasRenderingContext2D,\n        c1: HTMLCanvasElement,\n        c2: HTMLCanvasElement,\n        offset: number,\n        left: number,\n        top: number,\n        width: number,\n        height: number\n    ): void {\n        const offsetY = offset * height;\n        context.drawImage(c2, left, top + height - offsetY);\n        context.drawImage(c1, left, top - offsetY);\n    }\n\n    public static renderPushDown(\n        context: CanvasRenderingContext2D,\n        c1: HTMLCanvasElement,\n        c2: HTMLCanvasElement,\n        offset: number,\n        left: number,\n        top: number,\n        width: number,\n        height: number\n    ): void {\n        const offsetY = offset * height;\n        context.drawImage(c2, left, top - height + offsetY);\n        context.drawImage(c1, left, top + offsetY);\n    }\n\n    public static renderWipeLeft(\n        context: CanvasRenderingContext2D,\n        c1: HTMLCanvasElement,\n        c2: HTMLCanvasElement,\n        offset: number,\n        left: number,\n        top: number,\n        width: number,\n        height: number\n    ): void {\n        const offsetX = offset * width;\n        context.drawImage(c1, left, top);\n        if (offsetX >= 1) {\n            context.drawImage(c2, width - offsetX, 0, offsetX, height, left + width - offsetX, top, offsetX, height);\n        }\n    }\n\n    public static renderWipeRight(\n        context: CanvasRenderingContext2D,\n        c1: HTMLCanvasElement,\n        c2: HTMLCanvasElement,\n        offset: number,\n        left: number,\n        top: number,\n        width: number,\n        height: number\n    ): void {\n        const offsetX = offset * width;\n        context.drawImage(c1, left, top);\n        if (offsetX >= 1) {\n            context.drawImage(c2, 0, 0, offsetX, height, left, top, offsetX, height);\n        }\n    }\n\n    public static renderWipeUp(\n        context: CanvasRenderingContext2D,\n        c1: HTMLCanvasElement,\n        c2: HTMLCanvasElement,\n        offset: number,\n        left: number,\n        top: number,\n        width: number,\n        height: number\n    ): void {\n        const offsetY = offset * height;\n        context.drawImage(c1, left, top);\n        if (offsetY >= 1) {\n            context.drawImage(c2, 0, height - offsetY, width, offsetY, left, top + height - offsetY, width, offsetY);\n        }\n    }\n\n    public static renderWipeDown(\n        context: CanvasRenderingContext2D,\n        c1: HTMLCanvasElement,\n        c2: HTMLCanvasElement,\n        offset: number,\n        left: number,\n        top: number,\n        width: number,\n        height: number\n    ): void {\n        const offsetY = offset * height;\n        context.drawImage(c1, left, top);\n        if (offsetY >= 1) {\n            context.drawImage(c2, 0, 0, width, offsetY, left, top, width, offsetY);\n        }\n    }\n\n    public static renderSlideLeft(\n        context: CanvasRenderingContext2D,\n        c1: HTMLCanvasElement,\n        c2: HTMLCanvasElement,\n        offset: number,\n        left: number,\n        top: number,\n        width: number,\n        height: number\n    ): void {\n        const offsetX = offset * width;\n        context.drawImage(c1, left, top);\n        context.drawImage(c2, left + width - offsetX, top);\n    }\n\n    public static renderSlideRight(\n        context: CanvasRenderingContext2D,\n        c1: HTMLCanvasElement,\n        c2: HTMLCanvasElement,\n        offset: number,\n        left: number,\n        top: number,\n        width: number,\n        height: number\n    ): void {\n        const offsetX = offset * width;\n        context.drawImage(c1, left, top);\n        context.drawImage(c2, left - width + offsetX, top);\n    }\n\n    public static renderSlideUp(\n        context: CanvasRenderingContext2D,\n        c1: HTMLCanvasElement,\n        c2: HTMLCanvasElement,\n        offset: number,\n        left: number,\n        top: number,\n        width: number,\n        height: number\n    ): void {\n        const offsetY = offset * height;\n        context.drawImage(c1, left, top);\n        context.drawImage(c2, left, top + height - offsetY);\n    }\n\n    public static renderSlideDown(\n        context: CanvasRenderingContext2D,\n        c1: HTMLCanvasElement,\n        c2: HTMLCanvasElement,\n        offset: number,\n        left: number,\n        top: number,\n        width: number,\n        height: number\n    ): void {\n        const offsetY = offset * height;\n        context.drawImage(c1, left, top);\n        context.drawImage(c2, left, top - height + offsetY);\n    }\n\n    public static renderSlideLeftDown(\n        context: CanvasRenderingContext2D,\n        c1: HTMLCanvasElement,\n        c2: HTMLCanvasElement,\n        offset: number,\n        left: number,\n        top: number,\n        width: number,\n        height: number\n    ): void {\n        const offsetX = offset * width;\n        const offsetY = offset * height;\n        context.drawImage(c1, left, top);\n        context.drawImage(c2, left + width - offsetX, top - height + offsetY);\n    }\n\n    public static renderSlideRightDown(\n        context: CanvasRenderingContext2D,\n        c1: HTMLCanvasElement,\n        c2: HTMLCanvasElement,\n        offset: number,\n        left: number,\n        top: number,\n        width: number,\n        height: number\n    ): void {\n        const offsetX = offset * width;\n        const offsetY = offset * height;\n        context.drawImage(c1, left, top);\n        context.drawImage(c2, left - width + offsetX, top - height + offsetY);\n    }\n\n    public static renderSlideLeftUp(\n        context: CanvasRenderingContext2D,\n        c1: HTMLCanvasElement,\n        c2: HTMLCanvasElement,\n        offset: number,\n        left: number,\n        top: number,\n        width: number,\n        height: number\n    ): void {\n        const offsetX = offset * width;\n        const offsetY = offset * height;\n        context.drawImage(c1, left, top);\n        context.drawImage(c2, left + width - offsetX, top + height - offsetY);\n    }\n\n    public static renderSlideRightUp(\n        context: CanvasRenderingContext2D,\n        c1: HTMLCanvasElement,\n        c2: HTMLCanvasElement,\n        offset: number,\n        left: number,\n        top: number,\n        width: number,\n        height: number\n    ): void {\n        const offsetX = offset * width;\n        const offsetY = offset * height;\n        context.drawImage(c1, left, top);\n        context.drawImage(c2, left - width + offsetX, top + height - offsetY);\n    }\n\n    public static renderRevealLeft(\n        context: CanvasRenderingContext2D,\n        c1: HTMLCanvasElement,\n        c2: HTMLCanvasElement,\n        offset: number,\n        left: number,\n        top: number,\n        width: number,\n        height: number\n    ): void {\n        const offsetX = offset * width;\n        context.drawImage(c2, left, top);\n        context.drawImage(c1, left - offsetX, top);\n    }\n\n    public static renderRevealRight(\n        context: CanvasRenderingContext2D,\n        c1: HTMLCanvasElement,\n        c2: HTMLCanvasElement,\n        offset: number,\n        left: number,\n        top: number,\n        width: number,\n        height: number\n    ): void {\n        const offsetX = offset * width;\n        context.drawImage(c2, left, top);\n        context.drawImage(c1, left + offsetX, top);\n    }\n\n    public static renderRevealUp(\n        context: CanvasRenderingContext2D,\n        c1: HTMLCanvasElement,\n        c2: HTMLCanvasElement,\n        offset: number,\n        left: number,\n        top: number,\n        width: number,\n        height: number\n    ): void {\n        const offsetY = offset * height;\n        context.drawImage(c2, left, top);\n        context.drawImage(c1, left, top - offsetY);\n    }\n\n    public static renderRevealDown(\n        context: CanvasRenderingContext2D,\n        c1: HTMLCanvasElement,\n        c2: HTMLCanvasElement,\n        offset: number,\n        left: number,\n        top: number,\n        width: number,\n        height: number\n    ): void {\n        const offsetY = offset * height;\n        context.drawImage(c2, left, top);\n        context.drawImage(c1, left, top + offsetY);\n    }\n\n    public static renderRevealLeftDown(\n        context: CanvasRenderingContext2D,\n        c1: HTMLCanvasElement,\n        c2: HTMLCanvasElement,\n        offset: number,\n        left: number,\n        top: number,\n        width: number,\n        height: number\n    ): void {\n        const offsetX = offset * width;\n        const offsetY = offset * height;\n        context.drawImage(c2, left, top);\n        context.drawImage(c1, left - offsetX, top + offsetY);\n    }\n\n    public static renderRevealRightDown(\n        context: CanvasRenderingContext2D,\n        c1: HTMLCanvasElement,\n        c2: HTMLCanvasElement,\n        offset: number,\n        left: number,\n        top: number,\n        width: number,\n        height: number\n    ): void {\n        const offsetX = offset * width;\n        const offsetY = offset * height;\n        context.drawImage(c2, left, top);\n        context.drawImage(c1, left + offsetX, top + offsetY);\n    }\n\n    public static renderRevealLeftUp(\n        context: CanvasRenderingContext2D,\n        c1: HTMLCanvasElement,\n        c2: HTMLCanvasElement,\n        offset: number,\n        left: number,\n        top: number,\n        width: number,\n        height: number\n    ): void {\n        const offsetX = offset * width;\n        const offsetY = offset * height;\n        context.drawImage(c2, left, top);\n        context.drawImage(c1, left - offsetX, top - offsetY);\n    }\n\n    public static renderRevealRightUp(\n        context: CanvasRenderingContext2D,\n        c1: HTMLCanvasElement,\n        c2: HTMLCanvasElement,\n        offset: number,\n        left: number,\n        top: number,\n        width: number,\n        height: number\n    ): void {\n        const offsetX = offset * width;\n        const offsetY = offset * height;\n        context.drawImage(c2, left, top);\n        context.drawImage(c1, left + offsetX, top - offsetY);\n    }\n\n    public static renderEllipticalOut(\n        context: CanvasRenderingContext2D,\n        c1: HTMLCanvasElement,\n        c2: HTMLCanvasElement,\n        offset: number,\n        left: number,\n        top: number,\n        width: number,\n        height: number\n    ): void {\n        context.drawImage(c1, left, top);\n        context.beginPath();\n        const w = Math.round(width * offset);\n        const h = Math.round(height * offset);\n        const rw = w * 1.414;\n        const rh = h * 1.414;\n        const cx = left + width / 2;\n        const cy = top + height / 2;\n        let x;\n        let y;\n        let ox;\n        let oy;\n        let xe;\n        let ye;\n        let xm;\n        let ym;\n        const kappa = 0.5522848;\n        x = cx - rw / 2;\n        y = cy - rh / 2;\n        ox = rw / 2 * kappa; // control point offset horizontal\n        oy = rh / 2 * kappa; // control point offset vertical\n        xe = x + rw; // x-end\n        ye = y + rh; // y-end\n        xm = x + rw / 2; // x-middle\n        ym = y + rh / 2; // y-middle\n        context.moveTo(x, ym);\n        context.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n        context.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n        context.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n        context.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n        context.clip();\n        context.drawImage(c2, left, top);\n    }\n\n    public static renderEllipticalIn(\n        context: CanvasRenderingContext2D,\n        c1: HTMLCanvasElement,\n        c2: HTMLCanvasElement,\n        offset: number,\n        left: number,\n        top: number,\n        width: number,\n        height: number\n    ): void {\n        context.drawImage(c2, left, top);\n        context.beginPath();\n        const w = Math.round(width * (1.0 - offset));\n        const h = Math.round(height * (1.0 - offset));\n        const rw = w * 1.414;\n        const rh = h * 1.414;\n        const cx = left + width / 2;\n        const cy = top + height / 2;\n        let x;\n        let y;\n        let ox;\n        let oy;\n        let xe;\n        let ye;\n        let xm;\n        let ym;\n        const kappa = 0.5522848;\n        x = cx - rw / 2;\n        y = cy - rh / 2;\n        ox = rw / 2 * kappa; // control point offset horizontal\n        oy = rh / 2 * kappa; // control point offset vertical\n        xe = x + rw; // x-end\n        ye = y + rh; // y-end\n        xm = x + rw / 2; // x-middle\n        ym = y + rh / 2; // y-middle\n        context.moveTo(x, ym);\n        context.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n        context.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n        context.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n        context.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n        context.clip();\n        context.drawImage(c1, left, top);\n    }\n\n    public static renderRectangularIn(\n        context: CanvasRenderingContext2D,\n        c1: HTMLCanvasElement,\n        c2: HTMLCanvasElement,\n        offset: number,\n        left: number,\n        top: number,\n        width: number,\n        height: number\n    ): void {\n        context.drawImage(c2, left, top);\n        context.beginPath();\n        const rw = width / 2.0 * (1.0 - offset);\n        const rh = height / 2.0 * (1.0 - offset);\n        context.moveTo(left + width / 2 - rw, top + height / 2 - rh);\n        context.lineTo(left + width / 2 + rw, top + height / 2 - rh);\n        context.lineTo(left + width / 2 + rw, top + height / 2 + rh);\n        context.lineTo(left + width / 2 - rw, top + height / 2 + rh);\n        context.clip();\n        context.drawImage(c1, left, top);\n    }\n\n    public static renderRectangularOut(\n        context: CanvasRenderingContext2D,\n        c1: HTMLCanvasElement,\n        c2: HTMLCanvasElement,\n        offset: number,\n        left: number,\n        top: number,\n        width: number,\n        height: number\n    ): void {\n        context.drawImage(c1, left, top);\n        context.beginPath();\n        const rw = width / 2.0 * offset;\n        const rh = height / 2.0 * offset;\n        context.moveTo(left + width / 2 - rw, top + height / 2 - rh);\n        context.lineTo(left + width / 2 + rw, top + height / 2 - rh);\n        context.lineTo(left + width / 2 + rw, top + height / 2 + rh);\n        context.lineTo(left + width / 2 - rw, top + height / 2 + rh);\n        context.clip();\n        context.drawImage(c2, left, top);\n    }\n\n    public static renderGrid(\n        context: CanvasRenderingContext2D,\n        c1: HTMLCanvasElement,\n        c2: HTMLCanvasElement,\n        offset: number,\n        left: number,\n        top: number,\n        width: number,\n        height: number\n    ): void {\n        context.drawImage(c1, left, top);\n        context.beginPath();\n        const hdiv = 8;\n        const vdiv = 6;\n        const rw = width / (hdiv * 2) * offset;\n        const rh = height / (vdiv * 2) * offset;\n        const cx = width / hdiv;\n        const cy = height / vdiv;\n        let i;\n        let j;\n        let x;\n        let y;\n        for (j = 0; j < vdiv; j++) {\n            for (i = 0; i < hdiv; i++) {\n                x = left + i * cx + cx / 2;\n                y = top + j * cy + cy / 2;\n                context.moveTo(x - rw, y - rh);\n                context.lineTo(x + rw, y - rh);\n                context.lineTo(x + rw, y + rh);\n                context.lineTo(x - rw, y + rh);\n            }\n        }\n        context.clip();\n        context.drawImage(c2, left, top);\n    }\n\n    public static renderExpandHorizontal(\n        context: CanvasRenderingContext2D,\n        c1: HTMLCanvasElement,\n        c2: HTMLCanvasElement,\n        offset: number,\n        left: number,\n        top: number,\n        width: number,\n        height: number\n    ): void {\n        context.drawImage(c1, left, top);\n        const destinationWidth = width * offset;\n        if (destinationWidth > 0) {\n            context.drawImage(c2, left + (width - destinationWidth) / 2, top, destinationWidth, height);\n        }\n    }\n\n    public static renderExpandVertical(\n        context: CanvasRenderingContext2D,\n        c1: HTMLCanvasElement,\n        c2: HTMLCanvasElement,\n        offset: number,\n        left: number,\n        top: number,\n        width: number,\n        height: number\n    ): void {\n        context.drawImage(c1, left, top);\n        const destinationHeight = height * offset;\n        if (destinationHeight > 0) {\n            context.drawImage(c2, left, top + (height - destinationHeight) / 2, width, destinationHeight);\n        }\n    }\n\n    public static renderZoomIn(\n        context: CanvasRenderingContext2D,\n        c1: HTMLCanvasElement,\n        c2: HTMLCanvasElement,\n        offset: number,\n        left: number,\n        top: number,\n        width: number,\n        height: number\n    ): void {\n        context.drawImage(c1, left, top);\n        const destinationWidth = width * offset;\n        const destinationHeight = height * offset;\n        if (destinationHeight > 0) {\n            context.drawImage(\n                c2,\n                left + (width - destinationWidth) / 2,\n                top + (height - destinationHeight) / 2,\n                destinationWidth,\n                destinationHeight\n            );\n        }\n    }\n\n    public static renderZoomOut(\n        context: CanvasRenderingContext2D,\n        c1: HTMLCanvasElement,\n        c2: HTMLCanvasElement,\n        offset: number,\n        left: number,\n        top: number,\n        width: number,\n        height: number\n    ): void {\n        context.drawImage(c2, left, top);\n        const destinationWidth = width * (1 - offset);\n        const destinationHeight = height * (1 - offset);\n        if (destinationHeight > 0) {\n            context.drawImage(\n                c1,\n                left + (width - destinationWidth) / 2,\n                top + (height - destinationHeight) / 2,\n                destinationWidth,\n                destinationHeight\n            );\n        }\n    }\n\n    public static renderZoomRotateIn(\n        context: CanvasRenderingContext2D,\n        c1: HTMLCanvasElement,\n        c2: HTMLCanvasElement,\n        offset: number,\n        left: number,\n        top: number,\n        width: number,\n        height: number\n    ): void {\n        context.drawImage(c1, left, top);\n        const destinationWidth = width * offset;\n        const destinationHeight = height * offset;\n        const angle = offset * Math.PI * 2;\n        if (destinationHeight > 0) {\n            context.translate(left + width / 2, top + height / 2);\n            context.rotate(angle);\n            context.translate(-(left + width / 2), -(top + height / 2));\n            context.drawImage(\n                c2,\n                left + (width - destinationWidth) / 2,\n                top + (height - destinationHeight) / 2,\n                destinationWidth,\n                destinationHeight\n            );\n        }\n    }\n\n    public static renderZoomRotateOut(\n        context: CanvasRenderingContext2D,\n        c1: HTMLCanvasElement,\n        c2: HTMLCanvasElement,\n        offset: number,\n        left: number,\n        top: number,\n        width: number,\n        height: number\n    ): void {\n        context.drawImage(c2, left, top);\n        const destinationWidth = width * (1 - offset);\n        const destinationHeight = height * (1 - offset);\n        const angle = (1 - offset) * Math.PI * 2;\n        if (destinationHeight > 0) {\n            context.translate(left + width / 2, top + height / 2);\n            context.rotate(angle);\n            context.translate(-(left + width / 2), -(top + height / 2));\n            context.drawImage(\n                c1,\n                left + (width - destinationWidth) / 2,\n                top + (height - destinationHeight) / 2,\n                destinationWidth,\n                destinationHeight\n            );\n        }\n    }\n\n    public static renderRadar(\n        context: CanvasRenderingContext2D,\n        c1: HTMLCanvasElement,\n        c2: HTMLCanvasElement,\n        offset: number,\n        left: number,\n        top: number,\n        width: number,\n        height: number\n    ): void {\n        context.drawImage(c1, left, top);\n        context.beginPath();\n        context.moveTo(left + width / 2, top + height / 2);\n        let angle = 0;\n        let x1;\n        let y1;\n        for (angle = 0; angle <= Math.PI * 2; angle += 0.001) {\n            x1 = left + Math.cos(angle * offset) * width;\n            y1 = top + Math.sin(angle * offset) * height;\n            context.lineTo(x1 + width / 2, y1 + height / 2);\n        }\n        context.closePath();\n        context.clip();\n        context.drawImage(c2, left, top);\n    }\n\n    //\n    // Easing functions\n    //\n\n    // No easing, no acceleration\n    public static easeLinear(t: number) {\n        return t;\n    }\n\n    // Accelaration from zero velocity\n    public static easeInQuad(t: number) {\n        return t * t;\n    }\n\n    // Deceleration to zero velocity\n    public static easeOutQuad(t: number) {\n        return t * (2 - t);\n    }\n\n    // Acceleration until halfway, then Deceleration\n    public static easeInOutQuad(t: number) {\n        return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\n    }\n\n    // Acceleration from zero velocity\n    public static easeInCubic(t: number) {\n        return t * t * t;\n    }\n\n    // Deceleration to zero velocity\n    public static easeOutCubic(t: number) {\n        return --t * t * t + 1;\n    }\n\n    // Acceleration until halfway, then deceleration\n    public static easeInOutCubic(t: number) {\n        return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n    }\n\n    // Acceleration from zero velocity\n    public static easeInQuart(t: number) {\n        return t * t * t * t;\n    }\n\n    // Deceleration to zero velocity\n    public static easeOutQuart(t: number) {\n        return 1 - --t * t * t * t;\n    }\n\n    // Acceleration until halfway, then deceleration\n    public static easeInOutQuart(t: number) {\n        return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\n    }\n\n    // Acceleration from zero velocity\n    public static easeInQuint(t: number) {\n        return t * t * t * t * t;\n    }\n\n    // Deceleration to zero velocity\n    public static easeOutQuint(t: number) {\n        return 1 + --t * t * t * t * t;\n    }\n\n    // Acceleration until halfway, then deceleration\n    public static easeInOutQuint(t: number) {\n        return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n    }\n\n    public static getRenderFunction(name: string): TransitionRenderFunction {\n        if (!name) {\n            return this.renderNone;\n        }\n        for (const renderFunction of TransitionRenderer.renderFunctions) {\n            if (renderFunction.name.toLocaleLowerCase() === name.toLocaleLowerCase()) {\n                return renderFunction.render;\n            }\n        }\n        return this.renderNone;\n    }\n\n    public static getEasingFunction(name: string): EasingFunction {\n        for (const easingFunction of TransitionRenderer.easingFunctions) {\n            if (easingFunction.name.toLocaleLowerCase() === name.toLocaleLowerCase()) {\n                return easingFunction.ease;\n            }\n        }\n        return TransitionRenderer.easeLinear;\n    }\n\n    public static renderTransition(\n        name: string,\n        context: CanvasRenderingContext2D,\n        c1: HTMLCanvasElement,\n        c2: HTMLCanvasElement,\n        offset: number,\n        left: number,\n        top: number,\n        width: number,\n        height: number\n    ): void {\n        const renderFunction: TransitionRenderFunction = TransitionRenderer.getRenderFunction(name);\n        renderFunction(context, c1, c2, offset, left, top, width, height);\n    }\n\n    //\n    // Command Implementations\n    //\n\n    public static spriteTransitionHandler(\n        controller: IController,\n        element: ElementBase,\n        command: string,\n        trigger: string,\n        parameters: any\n    ) {\n        const sprite = element as SpriteElement;\n        if (!sprite) {\n            return;\n        }\n        const time = parameters.elapsedTime;\n\n        const spriteState = sprite.getStateForTime(time);\n        if (!spriteState) {\n            return;\n        }\n\n        // If no transition\n        if (!spriteState.transition) {\n            if (sprite.transition || sprite.frameIndex !== spriteState.frame1) {\n                sprite.frameIndex = spriteState.frame1;\n                sprite.transition = undefined;\n                sprite.transitionOffset = undefined;\n                sprite.c1index = undefined;\n                sprite.c2index = undefined;\n                sprite.c2 = undefined;\n                sprite.c1 = undefined;\n                controller.invalidate();\n                if (sprite.onAdvance && controller.commandHandler) {\n                    controller.commandHandler.onElementCommandFired(\n                        controller,\n                        element,\n                        sprite.onAdvance,\n                        trigger,\n                        parameters\n                    );\n                }\n            }\n        }\n        else {\n            // Transition active\n            const size = sprite.getSize();\n            if (!size || !sprite.frames || !sprite.model) {\n                return;\n            }\n            if (!sprite.c2) {\n                sprite.c2 = document.createElement('canvas');\n                sprite.c2.width = size.width;\n                sprite.c2.height = size.height;\n            }\n            if (!sprite.c1) {\n                sprite.c1 = document.createElement('canvas');\n                sprite.c1.width = size.width;\n                sprite.c1.height = size.height;\n            }\n\n            if (sprite.c1index === undefined || sprite.c1index !== spriteState.frame1) {\n                const c = sprite.c1.getContext('2d');\n                if (!c) {\n                    return;\n                }\n                const f = sprite.frames[spriteState.frame1];\n                const r = sprite.model.resourceManager.get(f.source) as BitmapResource;\n                if (!r || !r.image) {\n                    return;\n                }\n                c.clearRect(0, 0, size.width, size.height);\n                c.drawImage(r.image, f.x, f.y, f.width, f.height, 0, 0, size.width, size.height);\n                sprite.c1index = spriteState.frame1;\n            }\n            if (sprite.c2index === undefined || sprite.c2index !== spriteState.frame2) {\n                const c = sprite.c2.getContext('2d');\n                if (!c) {\n                    return;\n                }\n                const f = sprite.frames[spriteState.frame2];\n                const r = sprite.model.resourceManager.get(f.source) as BitmapResource;\n                c.clearRect(0, 0, size.width, size.height);\n                if (!r || !r.image) {\n                    return;\n                }\n                c.drawImage(r.image, f.x, f.y, f.width, f.height, 0, 0, size.width, size.height);\n                sprite.c2index = spriteState.frame2;\n            }\n\n            sprite.transition = TransitionRenderer.getRenderFunction(spriteState.transition);\n            // sprite.transitionOffset = spriteState.offset;\n            sprite.transitionOffset = TransitionRenderer.getEasingFunction('easeInOutCubic')(spriteState.offset);\n\n            controller.invalidate();\n        }\n    }\n}\n","import { ErrorMessages } from '../core/error-messages';\nimport { Point } from '../core/point';\nimport { IPointContainer } from '../core/point-container';\nimport { PointDepth } from '../core/point-depth';\nimport { Region } from '../core/region';\nimport { ElementBase } from './element-base';\nimport { InvalidIndexException } from './invalid-index-exception';\n\n/**\n * Renders a strokable line segment\n */\nexport class LineElement extends ElementBase implements IPointContainer {\n    /**\n     * Line element factory function\n     * @param x1 - Point 1 X coordinate\n     * @param y1 - Point 1 Y coordinate\n     * @param x2 - Point 2 X coordinate\n     * @param y2 - Point 2 Y coordinate\n     * @returns New line element\n     */\n    public static create(x1?: number, y1?: number, x2?: number, y2?: number) {\n        const e = new LineElement();\n        if (x1 !== undefined && x2 !== undefined && y1 !== undefined && y2 !== undefined) {\n            e._p1 = new Point(x1, y1);\n            e._p2 = new Point(x2, y2);\n        }\n        return e;\n    }\n\n    /**\n     * Point 1\n     */\n    private _p1?: Point;\n\n    /**\n     * Point 2\n     */\n    private _p2?: Point;\n\n    /**\n     * Constructs a line element\n     */\n    constructor() {\n        super('line');\n        this.getP1 = this.getP1.bind(this);\n        this.setP1 = this.setP1.bind(this);\n        this.getP2 = this.getP2.bind(this);\n        this.setP2 = this.setP2.bind(this);\n    }\n\n    /**\n     * Copies properties of another object to this instance\n     * @param o - Source element\n     */\n    public parse(o: any): void {\n        super.parse(o);\n        if (o.p1) {\n            this._p1 = Point.parse(o.p1);\n        }\n        if (o.p2) {\n            this._p2 = Point.parse(o.p2);\n        }\n    }\n\n    /**\n     * Serializes persistent properties to new object instance\n     * @returns Serialized element\n     */\n    public serialize(): any {\n        const o = super.serialize();\n        if (this.p1) {\n            o.p1 = this.p1.toString();\n        }\n        if (this.p2) {\n            o.p2 = this.p2.toString();\n        }\n        return o;\n    }\n\n    /**\n     * Clones this line element to a new instance\n     * @returns Cloned line instance\n     */\n    public clone() {\n        const e: LineElement = LineElement.create();\n        super.cloneTo(e);\n        e.p1 = this.p1;\n        e.p2 = this.p2;\n        return e;\n    }\n\n    /**\n     * Point 1 get accessor as string\n     * @returns Point 1 as string\n     */\n    get p1(): string | undefined {\n        if (!this._p1) {\n            return undefined;\n        }\n        else {\n            return this._p1.toString();\n        }\n    }\n    /**\n     * Point 1 set accessor as string\n     * @param newValue New point value as string\n     */\n    set p1(newValue: string | undefined) {\n        if (!newValue) {\n            this._p1 = undefined;\n        }\n        else {\n            this._p1 = Point.parse(newValue);\n        }\n    }\n\n    /**\n     * Point 1 get accessor as Point\n     * @returns Point 1 as point object\n     */\n    public getP1(): Point | undefined {\n        return this._p1;\n    }\n\n    /**\n     * Point 1 set accessor as string or Point\n     * @param pointSource - String or point object point source\n     */\n    public setP1(pointSource: string | Point) {\n        this._p1 = Point.parse(pointSource);\n        return this;\n    }\n\n    /**\n     * Point 2 get accessor as string\n     * @returns Point 2 as string\n     */\n    get p2(): string | undefined {\n        if (!this._p2) {\n            return undefined;\n        }\n        else {\n            return this._p2.toString();\n        }\n    }\n\n    /**\n     * Point 2 set accessor as string\n     * @param newValue - New point value as string\n     */\n    set p2(newValue: string | undefined) {\n        if (!newValue) {\n            this._p2 = undefined;\n        }\n        else {\n            this._p2 = Point.parse(newValue);\n        }\n    }\n\n    /**\n     * Point 2 get accessor as Point\n     * @returns Point 2 as point object\n     */\n    public getP2(): Point | undefined {\n        return this._p2;\n    }\n\n    /**\n     * Point 2 set accessor as string or Point\n     * @param pointSource - String or point object point source\n     */\n    public setP2(pointSource: string | Point): LineElement {\n        this._p2 = Point.parse(pointSource);\n        return this;\n    }\n\n    /**\n     * Render line element to canvas context\n     * @param c - Rendering context\n     */\n    public draw(c: CanvasRenderingContext2D) {\n        const model = this.model;\n        if (!model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        if (!this._p1 || !this._p2) {\n            throw new Error(ErrorMessages.PointsAreInvalid);\n        }\n        c.save();\n        if (this.transform) {\n            model.setRenderTransform(c, this.transform, this._p1);\n        }\n        c.beginPath();\n        c.moveTo(this._p1.x, this._p1.y);\n        c.lineTo(this._p2.x, this._p2.y);\n        if (model.setElementStroke(c, this)) {\n            c.stroke();\n        }\n        c.restore();\n    }\n\n    /**\n     * Hit test line.  Return true if point is on or near to line element\n     * @param c - Rendering context\n     * @param tx - X coordinate of point\n     * @param ty - Y coordinate of point\n     * @returns True if point on line element\n     */\n    public hitTest(c: CanvasRenderingContext2D, tx: number, ty: number): boolean {\n        if (!this._p1 || !this._p2) {\n            throw new Error(ErrorMessages.PointsAreInvalid);\n        }\n        let distance: number;\n        const dxline = this._p2.x - this._p1.x;\n        const dyline = this._p2.y - this._p1.y;\n        let tolerance = 2;\n        const dx1 = this._p1.x - tx;\n        const dy1 = this._p1.y - ty;\n        if ((dxline > 0 && dx1 > 0) || (dyline < 0 && dy1 < 0) || (dxline < 0 && dx1 < 0) || (dyline > 0 && dy1 > 0)) {\n            distance = Math.sqrt(dx1 * dx1 + dy1 * dy1);\n            if (distance <= tolerance) {\n                return true;\n            }\n            return false;\n        }\n        const dx2 = this._p2.x - tx;\n        const dy2 = this._p2.y - ty;\n        if ((dxline > 0 && dx2 < 0) || (dyline < 0 && dy2 > 0) || (dxline < 0 && dx2 > 0) || (dyline > 0 && dy2 < 0)) {\n            distance = Math.sqrt(dx2 * dx2 + dy2 * dy2);\n            if (distance <= tolerance) {\n                return true;\n            }\n            return false;\n        }\n        tolerance *= Math.sqrt(dxline * dxline + dyline * dyline);\n        const diff = dy1 * dx2 - dy2 * dx1;\n        if (diff >= -tolerance && diff <= tolerance) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Returns string description of line\n     * @returns Description\n     */\n    public toString(): string {\n        if (!this.type || !this._p1 || !this._p2) {\n            return super.toString();\n        }\n        return this.type + ' - (' + this._p1.x + ',' + this._p1.y + ')-(' + this._p2.x + ',' + this._p2.y + ')';\n    }\n\n    /**\n     * Can element be stroked\n     * @returns Can stroke\n     */\n    public canStroke(): boolean {\n        return true;\n    }\n\n    /**\n     * Lines are movable\n     * @returns True - Lines can be moved\n     */\n    public canMove(): boolean {\n        return true;\n    }\n\n    /**\n     * Lines cannot be sized using mouse since end points are each editable\n     * @returns False - Lines cannot be sized\n     */\n    public canResize(): boolean {\n        return false;\n    }\n\n    /**\n     * Lines can be nudged with the keyboard\n     * @returns True\n     */\n    public canNudge(): boolean {\n        return true;\n    }\n\n    /**\n     * Lines support individual point movement\n     * @returns True\n     */\n    public canMovePoint(): boolean {\n        return true;\n    }\n\n    /**\n     * Lines don't support point editing mode since they are always in point editing mode\n     * @returns False\n     */\n    public canEditPoints(): boolean {\n        return false;\n    }\n\n    /**\n     * Scales line by given horizontal and vertical scaling factors\n     * @param scaleX - Horizontal scaling factor\n     * @param scaleY - Vertical scaling factor\n     * @returns This line element\n     */\n    public scale(scaleX: number, scaleY: number) {\n        if (!this._p1 || !this._p2) {\n            return this;\n        }\n        let bx = this._p1.x;\n        let by = this._p1.y;\n        if (this._p2.x < this._p1.x) {\n            bx = this._p2.x;\n        }\n        if (this._p2.y < this._p1.y) {\n            by = this._p2.y;\n        }\n        this._p1 = Point.scale(this._p1, scaleX, scaleY, bx, by);\n        this._p2 = Point.scale(this._p2, scaleX, scaleY, bx, by);\n        return this;\n    }\n\n    /**\n     * Nudges size of this line element by the given X and Y offsets\n     * @param offsetX - X size offset\n     * @param offsetY - Y size offset\n     * @returns This line element\n     */\n    public nudgeSize(offsetX: number, offsetY: number) {\n        if (!this._p1 || !this._p2) {\n            return this;\n        }\n        const b = this.getBounds();\n        if (!b) {\n            throw new Error(ErrorMessages.BoundsAreUndefined);\n        }\n        let newWidth = b.width + offsetX;\n        if (newWidth < 1) {\n            newWidth = 1;\n        }\n        let newHeight = b.height + offsetY;\n        if (newHeight < 1) {\n            newHeight = 1;\n        }\n        this.scale(newWidth / b.width, newHeight / b.height);\n        return this;\n    }\n\n    /**\n     * Moves this line element by the given X and Y offsets\n     * @param offsetX - X size offset\n     * @param offsetY - Y size offset\n     * @returns This line element\n     */\n    public translate(offsetX: number, offsetY: number) {\n        if (!this._p1 || !this._p2) {\n            return this;\n        }\n        this._p1 = Point.translate(this._p1, offsetX, offsetY);\n        this._p2 = Point.translate(this._p2, offsetX, offsetY);\n        return this;\n    }\n\n    /**\n     * Moves line\n     * @param pointSource - New location\n     * @returns This line\n     */\n    public setLocation(pointSource: string | Point) {\n        if (!this._p1 || !this._p2) {\n            return this;\n        }\n        const b = this.getBounds();\n        if (!b) {\n            throw new Error(ErrorMessages.BoundsAreUndefined);\n        }\n        let pt: Point;\n        if (typeof pointSource === 'string') {\n            pt = Point.parse(pointSource);\n        }\n        else {\n            pt = new Point(pointSource.x, pointSource.y);\n        }\n        const deltaX = pt.x - b.x;\n        const deltaY = pt.y - b.y;\n        this.translate(deltaX, deltaY);\n        return this;\n    }\n\n    /**\n     * Returns rectangular bounding region\n     * @returns Line bounding region\n     */\n    public getBounds(): Region | undefined {\n        let x: number;\n        let y: number;\n        let width: number;\n        let height: number;\n        if (!this._p1 || !this._p2) {\n            return undefined;\n        }\n        if (this._p1.x < this._p2.x) {\n            x = this._p1.x;\n            width = this._p2.x - x;\n        }\n        else {\n            x = this._p2.x;\n            width = this._p1.x - x;\n        }\n        if (this._p1.y < this._p2.y) {\n            y = this._p1.y;\n            height = this._p2.y - y;\n        }\n        else {\n            y = this._p2.y;\n            height = this._p1.y - y;\n        }\n        return new Region(x, y, width, height);\n    }\n\n    /**\n     * Returns line point count\n     * @returns Two (2) points\n     */\n    public pointCount(): number {\n        return 2;\n    }\n\n    /**\n     * Returns point at a given index (0 or 1)\n     * @param index - Point index (0 or 1)\n     * @param depth - Not applicable\n     * @returns Requested point\n     */\n    public getPointAt(index: number, depth?: PointDepth): Point {\n        if (index === 0 && this._p1) {\n            return this._p1;\n        }\n        if (index === 1 && this._p2) {\n            return this._p2;\n        }\n        throw new InvalidIndexException(index);\n    }\n\n    /**\n     * Sets point at a given index (0 or 1)\n     * @param index - Point index (0 or 1)\n     * @param value - New point value\n     * @param depth - Not applicable\n     */\n    public setPointAt(index: number, value: Point, depth: PointDepth) {\n        if (index === 0) {\n            this._p1 = new Point(value.x, value.y);\n            return this;\n        }\n        else if (index === 1) {\n            this._p2 = new Point(value.x, value.y);\n            return this;\n        }\n        else {\n            throw new InvalidIndexException(index);\n        }\n    }\n}\n","/**\n * Describes depth context for point container point references\n */\nexport enum PointDepth {\n    /**\n     * Simple - Top level points\n     */\n    Simple = 1,\n\n    /**\n     * Full - Edit all points\n     */\n    Full = 2\n}\n","import { ErrorMessages } from '../core/error-messages';\nimport { Point } from '../core/point';\nimport { Size } from '../core/size';\nimport { BitmapResource } from '../resource/bitmap-resource';\nimport { ResourceManager } from '../resource/resource-manager';\nimport { ElementBase } from './element-base';\nimport { SpriteFrame } from './sprite-frame';\nimport { SpriteState } from './sprite-state';\n\n/**\n * Renders one or more image frames from full or partial bitmap image source\n */\nexport class SpriteElement extends ElementBase {\n    /**\n     * Sprite element factory function\n     * @param x - X coordinate\n     * @param y - Y coordinate\n     * @param width - Width\n     * @param height - Height\n     * @returns New sprite element\n     */\n    public static create(x?: number, y?: number, width?: number, height?: number): SpriteElement {\n        const e = new SpriteElement();\n        if (x !== undefined && y !== undefined && width !== undefined && height !== undefined) {\n            e._location = new Point(x, y);\n            e._size = new Size(width, height);\n        }\n        return e;\n    }\n\n    public static cloneFrames(frames: SpriteFrame[]): SpriteFrame[] {\n        const cloned = [];\n        for (const frame of frames) {\n            cloned.push(SpriteFrame.clone(frame));\n        }\n        return cloned;\n    }\n\n    /**\n     * Array of sprite frames\n     */\n    public frames?: SpriteFrame[];\n\n    /**\n     * Current rendered frame index\n     */\n    public frameIndex: number;\n\n    /**\n     * True if sprite animation should loop\n     */\n    public loop: boolean;\n\n    /**\n     * Total computed timeline length from frame durations and transition durations\n     */\n    public timelineLength?: number;\n\n    /**\n     * Frame stack used to push/pop frames in button events\n     */\n    public frameStack?: number[];\n\n    /**\n     * Click event command handler tag\n     */\n    public click?: string;\n\n    /**\n     * Frame advance command handler tag\n     */\n    public onAdvance?: string;\n\n    /**\n     * Animation timer command handler tag\n     */\n    public timer?: string;\n\n    /**\n     * Offset into current transition when transitioning\n     */\n    public transitionOffset?: number;\n\n    /**\n     * Source canvas element when transitioning\n     */\n    public c1?: HTMLCanvasElement;\n\n    /**\n     * Target canvas element when transitioning\n     */\n    public c2?: HTMLCanvasElement;\n\n    /**\n     * Source frame index when transitioning\n     */\n    public c1index?: number;\n\n    /**\n     * Target frame index when transitioning\n     */\n    public c2index?: number;\n\n    /**\n     * Animation timer handle\n     */\n    public timerHandle?: number;\n\n    /**\n     * Transition render function for current transition\n     */\n    public transition?: (\n        c: CanvasRenderingContext2D,\n        c1: HTMLCanvasElement | undefined,\n        c2: HTMLCanvasElement | undefined,\n        transitionOffset: number | undefined,\n        x: number | undefined,\n        y: number | undefined,\n        width: number | undefined,\n        height: number | undefined\n    ) => void;\n\n    constructor() {\n        super('sprite');\n        this.createSheetFrames = this.createSheetFrames.bind(this);\n        this.computeTimeline = this.computeTimeline.bind(this);\n        this.getStateForTime = this.getStateForTime.bind(this);\n        this.getTimeForFrame = this.getTimeForFrame.bind(this);\n        this.frames = [];\n        this.frameIndex = 0;\n        this.loop = true;\n    }\n\n    /**\n     * Copies properies of another element instance to this instance\n     * @param o - Source element\n     */\n    public parse(o: any): void {\n        super.parse(o);\n        if (o.frames) {\n            this.frames = o.frames;\n        }\n        if (!this.location) {\n            this._location = new Point(0, 0);\n        }\n    }\n\n    /**\n     * Serializes persistent properties to new object instance\n     * @returns Serialized element\n     */\n    public serialize(): any {\n        const o = super.serialize();\n        if (this.frames) {\n            o.frames = JSON.parse(JSON.stringify(this.frames));\n        }\n        return o;\n    }\n\n    /**\n     * Clones this element to a new instance\n     * @returns Cloned sprite element instance\n     */\n    public clone(): SpriteElement {\n        const e: SpriteElement = SpriteElement.create();\n        super.cloneTo(e);\n        if (this.frames) {\n            e.frames = this.frames;\n        }\n        return e;\n    }\n\n    /**\n     * Register image sources for all frames with resource manager\n     * @param rm - Resource manager\n     */\n    public registerResources(rm: ResourceManager): void {\n        super.registerResources(rm);\n        if (this.frames) {\n            const fl = this.frames.length;\n            for (let i = 0; i < fl; i++) {\n                rm.register(this.frames[i].source);\n            }\n        }\n    }\n\n    /**\n     * Returns list of referenced resource keys\n     */\n    public getResourceKeys() {\n        const keys = super.getResourceKeys();\n        if (this.frames) {\n            const fl = this.frames.length;\n            for (let i = 0; i < fl; i++) {\n                keys.push(this.frames[i].source);\n            }\n        }\n        return keys;\n    }\n\n    /**\n     * Render sprite element to canvas context\n     * @param c - Rendering context\n     */\n    public draw(c: CanvasRenderingContext2D): void {\n        const model = this.model;\n        if (!model || !this.frames) {\n            return;\n        }\n        const bounds = this.getBounds();\n        if (!bounds) {\n            return;\n        }\n\n        // If transition renderer in place, then render transition using prepared c1 and c2 canvases\n        if (this.transition) {\n            c.save();\n            if (this.transform) {\n                model.setRenderTransform(c, this.transform, bounds.location);\n            }\n            c.beginPath();\n            c.rect(bounds.location.x, bounds.location.y, bounds.size.width, bounds.size.height);\n            c.clip();\n            this.transition(\n                c,\n                this.c1,\n                this.c2,\n                this.transitionOffset,\n                bounds.location.x,\n                bounds.location.y,\n                bounds.size.width,\n                bounds.size.height\n            );\n            c.restore();\n        }\n        else {\n            // Render static frame\n            const frame = this.frames[this.frameIndex];\n            const res = model.resourceManager.get(frame.source) as BitmapResource;\n            if (!res.image) {\n                return;\n            }\n            c.save();\n            if (this.transform) {\n                model.setRenderTransform(c, this.transform, bounds.location);\n            }\n            if (frame.opacity && frame.opacity > 0 && frame.opacity < 1.0) {\n                const o = c.globalAlpha;\n                c.globalAlpha = frame.opacity;\n                c.drawImage(\n                    res.image,\n                    frame.x,\n                    frame.y,\n                    frame.width,\n                    frame.height,\n                    bounds.location.x,\n                    bounds.location.y,\n                    bounds.size.width,\n                    bounds.size.height\n                );\n                c.globalAlpha = o;\n            }\n            else {\n                c.drawImage(\n                    res.image,\n                    frame.x,\n                    frame.y,\n                    frame.width,\n                    frame.height,\n                    bounds.location.x,\n                    bounds.location.y,\n                    bounds.size.width,\n                    bounds.size.height\n                );\n            }\n            c.restore();\n        }\n    }\n\n    /**\n     * Add sprite frames from a sprite sheet image containing one or more frame\n     * images in a grid array\n     * @param source - Bitmap resource key for source image\n     * @param sheetWidth - Source image width\n     * @param sheetHeight - Source image height\n     * @param spriteWidth - Sprite frame width\n     * @param spriteHeight - Sprite frame height\n     * @param frameCount - Number of frames\n     * @param duration - Duration for each frame\n     * @param transition - Transition for each frame\n     * @param transitionDuration - Transition duration for each frame\n     * @param opacity - Optional opacity for each frame in the range (0-1). Default 1.\n     */\n    public createSheetFrames(\n        source: string,\n        sheetWidth: number,\n        sheetHeight: number,\n        spriteWidth: number,\n        spriteHeight: number,\n        frameCount: number,\n        duration: number,\n        transition: string,\n        transitionDuration: number,\n        opacity?: number\n    ): void {\n        let index = 0;\n        this.frames = [];\n        for (let y = 0; y < sheetHeight; y += spriteHeight) {\n            for (let x = 0; x < sheetWidth; x += spriteWidth) {\n                this.frames.push(\n                    new SpriteFrame(\n                        source,\n                        x,\n                        y,\n                        spriteWidth,\n                        spriteHeight,\n                        duration,\n                        transition,\n                        transitionDuration,\n                        opacity\n                    )\n                );\n                index++;\n                if (index === frameCount) {\n                    return;\n                }\n            }\n        }\n    }\n\n    /**\n     * Computes total timeline length from duration and transition duration\n     * of all frames and sets result into timelineLength property\n     */\n    public computeTimeline(): void {\n        let total = 0;\n        if (!this.frames) {\n            return;\n        }\n        const fl = this.frames.length;\n        for (let i = 0; i < fl; i++) {\n            const frame = this.frames[i];\n            if (frame.transition && frame.transitionDuration) {\n                total += frame.duration + frame.transitionDuration;\n            }\n            else {\n                total += frame.duration;\n            }\n        }\n        this.timelineLength = total;\n    }\n\n    /**\n     * Determines whether or not a transition or static frame should be\n     * rendered based on a given timeline offset\n     * @param targetTime - Timeline offset\n     * @returns Sprite state for time offset\n     */\n    public getStateForTime(targetTime: number): SpriteState | undefined {\n        if (!this.frames) {\n            return undefined;\n        }\n        const fl = this.frames.length;\n        let time = 0.0;\n        let baseTime = 0.0;\n\n        // Compute timeline length if not already done\n        if (!this.timelineLength) {\n            this.computeTimeline();\n        }\n        if (!this.timelineLength) {\n            return;\n        }\n\n        // If not looping and past end time, return end frame\n        if (!this.loop) {\n            if (targetTime > this.timelineLength) {\n                return new SpriteState(undefined, 1.0, fl - 1, fl - 1);\n            }\n        }\n\n        // Loop time\n        if (this.loop) {\n            if (targetTime >= this.timelineLength) {\n                targetTime = targetTime % this.timelineLength;\n            }\n        }\n\n        // Walk the frames until we hit the target time\n        while (true) {\n            for (let i = 0; i < fl; i++) {\n                const index = i;\n                let nextIndex = i + 1;\n                if (nextIndex >= fl) {\n                    nextIndex = 0;\n                }\n                const frame = this.frames[index];\n                const nextFrame = this.frames[nextIndex];\n                if (targetTime <= baseTime + time + frame.duration) {\n                    return new SpriteState(\n                        undefined,\n                        1.0 - (baseTime + time + frame.duration - targetTime) / frame.duration,\n                        index,\n                        nextIndex\n                    );\n                }\n                if (\n                    nextFrame.transitionDuration &&\n                    targetTime <= baseTime + time + frame.duration + nextFrame.transitionDuration\n                ) {\n                    const timeOffset = baseTime + time + frame.duration + nextFrame.transitionDuration - targetTime;\n                    const offset = 1.0 - timeOffset / nextFrame.transitionDuration;\n                    return new SpriteState(nextFrame.transition, offset, index, nextIndex);\n                }\n                if (nextFrame.transitionDuration) {\n                    time += nextFrame.transitionDuration;\n                }\n                time += frame.duration;\n            }\n\n            // Increment base time in case target time exceeds total time line length\n            baseTime += time;\n            time = 0;\n        }\n    }\n\n    /**\n     * Returns the timeline time offset for the start of a given frame\n     * @param targetFrame - Frame index\n     * @returns Timeline time offset in seconds\n     */\n    public getTimeForFrame(targetFrame: number): number | undefined {\n        if (!this.frames) {\n            return undefined;\n        }\n        const fl = this.frames.length;\n        let time = 0.0;\n\n        // Bounds check\n        if (targetFrame > fl || targetFrame < 0) {\n            throw new Error(ErrorMessages.InvalidFrameIndex);\n        }\n\n        // Compute timeline length if not already done\n        if (!this.timelineLength) {\n            this.computeTimeline();\n        }\n\n        // Walk the frames until we hit the target frame, adding up the time\n        for (let i = 0; i < targetFrame; i++) {\n            let nextIndex = i + 1;\n            if (nextIndex >= fl) {\n                nextIndex = 0;\n            }\n            const frame = this.frames[i];\n            const nextFrame = this.frames[nextIndex];\n            time += frame.duration;\n            if (nextFrame.transitionDuration) {\n                time += nextFrame.transitionDuration;\n            }\n        }\n        return time;\n    }\n}\n","import { Resource } from './resource';\r\nimport { IResourceCreator } from './resource-creator';\r\nimport { ResourceCreatorRegistration } from './resource-creator-registration';\r\n\r\n/**\r\n * Resource creation factory\r\n */\r\nexport class ResourceFactory {\r\n    /**\r\n     * Array of resource creators\r\n     */\r\n    public static ResourceCreators: ResourceCreatorRegistration[] = [];\r\n\r\n    /**\r\n     * Registers a resource creator\r\n     * @param name - Resource type tag\r\n     * @param creator - Resource creation function\r\n     */\r\n    public static registerCreator(name: string, creator: IResourceCreator) {\r\n        ResourceFactory.ResourceCreators.push(new ResourceCreatorRegistration(name, creator));\r\n    }\r\n\r\n    /**\r\n     * Creates a new registered resource instance given a type tag\r\n     * @param name - Resource type tag\r\n     * @returns New resource\r\n     */\r\n    public static create(name: string): Resource | undefined {\r\n        for (const rc of ResourceFactory.ResourceCreators) {\r\n            if (rc.name === name) {\r\n                return rc.creator.create();\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\n","import { ErrorMessages } from '../core/error-messages';\nimport { Size } from '../core/size';\nimport { Utility } from '../core/utility';\nimport { Resource } from './resource';\nimport { ResourceFactory } from './resource-factory';\n\n/**\n * Bitmap image resource\n */\nexport class BitmapResource extends Resource {\n    /**\n     * Bitmap resource factory function\n     * @param key - Resource key\n     * @param uriOrImage - Resource URI or existing image object\n     * @param locale - Optional resource local (e.g. en-US)\n     */\n    public static create(key: string, uriOrImage: string | HTMLImageElement, locale?: string): BitmapResource {\n        const br = new BitmapResource();\n        if (arguments.length >= 2) {\n            br.key = key;\n            if (typeof uriOrImage === 'string') {\n                br.uri = uriOrImage;\n            }\n            else {\n                br.image = uriOrImage;\n            }\n        }\n        if (locale) {\n            br.locale = locale;\n        }\n        return br;\n    }\n\n    /**\n     * Bitmap dimensions\n     */\n    public size?: Size;\n\n    /**\n     * Retrieved image resource\n     */\n    public image?: HTMLImageElement;\n\n    constructor() {\n        super('bitmap');\n    }\n\n    /**\n     * Clones this resource to a new instance\n     * @returns Cloned bitmap resource\n     */\n    public clone(): BitmapResource {\n        let o: BitmapResource | undefined;\n        if (!this.key) {\n            throw new Error(ErrorMessages.ResourceKeyIsUndefined);\n        }\n        if (!this.image && !this.uri) {\n            throw new Error(ErrorMessages.BitmapResourceSourceIsUndefined);\n        }\n        if (this.image) {\n            o = BitmapResource.create(this.key, this.image, this.locale);\n        }\n        else if (this.uri) {\n            o = BitmapResource.create(this.key, this.uri, this.locale);\n        }\n        if (o) {\n            super.cloneTo(o);\n            if (this.size) {\n                o.size = this.size;\n            }\n        }\n        else {\n            throw new Error(ErrorMessages.ResourceIsInvalid);\n        }\n        return o;\n    }\n\n    /**\n     * Copies properties of another bitmap resource\n     * @param o - Source bitmap resource\n     */\n    public parse(o: any): void {\n        super.parse(o);\n        if (o.size) {\n            this.size = Size.parse(o.size);\n        }\n    }\n\n    /**\n     * Serializes resource to a new instance\n     * @returns Serialized resource instance\n     */\n    public serialize(): any {\n        const o = super.serialize();\n        if (this.size) {\n            o.size = this.size.toString();\n        }\n        return o;\n    }\n\n    /**\n     * Retrieves image resource\n     * @param url - Image URL\n     * @param callback - Retrieval callback (result: boolean)\n     */\n    public load(url: string, callback: (result: boolean) => void): void {\n        const image = new Image();\n        this.image = image;\n        image.src = url;\n        image.onload = e => {\n            if (callback) {\n                callback(true);\n            }\n        };\n        image.onabort = e => {\n            if (callback) {\n                callback(false);\n            }\n        };\n        image.onerror = e => {\n            if (callback) {\n                callback(false);\n            }\n        };\n    }\n\n    public initialize() {\n        const self = this;\n\n        if (!self.resourceManager) {\n            throw new Error(ErrorMessages.ResourceManagerIsUndefined);\n        }\n\n        // If embedded image, just unregister\n        if (self.image) {\n            self.resourceManager.unregister(self, true);\n        }\n        else {\n            // Image Resource Assumed\n            const imagePath = self.uri;\n            if (!imagePath) {\n                throw new Error('Image path is undefined.');\n            }\n            const imagePathLowered = imagePath.toLowerCase();\n\n            // Local (Server) Image\n            if (imagePath.charAt(0) === ':') {\n                const url = imagePath.substring(1, imagePath.length);\n                self.load(url, success => {\n                    if (self.resourceManager) {\n                        self.resourceManager.unregister(self, success);\n                    }\n                });\n            }\n            else if (imagePath.charAt(0) === '/') {\n                // Shared Image\n                if (self.resourceManager && self.resourceManager.model) {\n                    self.load(Utility.joinPaths(self.resourceManager.model.basePath, imagePath), success => {\n                        if (self.resourceManager) {\n                            self.resourceManager.unregister(self, success);\n                        }\n                    });\n                }\n            }\n            else if (imagePathLowered.indexOf('http://') === 0 || imagePathLowered.indexOf('https://') === 0) {\n                // Remote / External Image (http:// or https://)\n                self.load(imagePath, success => {\n                    if (self.resourceManager) {\n                        self.resourceManager.unregister(self, success);\n                    }\n                });\n            }\n            else {\n                // Embedded Image\n                if (self.resourceManager && self.resourceManager.localResourcePath) {\n                    self.load(Utility.joinPaths(self.resourceManager.localResourcePath, imagePath), success => {\n                        if (self.resourceManager) {\n                            self.resourceManager.unregister(self, success);\n                        }\n                    });\n                }\n            }\n        }\n    }\n}\n\n/* Register type creator */\nResourceFactory.registerCreator('bitmap', BitmapResource);\n","/**\r\n * Specifies pane transition direction\r\n */\r\nexport enum PaneTransitionDirection {\r\n    Left = 0,\r\n    Right = 1,\r\n    Up = 2,\r\n    Down = 3,\r\n    LeftUp = 4,\r\n    RightUp = 5,\r\n    LeftDown = 6,\r\n    RightDown = 7,\r\n    In = 8,\r\n    Out = 9,\r\n    InX = 10,\r\n    InY = 11,\r\n    OutX = 12,\r\n    OutY = 13\r\n}\r\n","import { ErrorMessages } from '../core/error-messages';\r\n\r\n/**\r\n * Encapsulates invalid point index exception\r\n */\r\nexport class InvalidIndexException extends Error {\r\n    constructor(index: number) {\r\n        super(ErrorMessages.InvalidPointIndex + index);\r\n    }\r\n}\r\n","/**\n * Represents sprite element frame\n */\nexport class SpriteFrame {\n    /**\n     * Clones a sprite frame\n     * @param source SpriteFrame to clone\n     */\n    public static clone(source: SpriteFrame): SpriteFrame {\n        const clone = new SpriteFrame(\n            source.source,\n            source.x,\n            source.y,\n            source.width,\n            source.height,\n            source.duration,\n            source.transition,\n            source.transitionDuration,\n            source.opacity\n        );\n        return clone;\n    }\n\n    /**\n     * Sprite Frame factory function\n     * @param source - Bitmap resource key\n     * @param x - Bitmap resource image region X coordinate\n     * @param y - Bitmap resource image region Y coordinate\n     * @param width - Bitmap resource image region Width\n     * @param height - Bitmap resource image region Height\n     * @param duration - Frame duration in seconds\n     * @param transition - To frame visual transition\n     * @param transitionDuration - To frame transition duration\n     * @param opacity - Frame opacity in the range of 0-1\n     */\n    public static create(\n        source: string,\n        x: number,\n        y: number,\n        width: number,\n        height: number,\n        duration: number,\n        transition: string,\n        transitionDuration: number,\n        opacity?: number\n    ): SpriteFrame {\n        return new SpriteFrame(source, x, y, width, height, duration, transition, transitionDuration, opacity);\n    }\n\n    /**\n     * Bitmap resource key\n     */\n    public source: string;\n\n    /**\n     * X coordinate of bitmap resource region\n     */\n    public x: number;\n\n    /**\n     * Y coordinate of bitmap resource region\n     */\n    public y: number;\n\n    /**\n     * Width of bitmap resource region\n     */\n    public width: number;\n\n    /**\n     * Height of bitmap resource region\n     */\n    public height: number;\n\n    /**\n     * Frame duration in seconds\n     */\n    public duration: number;\n\n    /**\n     * Frame visual transition\n     */\n    public transition: string;\n\n    /**\n     * Frame transition duration in seconds\n     */\n    public transitionDuration: number;\n\n    /**\n     * Frame opacity in the range of 0-1\n     */\n    public opacity: number = 1;\n\n    /**\n     * @param source - Bitmap resource key\n     * @param x - Bitmap resource image region X coordinate\n     * @param y - Bitmap resource image region Y coordinate\n     * @param width - Bitmap resource image region Width\n     * @param height - Bitmap resource image region Height\n     * @param duration - Frame duration in seconds\n     * @param transition - Frame visual transition\n     * @param transitionDuration - Frame transition duration\n     * @param opacity - Optional frame opacity in the range of 0-1\n     */\n    constructor(\n        source: string,\n        x: number,\n        y: number,\n        width: number,\n        height: number,\n        duration: number,\n        transition: string,\n        transitionDuration: number,\n        opacity?: number\n    ) {\n        this.source = source;\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.duration = duration;\n        this.transition = transition;\n        this.transitionDuration = transitionDuration;\n        if (opacity !== undefined) {\n            this.opacity = opacity;\n        }\n    }\n}\n","import { ErrorMessages } from '../core/error-messages';\nimport { Point } from '../core/point';\nimport { Size } from '../core/size';\nimport { FillFactory } from '../fill/fill-factory';\nimport { ResourceManager } from '../resource/resource-manager';\nimport { TextResource } from '../resource/text-resource';\nimport { ElementBase } from './element-base';\n\n/**\n * Renders a stroked and filled text element\n */\nexport class TextElement extends ElementBase {\n    /**\n     * Text element factory function\n     * @param text - Text string or text resource key to render\n     * @param x - Text block x coordinate\n     * @param y - Text block y coordinate\n     * @param width - Text block width\n     * @param height - Text block height\n     * @returns New text element\n     */\n    public static create(\n        text?: string | TextResource,\n        x?: number,\n        y?: number,\n        width?: number,\n        height?: number\n    ): TextElement {\n        const e = new TextElement();\n        if (!text) {\n            return e;\n        }\n        if (typeof text === 'string') {\n            e.text = text;\n        }\n        else {\n            e.source = text.key;\n        }\n        if (x !== undefined && y !== undefined) {\n            e._location = new Point(x, y);\n        }\n        if (width !== undefined && height !== undefined) {\n            e._size = new Size(width, height);\n        }\n        return e;\n    }\n\n    /**\n     * Text string to render\n     */\n    public text?: string;\n\n    /**\n     * Text resource key\n     */\n    public source?: string;\n\n    /**\n     * Font typeface\n     */\n    public typeface?: string;\n\n    /**\n     * Font type size in pixels\n     */\n    public typesize?: number;\n\n    /**\n     * Font typestyle\n     */\n    public typestyle?: string;\n\n    /**\n     * Text block alignment directives\n     */\n    public alignment?: string;\n\n    constructor() {\n        super('text');\n        this.setText = this.setText.bind(this);\n        this.setSource = this.setSource.bind(this);\n        this.setTypeface = this.setTypeface.bind(this);\n        this.setTypesize = this.setTypesize.bind(this);\n        this.setTypestyle = this.setTypestyle.bind(this);\n        this.setAlignment = this.setAlignment.bind(this);\n        this.getLines = this.getLines.bind(this);\n    }\n\n    /**\n     * Copies properties of another object to this instance\n     * @param o - Source object\n     */\n    public parse(o: any): void {\n        super.parse(o);\n        if (o.text) {\n            this.text = o.text;\n        }\n        if (o.source) {\n            this.source = o.source;\n        }\n        if (o.typeface) {\n            this.typeface = o.typeface;\n        }\n        if (o.typesize) {\n            this.typesize = o.typesize;\n        }\n        if (o.typestyle) {\n            this.typestyle = o.typestyle;\n        }\n        if (o.alignment) {\n            this.alignment = o.alignment;\n        }\n        if (!this.location) {\n            this._location = new Point(0, 0);\n        }\n    }\n\n    /**\n     * Serializes persistent properties to new object instance\n     * @returns Serialized element\n     */\n    public serialize(): any {\n        const o = super.serialize();\n        if (this.text) {\n            o.text = this.text;\n        }\n        if (this.source) {\n            o.source = this.source;\n        }\n        if (this.typeface) {\n            o.typeface = this.typeface;\n        }\n        if (this.typesize) {\n            o.typesize = this.typesize;\n        }\n        if (this.typestyle) {\n            o.typestyle = this.typestyle;\n        }\n        if (this.alignment) {\n            o.alignment = this.alignment;\n        }\n        return o;\n    }\n\n    /**\n     * Clones this text element to a new instance\n     * @returns Cloned text element\n     */\n    public clone() {\n        const e: TextElement = TextElement.create();\n        super.cloneTo(e);\n        if (this.text) {\n            e.text = this.text;\n        }\n        if (this.source) {\n            e.source = this.source;\n        }\n        if (this.typeface) {\n            e.typeface = this.typeface;\n        }\n        if (this.typesize) {\n            e.typesize = this.typesize;\n        }\n        if (this.typestyle) {\n            e.typestyle = this.typestyle;\n        }\n        if (this.alignment) {\n            e.alignment = this.alignment;\n        }\n        return e;\n    }\n\n    /**\n     * Registers referenced resources with resource manager\n     * @param rm - Resource manager\n     */\n    public registerResources(rm: ResourceManager) {\n        super.registerResources(rm);\n        if (this.source) {\n            rm.register(this.source);\n        }\n    }\n\n    /**\n     * Returns list of referenced resource keys\n     */\n    public getResourceKeys() {\n        const keys = super.getResourceKeys();\n        if (this.source) {\n            keys.push(this.source);\n        }\n        return keys;\n    }\n\n    /**\n     * Render text element to canvas context\n     * @param c - Rendering context\n     */\n    public draw(c: CanvasRenderingContext2D): void {\n        const model = this.model;\n        if (!model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        const bounds = this.getBounds();\n        if (!bounds) {\n            throw new Error(ErrorMessages.BoundsAreUndefined);\n        }\n        c.save();\n        if (this.transform) {\n            model.setRenderTransform(c, this.transform, new Point(bounds.location.x, bounds.location.y));\n        }\n        c.beginPath();\n        c.rect(bounds.location.x, bounds.location.y, bounds.size.width + 10, bounds.size.height);\n        c.clip();\n        let font = '';\n        let fontSize = '10.0';\n        if (this.typestyle && this.typestyle.length > 0) {\n            const parts = this.typestyle.split(',');\n            for (const part of parts) {\n                font += part;\n                font += ' ';\n            }\n        }\n        if (this.typesize) {\n            fontSize = String(this.typesize);\n            font += this.typesize + 'px ';\n        }\n        if (this.typeface) {\n            const parts = this.typeface.split(',');\n            for (const part of parts) {\n                font += part;\n                font += ' ';\n            }\n        }\n        else {\n            font += 'sans-serif';\n        }\n        c.font = font;\n        let valign = 'top';\n        let halign = 'left';\n        if (this.alignment) {\n            const parts = this.alignment.split(',');\n            for (const part of parts) {\n                if (part.toLowerCase() === 'start') {\n                    c.textAlign = 'start';\n                    halign = 'left';\n                }\n                else if (part.toLowerCase() === 'end') {\n                    c.textAlign = 'end';\n                    halign = 'right';\n                }\n                else if (part.toLowerCase() === 'left') {\n                    c.textAlign = 'left';\n                    halign = 'left';\n                }\n                else if (part.toLowerCase() === 'right') {\n                    c.textAlign = 'right';\n                    halign = 'right';\n                }\n                else if (part.toLowerCase() === 'center') {\n                    c.textAlign = 'center';\n                    halign = 'center';\n                }\n                else if (part.toLowerCase() === 'top') {\n                    valign = 'top';\n                }\n                else if (part.toLowerCase() === 'bottom') {\n                    valign = 'bottom';\n                }\n                else if (part.toLowerCase() === 'middle') {\n                    valign = 'middle';\n                }\n            }\n        }\n\n        // Resolve text content\n        let text: string | undefined;\n        if (this.source) {\n            const res = model.resourceManager.get(this.source) as TextResource;\n            if (res) {\n                text = res.text;\n            }\n        }\n        if (!text) {\n            text = this.text;\n        }\n        if (!text) {\n            return;\n        }\n\n        // Get lines of text\n        const lines = this.getLines(c, text, bounds.size.width);\n\n        // Compute total height of text\n        const lineHeight: number = parseFloat(fontSize);\n        const totalHeight = lineHeight * lines.length;\n        let x: number;\n        let y: number;\n\n        if (FillFactory.setElementFill(c, this)) {\n            const loc = bounds.location;\n\n            // Iterate lines and fill text\n            x = bounds.location.x;\n            if (halign === 'right') {\n                x += bounds.size.width;\n            }\n            else if (halign === 'center') {\n                x += bounds.size.width / 2;\n            }\n            y = bounds.location.y;\n            c.textBaseline = 'top';\n            if (valign === 'middle') {\n                y = bounds.location.y + bounds.size.height / 2 - totalHeight / 2;\n            }\n            else if (valign === 'bottom') {\n                y = bounds.location.y + bounds.size.height - totalHeight;\n            }\n            for (const line of lines) {\n                if (this.fillOffsetX || this.fillOffsetY) {\n                    const fillOffsetX = this.fillOffsetX || 0;\n                    const fillOffsetY = this.fillOffsetY || 0;\n                    c.translate(loc.x + fillOffsetX, loc.y + fillOffsetY);\n                    c.fillText(line, -fillOffsetX + x - loc.x, -fillOffsetY + y - loc.y);\n                    c.translate(-(loc.x + fillOffsetX), -(loc.y + fillOffsetY));\n                }\n                else {\n                    c.translate(loc.x, loc.y);\n                    c.fillText(line, x - loc.x, y - loc.y);\n                    c.translate(-loc.x, -loc.y);\n                }\n                y += lineHeight;\n            }\n        }\n\n        if (model.setElementStroke(c, this)) {\n            // Iterate lines and stroke text\n            x = bounds.location.x;\n            if (halign === 'right') {\n                x += bounds.size.width;\n            }\n            else if (halign === 'center') {\n                x += bounds.size.width / 2;\n            }\n            y = bounds.location.y;\n            c.textBaseline = 'top';\n            if (valign === 'middle') {\n                y = bounds.location.y + bounds.size.height / 2 - totalHeight / 2;\n            }\n            else if (valign === 'bottom') {\n                y = bounds.location.y + bounds.size.height - totalHeight;\n            }\n            for (const line of lines) {\n                c.strokeText(line, x, y);\n                y += lineHeight;\n            }\n        }\n\n        c.restore();\n    }\n\n    /**\n     * Text set accessor.  Clears source property when set.\n     * @param text - Text string to render\n     * @returns This text element\n     */\n    public setText(text: string) {\n        this.text = text;\n        this.source = undefined;\n        return this;\n    }\n\n    /**\n     * Source set accessor. Clears text property when set.\n     * @param source - Text resource key\n     * @returns This text element\n     */\n    public setSource(source: string) {\n        this.source = source;\n        this.text = undefined;\n        return this;\n    }\n\n    /**\n     * Typeface set accessor\n     * @param typeface - Font typeface\n     * @returns This text element\n     */\n    public setTypeface(typeface: string) {\n        this.typeface = typeface;\n        return this;\n    }\n\n    /**\n     * Typeface set accessor\n     * @param typesize - Font type size in pixels\n     * @returns This text element\n     */\n    public setTypesize(typesize: number) {\n        this.typesize = typesize;\n        return this;\n    }\n\n    /**\n     * Typestyle set accessor\n     * @param typestyle - Font typestyle\n     * @returns This text element\n     */\n    public setTypestyle(typestyle: string) {\n        this.typestyle = typestyle;\n        return this;\n    }\n\n    /**\n     * Alignment set accessor\n     * @param alignment - Text block alignment directives\n     * @returns This text element\n     */\n    public setAlignment(alignment: string) {\n        this.alignment = alignment;\n        return this;\n    }\n\n    /**\n     * Splits text to render into lines that will fit into specified\n     * element width\n     * @param c - Rendering context\n     * @param text - Text to render\n     * @param lineWidth - Text block width\n     * @returns Split text lines\n     */\n    public getLines(c: CanvasRenderingContext2D, text: string, lineWidth: number): string[] {\n        const splitLines = text.split('\\n');\n        const lines: string[] = [];\n        for (const line of splitLines) {\n            const words = line.split(' ');\n            if (words.length === 1) {\n                lines.push(words[0]);\n                continue;\n            }\n            let lastLine = words[0];\n            let measure = 0;\n            const wl = words.length;\n            for (let i = 1; i < wl; i++) {\n                const word = words[i];\n                measure = c.measureText(lastLine + word).width;\n                if (measure < lineWidth) {\n                    lastLine += ' ' + word;\n                }\n                else {\n                    lines.push(lastLine);\n                    lastLine = word;\n                }\n                if (i === words.length - 1) {\n                    lines.push(lastLine);\n                    break;\n                }\n            }\n        }\n        return lines;\n    }\n\n    /**\n     * Can element be stroked\n     * @returns Can stroke\n     */\n    public canStroke(): boolean {\n        return true;\n    }\n\n    /**\n     * Can element be filled\n     * @returns Can fill\n     */\n    public canFill(): boolean {\n        return true;\n    }\n}\n","import { IMouseEvent } from './mouse-event';\n\n/**\n * Represents a mouse event for event handling\n */\nexport class MouseEventArgs {\n    /**\n     * DOM Event or simulated event args\n     */\n    public event: MouseEvent | IMouseEvent;\n\n    /**\n     * @param event - DOM event or simulated event args\n     */\n    constructor(event: MouseEvent | IMouseEvent) {\n        this.event = event;\n    }\n}\n","import { Point } from '../../core/point';\nimport { Size } from '../../core/size';\nimport { ModelElement } from '../../elements/model-element';\nimport { Component } from './component';\n\n/**\n * Extends ModelElement class to add Component property\n */\nexport class ComponentElement extends ModelElement {\n    /**\n     * Element component\n     */\n    public component?: Component;\n\n    /**\n     * True if component accepts drag/drop\n     */\n    public acceptsDrag: boolean = false;\n\n    /**\n     * Extra, arbitrary component properties\n     */\n    public props: any;\n\n    /**\n     * @param source - Model element ID used as resource key in parent model\n     * @param left - Element X coordinate\n     * @param top - Element Y coordinate\n     * @param width - Element width\n     * @param height - Element height\n     */\n    constructor(source: string, left: number, top: number, width: number, height: number) {\n        super();\n        this.source = source;\n        this.setSize(new Size(width, height));\n        this.setLocation(new Point(left, top));\n    }\n}\n","import { IController } from '../controller/controller';\nimport { Model } from '../core/model';\nimport { TimerParameters } from '../core/timer-parameters';\nimport { ElementBase } from '../elements/element-base';\nimport { ModelElement } from '../elements/model-element';\nimport { SpriteElement } from '../elements/sprite-element';\nimport { ModelResource } from '../resource/model-resource';\nimport { CommandEventTrigger } from './command-event-trigger';\nimport { ICommandHandlerMethod } from './command-handler';\nimport { ICommandHandler } from './command-handler';\nimport { ElementCommand } from './element-command';\nimport { ElementCommandHandlerRegistration } from './element-command-handler-registration';\n\nexport class ElementCommandHandler implements ICommandHandler<ElementBase> {\n    public static PUSH_FILL = 'pushFill';\n    public static POP_FILL = 'popFill';\n    public static PUSH_STROKE = 'pushStroke';\n    public static POP_STROKE = 'popStroke';\n    public static PUSH_FRAME = 'pushFrame';\n    public static POP_FRAME = 'popFrame';\n\n    public static pushFill(c: IController, el: ElementBase, command: string, trigger: string, parameters: string) {\n        if (!el.fillStack) {\n            el.fillStack = [];\n        }\n        if (el.fill) {\n            el.fillStack.push(el.fill);\n        }\n        else {\n            el.fillStack.push('');\n        }\n        const ec: ElementCommand = ElementCommand.parse(command);\n        el.setFill(ec.parameter);\n        c.draw();\n    }\n\n    public static popFill(c: IController, el: ElementBase, command: string, trigger: string, parameters: string) {\n        if (!el.fillStack) {\n            return;\n        }\n        if (el.fillStack.length > 0) {\n            el.fill = el.fillStack.pop();\n        }\n        if (el.fillStack.length === 0) {\n            el.fillStack = undefined;\n        }\n        c.draw();\n    }\n\n    public static pushStroke(c: IController, el: ElementBase, command: string, trigger: string, parameters: string) {\n        if (!el.strokeStack) {\n            el.strokeStack = [];\n        }\n        if (el.stroke) {\n            el.strokeStack.push(el.stroke);\n        }\n        else {\n            el.strokeStack.push('');\n        }\n        const ec: ElementCommand = ElementCommand.parse(command);\n        el.stroke = ec.parameter;\n        c.draw();\n    }\n\n    public static popStroke(c: IController, el: ElementBase, command: string, trigger: string, parameters: any) {\n        if (!el.strokeStack) {\n            return;\n        }\n        if (el.strokeStack.length > 0) {\n            el.stroke = el.strokeStack.pop();\n        }\n        if (el.strokeStack.length === 0) {\n            el.strokeStack = undefined;\n        }\n        c.draw();\n    }\n\n    public static pushFrame(c: IController, element: ElementBase, command: string, trigger: string, parameters: any) {\n        const el = element as SpriteElement;\n        if (!el.frameStack) {\n            el.frameStack = [];\n        }\n        el.frameStack.push(el.frameIndex);\n        const ec: ElementCommand = ElementCommand.parse(command);\n        el.frameIndex = parseInt(ec.parameter, 10);\n        c.draw();\n    }\n\n    public static popFrame(c: IController, element: ElementBase, command: string, trigger: string, parameters: any) {\n        const el = element as SpriteElement;\n        if (!el.frameStack) {\n            return;\n        }\n        if (el.frameStack.length > 0) {\n            const index = el.frameStack.pop();\n            if (index !== undefined) {\n                el.frameIndex = index;\n            }\n        }\n        if (el.frameStack.length === 0) {\n            el.frameStack = undefined;\n        }\n        c.draw();\n    }\n\n    public registrations: ElementCommandHandlerRegistration[] = [];\n\n    constructor() {\n        this.attachController = this.attachController.bind(this);\n        this.elementMouseEntered = this.elementMouseEntered.bind(this);\n        this.elementMouseLeft = this.elementMouseLeft.bind(this);\n        this.elementMouseDown = this.elementMouseDown.bind(this);\n        this.elementMouseUp = this.elementMouseUp.bind(this);\n        this.elementClicked = this.elementClicked.bind(this);\n        this.callElementTimers = this.callElementTimers.bind(this);\n        this.timer = this.timer.bind(this);\n        this.onElementCommandFired = this.onElementCommandFired.bind(this);\n    }\n\n    public attachController(controller: IController): void {\n        controller.commandHandler = this;\n\n        controller.mouseEnteredElement.add(this.elementMouseEntered);\n        controller.mouseLeftElement.add(this.elementMouseLeft);\n        controller.mouseDownElement.add(this.elementMouseDown);\n        controller.mouseUpElement.add(this.elementMouseUp);\n        controller.elementClicked.add(this.elementClicked);\n        controller.timer.add(this.timer);\n    }\n\n    public elementMouseEntered(c: IController, el: ElementBase) {\n        if (c.commandHandler && el.mouseEnter) {\n            c.commandHandler.onElementCommandFired(c, el, el.mouseEnter, CommandEventTrigger.MouseEnter, null);\n        }\n    }\n\n    public elementMouseLeft(c: IController, el: ElementBase) {\n        if (c.commandHandler && el.mouseLeave) {\n            c.commandHandler.onElementCommandFired(c, el, el.mouseLeave, CommandEventTrigger.MouseLeave, null);\n        }\n    }\n\n    public elementMouseDown(c: IController, el: ElementBase) {\n        if (c.commandHandler && el.mouseDown) {\n            c.commandHandler.onElementCommandFired(c, el, el.mouseDown, CommandEventTrigger.MouseDown, null);\n        }\n    }\n\n    public elementMouseUp(c: IController, el: ElementBase) {\n        if (c.commandHandler && el.mouseUp) {\n            c.commandHandler.onElementCommandFired(c, el, el.mouseUp, CommandEventTrigger.MouseUp, null);\n        }\n    }\n\n    public elementClicked(c: IController, el: ElementBase) {\n        if (c.commandHandler && el.click) {\n            c.commandHandler.onElementCommandFired(c, el, el.click, CommandEventTrigger.Click, null);\n        }\n    }\n\n    public callElementTimers(m: Model, controller: IController, params: TimerParameters) {\n        for (const e of m.elements) {\n            if (controller.commandHandler && e.timer) {\n                controller.commandHandler.onElementCommandFired(\n                    controller,\n                    e,\n                    e.timer,\n                    CommandEventTrigger.Timer,\n                    params\n                );\n            }\n            if (e.type === 'model') {\n                let innerModel: Model | undefined;\n                const modelElement = e as ModelElement;\n                if (!modelElement.sourceModel && modelElement.source) {\n                    const res = m.resourceManager.get(modelElement.source) as ModelResource;\n                    if (res && res.model) {\n                        innerModel = res.model;\n                    }\n                }\n                else {\n                    innerModel = modelElement.sourceModel;\n                }\n                if (innerModel) {\n                    this.callElementTimers(innerModel, controller, params);\n                }\n            }\n        }\n        for (const r of m.resources) {\n            if (r.type === 'model') {\n                const mr = r as ModelResource;\n                if (mr.model) {\n                    this.callElementTimers(mr.model, controller, params);\n                }\n            }\n        }\n    }\n\n    public timer(controller: IController, params: TimerParameters) {\n        const m = controller.model;\n        if (m) {\n            this.callElementTimers(m, controller, params);\n        }\n    }\n\n    public onElementCommandFired(\n        controller: IController,\n        el: ElementBase,\n        command: string,\n        trigger: string,\n        parameters: any\n    ) {\n        const ec = ElementCommand.parse(command);\n        const reg = this.getRegistration(ec.name);\n        if (!reg) {\n            return false;\n        }\n        reg.handler(controller, el, command, trigger, parameters);\n        return true;\n    }\n\n    public getRegistration(command: string): ElementCommandHandlerRegistration | undefined {\n        for (const reg of this.registrations) {\n            if (reg.command === command) {\n                return reg;\n            }\n        }\n        return undefined;\n    }\n\n    public addHandler(command: string, handler: ICommandHandlerMethod<ElementBase>) {\n        const found: ElementCommandHandlerRegistration | undefined = this.getRegistration(command);\n        if (!found) {\n            this.registrations.push(new ElementCommandHandlerRegistration(command, handler));\n        }\n        else {\n            found.handler = handler;\n        }\n    }\n\n    public removeHandler(command: string) {\n        const found: ElementCommandHandlerRegistration | undefined = this.getRegistration(command);\n        if (found) {\n            this.registrations.splice(this.registrations.indexOf(found), 1);\n        }\n    }\n\n    public clearHandlers() {\n        this.registrations = [];\n    }\n}\n","import { GradientFillStop } from './gradient-fill-stop';\n\n/**\n * Describes  a linear gradient fill\n */\nexport class LinearGradientFill {\n    /**\n     * Linear gradient factory function\n     * @param start - Start point serialized as a string\n     * @param end - End point serialized as a string\n     * @returns New linear gradient fill\n     */\n    public static create(start: string, end: string) {\n        return new LinearGradientFill(start, end);\n    }\n\n    /**\n     * Gradient type tag (linearGradient)\n     */\n    public type: string;\n\n    /**\n     * Gradient start point as string\n     */\n    public start: string;\n\n    /**\n     * Gradient end point as string\n     */\n    public end: string;\n\n    /**\n     * Array of gradient fill stops\n     */\n    public stops: GradientFillStop[];\n\n    /**\n     * @param start - Start point serialized as a string\n     * @param end - End point serialized as a string\n     */\n    constructor(start: string, end: string) {\n        this.addFillStop = this.addFillStop.bind(this);\n        this.start = start;\n        this.end = end;\n        this.stops = [];\n        this.type = 'linearGradient';\n    }\n\n    public clone(): LinearGradientFill {\n        const lgr = new LinearGradientFill(this.start, this.end);\n        for (const stop of this.stops) {\n            lgr.addFillStop(stop.color, stop.offset);\n        }\n        return lgr;\n    }\n\n    /**\n     * Adds a fill stop to the gradient fill stops array\n     * @param color - Fill stop color\n     * @param offset - Fill stop offset\n     */\n    public addFillStop(color: string, offset: number) {\n        this.stops.push(new GradientFillStop(color, offset));\n    }\n}\n","import { GradientFillStop } from './gradient-fill-stop';\n\n/**\n * Describes a radial gradient fill\n */\nexport class RadialGradientFill {\n    /**\n     * Radial gradient factory function\n     * @param center - Gradient center point serialized as string\n     * @param focus - Gradient focal point serialized as string\n     * @param radiusX - Horizontal radius\n     * @param radiusY - Vertical radius\n     * @returns New radial gradient fill\n     */\n    public static create(center: string, focus: string, radiusX: number, radiusY: number) {\n        return new RadialGradientFill(center, focus, radiusX, radiusY);\n    }\n\n    /**\n     * Gradient type tag (radialGradient)\n     */\n    public type: string;\n\n    /**\n     * Gradient center point as string\n     */\n    public center: string;\n\n    /**\n     * Gradient focal point as string\n     */\n    public focus: string;\n\n    /**\n     * Gradient horizontal radius\n     */\n    public radiusX: number;\n\n    /**\n     * Gradient vertical radius\n     */\n    public radiusY: number;\n\n    /**\n     * Array of gradient fill stops\n     */\n    public stops: GradientFillStop[];\n\n    /**\n     * @param center - Gradient center point serialized as string\n     * @param focus - Gradient focal point serialized as string\n     * @param radiusX - Horizontal radius\n     * @param radiuxY - Vertical radius\n     */\n    constructor(center: string, focus: string, radiusX: number, radiusY: number) {\n        this.addFillStop = this.addFillStop.bind(this);\n        this.center = center;\n        this.focus = focus;\n        this.radiusX = radiusX;\n        this.radiusY = radiusY;\n        this.stops = [];\n        this.type = 'radialGradient';\n    }\n\n    /**\n     * Adds a fill stop to the gradient fill stops array\n     * @param color - Fill stop color\n     * @param offset - Fill stop offset\n     */\n    public addFillStop(color: string, offset: number) {\n        this.stops.push(new GradientFillStop(color, offset));\n    }\n\n    public clone(): RadialGradientFill {\n        const rgf = new RadialGradientFill(this.center, this.focus, this.radiusX, this.radiusY);\n        for (const stop of this.stops) {\n            rgf.addFillStop(stop.color, stop.offset);\n        }\n        return rgf;\n    }\n}\n","import { ErrorMessages } from '../core/error-messages';\nimport { Point } from '../core/point';\nimport { Size } from '../core/size';\nimport { BitmapResource } from '../resource/bitmap-resource';\nimport { ResourceManager } from '../resource/resource-manager';\nimport { ElementBase } from './element-base';\n\n/**\n * Renders a bitmap based image element\n */\nexport class ImageElement extends ElementBase {\n    /**\n     * Image element factory function\n     * @param source - Bitmap resource key or bitmap resource\n     * @param x - X coordinate\n     * @param y - Y coordinate\n     * @param width - Width\n     * @param height - Height\n     * @returns New image element\n     */\n    public static create(\n        source?: string | BitmapResource,\n        x?: number,\n        y?: number,\n        width?: number,\n        height?: number\n    ): ImageElement {\n        const e = new ImageElement();\n        if (source) {\n            if (typeof source === 'string') {\n                e.source = source;\n            }\n            else {\n                e.source = source.key;\n            }\n            if (x !== undefined && y !== undefined) {\n                e._location = new Point(x, y);\n            }\n            if (width !== undefined && height !== undefined) {\n                e._size = new Size(width, height);\n            }\n        }\n        return e;\n    }\n\n    /**\n     * Image resource key\n     */\n    public source?: string;\n\n    /**\n     *  Image opacity 0 (transparent) to 1 (opaque)\n     */\n    public opacity: number;\n\n    constructor() {\n        super('image');\n        this.setOpacity = this.setOpacity.bind(this);\n        this.opacity = 1.0;\n    }\n\n    /**\n     * Copies properties of another object to this instance\n     * @param o - Source element\n     */\n    public parse(o: any): void {\n        super.parse(o);\n        if (o.source) {\n            this.source = o.source;\n        }\n        if (o.opacity !== undefined) {\n            this.opacity = o.opacity;\n        }\n        if (!this._location) {\n            this._location = new Point(0, 0);\n        }\n    }\n\n    /**\n     * Serializes persistent properties to new object instance\n     * @returns Serialized element\n     */\n    public serialize(): any {\n        const o = super.serialize();\n        if (this.source) {\n            o.source = this.source;\n        }\n        if (this.opacity !== undefined && this.opacity !== 1) {\n            o.opacity = this.opacity;\n        }\n        if (this._location) {\n            o.location = this._location.toString();\n        }\n        return o;\n    }\n\n    /**\n     * Clones this image element to a new instance\n     * @returns Cloned image instance\n     */\n    public clone(): ImageElement {\n        const e: ImageElement = ImageElement.create();\n        super.cloneTo(e);\n        if (this.source) {\n            e.source = this.source;\n        }\n        if (this.opacity !== undefined) {\n            e.opacity = this.opacity;\n        }\n        return e;\n    }\n\n    /**\n     * Register image source with resource manager\n     * @param rm - Resource manager\n     */\n    public registerResources(rm: ResourceManager): void {\n        super.registerResources(rm);\n        if (this.source) {\n            rm.register(this.source);\n        }\n    }\n\n    /**\n     * Returns list of referenced resource keys\n     */\n    public getResourceKeys() {\n        const keys = super.getResourceKeys();\n        if (this.source) {\n            keys.push(this.source);\n        }\n        return keys;\n    }\n\n    /**\n     * Render image element to canvas context\n     * @param c - Rendering context\n     */\n    public draw(c: CanvasRenderingContext2D) {\n        const model = this.model;\n        if (!model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        if (this._location === undefined) {\n            throw new Error(ErrorMessages.LocationUndefined);\n        }\n        if (this._size === undefined) {\n            throw new Error(ErrorMessages.SizeUndefined);\n        }\n        if (this.source === undefined) {\n            throw new Error(ErrorMessages.SourceUndefined);\n        }\n        const res = model.resourceManager.get(this.source) as BitmapResource;\n        c.save();\n        if (this.transform) {\n            model.setRenderTransform(c, this.transform, this._location);\n        }\n        if (this.opacity !== undefined && this.opacity > 0 && this.opacity < 1.0) {\n            const o = c.globalAlpha;\n            c.globalAlpha = this.opacity;\n            if (res.image) {\n                c.drawImage(res.image, this._location.x, this._location.y, this._size.width, this._size.height);\n            }\n            c.globalAlpha = o;\n        }\n        else if (res.image !== undefined) {\n            try {\n                c.drawImage(res.image, this._location.x, this._location.y, this._size.width, this._size.height);\n            } catch (ignore) {\n                console.log('Error rendering image in ImageElement.draw.');\n            }\n        }\n        if (model.setElementStroke(c, this)) {\n            c.strokeRect(this._location.x, this._location.y, this._size.width, this._size.height);\n        }\n        c.restore();\n    }\n\n    /**\n     * Set image opacity\n     * @param opacity - Image opacity in the range of 0-1\n     * @returns This element\n     */\n    public setOpacity(opacity: number) {\n        this.opacity = opacity;\n        return this;\n    }\n\n    /**\n     * Can element be stroked\n     * @returns Can stroke\n     */\n    public canStroke(): boolean {\n        return true;\n    }\n}\n","import { ErrorMessages } from '../core/error-messages';\nimport { Model } from '../core/model';\nimport { Point } from '../core/point';\nimport { Size } from '../core/size';\nimport { ModelResource } from '../resource/model-resource';\nimport { ResourceManager } from '../resource/resource-manager';\nimport { ElementBase } from './element-base';\n\n/**\n * Renders embedded or externally referenced model\n */\nexport class ModelElement extends ElementBase {\n    /**\n     * Model element factory function\n     * @param source - Model resource key or model resource to render\n     * @param x - X coordinate\n     * @param y - Y coordinate\n     * @param width - Width\n     * @param height - Height\n     * @returns New model element\n     */\n    public static create(\n        source?: string | ModelResource,\n        x?: number,\n        y?: number,\n        width?: number,\n        height?: number\n    ): ModelElement {\n        const e = new ModelElement();\n        if (source !== undefined) {\n            if (typeof source === 'string') {\n                e.source = source;\n            }\n            else {\n                e.source = source.key;\n            }\n            if (x !== undefined && y !== undefined) {\n                e._location = new Point(x, y);\n            }\n            if (width !== undefined && height !== undefined) {\n                e._size = new Size(width, height);\n            }\n        }\n        return e;\n    }\n\n    /**\n     * Model resource key\n     */\n    public source?: string;\n\n    /**\n     * Rendering opacity (0-1)\n     */\n    public opacity: number;\n\n    /**\n     * Directly embedded source model\n     */\n    public sourceModel?: Model;\n\n    constructor() {\n        super('model');\n        this.setOpacity = this.setOpacity.bind(this);\n        this.opacity = 1;\n    }\n\n    /**\n     * Copies properties of another object to this instance\n     * @param o - Source object\n     */\n    public parse(o: any): void {\n        super.parse(o);\n        if (o.source) {\n            this.source = o.source;\n        }\n        if (o.opacity !== undefined) {\n            this.opacity = o.opacity;\n        }\n        if (!this._location) {\n            this._location = new Point(0, 0);\n        }\n    }\n\n    /**\n     * Serializes persistent properties to new object instance\n     * @returns Serialized element\n     */\n    public serialize(): any {\n        const o = super.serialize();\n        if (this.source) {\n            o.source = this.source;\n        }\n        if (this.opacity !== undefined && this.opacity !== 1) {\n            o.opacity = this.opacity;\n        }\n        return o;\n    }\n\n    /**\n     * Clones this model element to a new instance\n     * @returns Cloned model element\n     */\n    public clone() {\n        const e: ModelElement = ModelElement.create();\n        super.cloneTo(e);\n        if (this.source) {\n            e.source = this.source;\n        }\n        if (this.opacity !== undefined) {\n            e.opacity = this.opacity;\n        }\n        return e;\n    }\n\n    /**\n     * Sets rendering opacity in the range of 0-1\n     * @param opacity - Rendering opacity\n     */\n    public setOpacity(opacity: number) {\n        this.opacity = opacity;\n        return this;\n    }\n\n    /**\n     * Registers referenced resources with resource manager\n     * @param rm - Resource manager\n     */\n    public registerResources(rm: ResourceManager): void {\n        super.registerResources(rm);\n        if (this.source) {\n            rm.register(this.source);\n        }\n    }\n\n    /**\n     * Returns list of referenced resource keys\n     */\n    public getResourceKeys() {\n        const keys = super.getResourceKeys();\n        if (this.source) {\n            keys.push(this.source);\n        }\n        return keys;\n    }\n\n    /**\n     * Render model element to canvas context\n     * @param c - Rendering context\n     */\n    public draw(c: CanvasRenderingContext2D): void {\n        const model = this.model;\n        let innerModel: Model | undefined;\n        innerModel = undefined;\n        if (!model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        if (!this._location) {\n            throw new Error(ErrorMessages.LocationUndefined);\n        }\n        if (!this.sourceModel && this.source) {\n            const res = model.resourceManager.get(this.source) as ModelResource;\n            innerModel = res.model;\n        }\n        else if (this.sourceModel) {\n            innerModel = this.sourceModel;\n        }\n\n        if (!innerModel) {\n            throw new Error(`Model resource ${this.source} could not be loaded.`);\n        }\n\n        const x = this._location.x;\n        const y = this._location.y;\n        let w = 0;\n        let h = 0;\n        let rx = 1;\n        let ry = 1;\n        const size = innerModel.getSize();\n        if (this._size && !this._size.equals(Size.Empty)) {\n            w = this._size.width;\n            h = this._size.height;\n        }\n        else if (size) {\n            w = size.width;\n            h = size.height;\n        }\n        if (size) {\n            rx = w / size.width;\n            ry = h / size.height;\n        }\n\n        // Clip to bounds\n        /*\n        c.save();\n        c.rect(x, y, w, h);\n        c.stroke();\n        c.clip();\n        */\n\n        // If not full opacity, then render to intermediate canvas\n        if (this.opacity !== undefined && this.opacity > 0 && this.opacity < 1.0) {\n            const offscreen = document.createElement('canvas') as HTMLCanvasElement;\n            offscreen.width = w;\n            offscreen.height = h;\n            const c2 = offscreen.getContext('2d');\n            if (c2) {\n                c2.scale(rx, ry);\n                innerModel.renderToContext(c2);\n            }\n            c.save();\n            c.globalAlpha = this.opacity;\n            if (this.transform) {\n                model.setRenderTransform(c, this.transform, new Point(x, y));\n            }\n            c.drawImage(offscreen, x, y);\n            c.restore();\n        }\n        else {\n            c.save();\n            if (this.transform) {\n                model.setRenderTransform(c, this.transform, new Point(x, y));\n            }\n            c.save();\n            c.translate(x, y);\n            if (rx !== 1 || ry !== 1) {\n                c.scale(rx, ry);\n            }\n            innerModel.renderToContext(c);\n            c.restore();\n            c.restore();\n        }\n\n        // Restore from clip\n        // c.restore();\n    }\n}\n","/**\n * Polygon fill winding mode enumeration\n */\nexport enum WindingMode {\n    /**\n     * Non-zero winding mode\n     */\n    NonZero = 1,\n\n    /**\n     * Even/odd (alternate) winding mode\n     */\n    EvenOdd = 2\n}\n","import { ErrorMessages } from '../core/error-messages';\nimport { Point } from '../core/point';\nimport { IPointContainer } from '../core/point-container';\nimport { PointDepth } from '../core/point-depth';\nimport { Region } from '../core/region';\nimport { Size } from '../core/size';\nimport { ElementBase } from './element-base';\nimport { InvalidIndexException } from './invalid-index-exception';\n\n/**\n * Renders connected, stroked line segments between three or more points\n */\nexport class PolylineElement extends ElementBase implements IPointContainer {\n    /**\n     * Polyline element factory function\n     * @returns New polyline\n     */\n    public static create(): PolylineElement {\n        const e = new PolylineElement();\n        return e;\n    }\n\n    /**\n     *  Computed bounding region\n     */\n    public bounds?: Region;\n\n    /**\n     * True when in point editing mode\n     */\n    public editPoints: boolean = false;\n\n    /**\n     * True to smooth points\n     */\n    public smoothPoints: boolean = false;\n\n    /**\n     * Point array\n     */\n    private _points?: Point[];\n\n    constructor() {\n        super('polyline');\n        this.addPoint = this.addPoint.bind(this);\n        this.getPoints = this.getPoints.bind(this);\n        this.setPoints = this.setPoints.bind(this);\n    }\n\n    /**\n     * Points get accessor as string. Serializes point array into string.\n     * @returns Serialized point array\n     */\n    get points(): string | undefined {\n        if (!this._points) {\n            return undefined;\n        }\n        else {\n            let result = '';\n            let isFirst = true;\n            for (const p of this._points) {\n                if (isFirst) {\n                    isFirst = false;\n                }\n                else {\n                    result += ' ';\n                }\n                result += p.toString();\n            }\n            return result;\n        }\n    }\n\n    /**\n     * Points set accessor as string.  Parses serialized string of points.\n     * @param pointString - Serialized point array\n     */\n    set points(pointString: string | undefined) {\n        if (!pointString) {\n            this._points = undefined;\n        }\n        else {\n            this._points = [];\n            const parts = pointString.split(' ');\n            for (const part of parts) {\n                this._points.push(Point.parse(part));\n            }\n        }\n        this.bounds = undefined;\n    }\n\n    /**\n     * Sets point array as either serialized points string or Point array.\n     * @param pointsSource - Point source as either string of Point array\n     * @return This polyline element\n     */\n    public setPoints(pointsSource: string | Point[]) {\n        if (typeof pointsSource === 'string') {\n            this.points = pointsSource;\n        }\n        else {\n            this._points = pointsSource.slice(0);\n        }\n        this.bounds = undefined;\n        return this;\n    }\n\n    /**\n     * Gets point array\n     * @return Copy of internal points array\n     */\n    public getPoints(): Point[] | undefined {\n        if (this._points) {\n            return this._points.slice(0);\n        }\n        else {\n            return undefined;\n        }\n    }\n\n    /**\n     * Copies properties of another object to this instance\n     * @param o - Source object\n     */\n    public parse(o: any): void {\n        super.parse(o);\n        if (o.points) {\n            this.points = o.points;\n        }\n        if (o.smoothPoints) {\n            this.smoothPoints = o.smoothPoints;\n        }\n        this.bounds = undefined;\n    }\n\n    /**\n     * Serializes persistent properties to new object instance\n     * @returns Serialized element\n     */\n    public serialize(): any {\n        const o = super.serialize();\n        o.size = undefined;\n        o.location = undefined;\n        if (this.points) {\n            o.points = this.points;\n        }\n        if (this.smoothPoints) {\n            o.smoothPoints = this.smoothPoints;\n        }\n        return o;\n    }\n\n    /**\n     * Clones this polyline element to a new instance\n     * @returns Cloned polyline instance\n     */\n    public clone() {\n        const e: PolylineElement = PolylineElement.create();\n        super.cloneTo(e);\n        if (this.points) {\n            e.points = this.points;\n        }\n        if (this.smoothPoints) {\n            e.smoothPoints = this.smoothPoints;\n        }\n        return e;\n    }\n\n    /**\n     * Render polyline to canvas context\n     * @param c - Rendering context\n     */\n    public draw(c: CanvasRenderingContext2D): void {\n        const model = this.model;\n        if (!model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        if (!this._points) {\n            throw new Error(ErrorMessages.NoPointsAreDefined);\n        }\n        const bounds = this.getBounds();\n        if (!bounds) {\n            throw new Error(ErrorMessages.BoundsAreUndefined);\n        }\n        c.save();\n        if (this.transform) {\n            model.setRenderTransform(c, this.transform, bounds.location);\n        }\n        c.beginPath();\n        if (this.smoothPoints) {\n            c.moveTo(this._points[0].x, this._points[0].y);\n            let i;\n            for (i = 1; i < this._points.length - 2; i++) {\n                const xc = (this._points[i].x + this._points[i + 1].x) / 2;\n                const yc = (this._points[i].y + this._points[i + 1].y) / 2;\n                c.quadraticCurveTo(this._points[i].x, this._points[i].y, xc, yc);\n            }\n            c.lineCap = 'round';\n            c.lineTo(this._points[i + 1].x, this._points[i + 1].y);\n            // c.quadraticCurveTo(this._points[i].x, this._points[i].y, this._points[i+1].x, this._points[i+1].y);\n        }\n        else {\n            c.moveTo(this._points[0].x, this._points[0].y);\n            const pl = this._points.length;\n            for (let i = 1; i < pl; i++) {\n                const p = this._points[i];\n                c.lineTo(p.x, p.y);\n            }\n        }\n        if (model.setElementStroke(c, this)) {\n            c.stroke();\n        }\n        c.restore();\n    }\n\n    /**\n     * Hit test polyline.  Return true if point is on polyline\n     * @param c - Rendering context\n     * @param tx - X coordinate of point\n     * @param ty - Y coordinate of point\n     * @returns True if point is on polyline\n     */\n    public hitTest(c: CanvasRenderingContext2D, tx: number, ty: number): boolean {\n        let hit = false;\n        if (!this.model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        if (!this._points) {\n            throw new Error(ErrorMessages.NoPointsAreDefined);\n        }\n        const bounds = this.getBounds();\n        if (!bounds) {\n            throw new Error(ErrorMessages.BoundsAreUndefined);\n        }\n        c.save();\n        if (this.transform) {\n            this.model.setRenderTransform(c, this.transform, bounds.location);\n        }\n        c.beginPath();\n        if (this.smoothPoints) {\n            c.moveTo(this._points[0].x, this._points[0].y);\n            let i;\n            for (i = 1; i < this._points.length - 2; i++) {\n                const xc = (this._points[i].x + this._points[i + 1].x) / 2;\n                const yc = (this._points[i].y + this._points[i + 1].y) / 2;\n                c.quadraticCurveTo(this._points[i].x, this._points[i].y, xc, yc);\n            }\n            c.quadraticCurveTo(this._points[i].x, this._points[i].y, this._points[i + 1].x, this._points[i + 1].y);\n        }\n        else {\n            c.moveTo(this._points[0].x, this._points[0].y);\n            const pl = this._points.length;\n            for (let i = 1; i < pl; i++) {\n                c.lineTo(this._points[i].x, this._points[i].y);\n            }\n        }\n        hit = c.isPointInPath(tx, ty);\n        c.restore();\n        return hit;\n    }\n\n    /**\n     * Returns string description of polyline\n     * @returns Description\n     */\n    public toString(): string {\n        if (this._points) {\n            return this.type + ' -  ' + this._points.length + ' Points';\n        }\n        else {\n            return this.type + ' -  0 Points';\n        }\n    }\n\n    /**\n     * Can element be stroked\n     * @returns Can stroke\n     */\n    public canStroke(): boolean {\n        return true;\n    }\n\n    /**\n     * Polylines can be moved using mouse\n     * @returns True\n     */\n    public canMove(): boolean {\n        return true;\n    }\n\n    /**\n     * Polylines can be sized unless in point editing mode\n     * @returns True unless in point editing mode\n     */\n    public canResize(): boolean {\n        if (this.editPoints) {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * Polylines can be nudged with the keyboard\n     * @returns True\n     */\n    public canNudge(): boolean {\n        return true;\n    }\n\n    /**\n     * Polylines support individual point movement when in point editing mode\n     * @returns True if in point editing mode\n     */\n    public canMovePoint(): boolean {\n        if (this.editPoints) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Polylines support point editing mode\n     * @returns True\n     */\n    public canEditPoints(): boolean {\n        return true;\n    }\n\n    /**\n     * Nudges size of polylinw by a given width and height offset\n     * @param offsetX - X offset\n     * @param offsetY - Y offset\n     * @returns This polyline\n     */\n    public nudgeSize(offsetX: number, offsetY: number) {\n        if (!this._points) {\n            return this;\n        }\n        const bounds = this.getBounds();\n        if (!bounds) {\n            throw new Error(ErrorMessages.BoundsAreUndefined);\n        }\n        let newWidth = bounds.width + offsetX;\n        if (newWidth < 1) {\n            newWidth = 1;\n        }\n        let newHeight = bounds.height + offsetY;\n        if (newHeight < 1) {\n            newHeight = 1;\n        }\n        if (this.aspectLocked) {\n            if (offsetX === 0) {\n                this.scale(newHeight / bounds.height, newHeight / bounds.height);\n            }\n            else {\n                this.scale(newWidth / bounds.width, newWidth / bounds.width);\n            }\n        }\n        else {\n            this.scale(newWidth / bounds.width, newHeight / bounds.height);\n        }\n        this.bounds = undefined;\n        return this;\n    }\n\n    /**\n     * Scales polyline points by given horizontal and vertical scaling factors\n     * @param scaleX - Horizontal scaling factor\n     * @param scaleY - Vertical scaling factor\n     * @returns This polyline element\n     */\n    public scale(scaleX: number, scaleY: number) {\n        if (!this._points) {\n            return this;\n        }\n        const newPoints: Point[] = [];\n        const pl = this._points.length;\n        const location = this.getLocation();\n        if (!location) {\n            throw new Error(ErrorMessages.LocationUndefined);\n        }\n        for (const point of this._points) {\n            newPoints.push(Point.scale(point, scaleX, scaleY, location.x, location.y));\n        }\n        this._points = newPoints;\n        this.bounds = undefined;\n        return this;\n    }\n\n    /**\n     * Moves this polyline element by the given X and Y offsets\n     * @param offsetX - X size offset\n     * @param offsetY - Y size offset\n     * @returns This polyline\n     */\n    public translate(offsetX: number, offsetY: number) {\n        if (!this._points) {\n            return this;\n        }\n        const newPoints: Point[] = [];\n        for (const point of this._points) {\n            newPoints.push(Point.translate(point, offsetX, offsetY));\n        }\n        this._points = newPoints;\n        this.bounds = undefined;\n        return this;\n    }\n\n    /**\n     * Computes (if undefined) and returns rectangular bounding region\n     * @returns Polyline bounding region\n     */\n    public getBounds(): Region | undefined {\n        if (this.bounds) {\n            return this.bounds;\n        }\n        if (!this._points) {\n            return undefined;\n        }\n        let minX: number | undefined;\n        let minY: number | undefined;\n        let maxX: number | undefined;\n        let maxY: number | undefined;\n        for (const p of this._points) {\n            if (!minX) {\n                minX = p.x;\n            }\n            else if (p.x < minX) {\n                minX = p.x;\n            }\n            if (!minY) {\n                minY = p.y;\n            }\n            else if (p.y < minY) {\n                minY = p.y;\n            }\n            if (!maxX) {\n                maxX = p.x;\n            }\n            else if (p.x > maxX) {\n                maxX = p.x;\n            }\n            if (!maxY) {\n                maxY = p.y;\n            }\n            else if (p.y > maxY) {\n                maxY = p.y;\n            }\n        }\n        if (minX !== undefined && minY !== undefined && maxX !== undefined && maxY !== undefined) {\n            this.bounds = new Region(minX, minY, maxX - minX, maxY - minY);\n            this._location = new Point(minX, minY);\n            this._size = new Size(this.bounds.width, this.bounds.height);\n            return this.bounds;\n        }\n        return undefined;\n    }\n\n    /**\n     * Moves polyline\n     * @param pointSource - New location\n     * @returns This polyline\n     */\n    public setLocation(pointSource: string | Point) {\n        if (!this._points) {\n            return this;\n        }\n        const bounds = this.getBounds();\n        if (!bounds) {\n            throw new Error(ErrorMessages.BoundsAreUndefined);\n        }\n        let pt: Point;\n        if (typeof pointSource === 'string') {\n            pt = Point.parse(pointSource);\n        }\n        else {\n            pt = new Point(pointSource.x, pointSource.y);\n        }\n        const deltaX = pt.x - bounds.x;\n        const deltaY = pt.y - bounds.y;\n        this.translate(deltaX, deltaY);\n        return this;\n    }\n\n    /**\n     * Resizes polyline\n     * @param size - New size\n     * @returns This polyline\n     */\n    public setSize(sizeSource: string | Size) {\n        const size = Size.parse(sizeSource);\n        const bounds = this.getBounds();\n        if (!bounds) {\n            throw new Error(ErrorMessages.BoundsAreUndefined);\n        }\n        const scaleX = size.width / bounds.width;\n        const scaleY = size.height / bounds.height;\n        this.scale(scaleX, scaleY);\n        return this;\n    }\n\n    /**\n     * Returns number of points in polyline\n     * @returns Number of points\n     */\n    public pointCount(): number {\n        if (this._points) {\n            return this._points.length;\n        }\n        return 0;\n    }\n\n    /**\n     * Returns point at a given index (0 to # points - 1)\n     * @param index - Point index (0 to # points - 1)\n     * @param depth - Not applicable\n     * @returns Requested point\n     */\n    public getPointAt(index: number, depth?: PointDepth): Point {\n        if (!this._points) {\n            throw new Error(ErrorMessages.NoPointsAreDefined);\n        }\n        if (index >= 0 && index < this._points.length) {\n            return this._points[index];\n        }\n        throw new InvalidIndexException(index);\n    }\n\n    /**\n     * Sets point at a given index (0 to # points - 1)\n     * @param index - Point index (0 to # points - 1)\n     * @param value - New point value\n     * @param depth - Not applicable to this element\n     */\n    public setPointAt(index: number, value: Point, depth: PointDepth) {\n        if (!this._points) {\n            throw new Error(ErrorMessages.NoPointsAreDefined);\n        }\n        if (index >= 0 && index < this._points.length) {\n            this._points[index] = value;\n            this.bounds = undefined;\n            return this;\n        }\n        throw new InvalidIndexException(index);\n    }\n\n    /**\n     * Adds a new point to this polyline\n     * @param point - New point\n     * @returns This polyline\n     */\n    public addPoint(point: Point) {\n        if (!this._points) {\n            this._points = [];\n        }\n        this._points.push(point);\n        this.bounds = undefined;\n        return this;\n    }\n}\n","import { ErrorMessages } from '../../core/error-messages';\nimport { Model } from '../../core/model';\nimport { ElementCreationProps } from '../../elements/element-creation-props';\nimport { ElementDragArgs } from '../../elements/element-drag-args';\nimport { ElementSizeProps } from '../../elements/element-size-props';\nimport { RectangleElement } from '../../elements/rectangle-element';\nimport { UploadCompletionProps } from '../../elements/upload-completion-props';\nimport { UploadProgressProps } from '../../elements/upload-progress-props';\nimport { LinearGradientFill } from '../../fill/linear-gradient-fill';\nimport { RadialGradientFill } from '../../fill/radial-gradient-fill';\nimport { ModelResource } from '../../resource/model-resource';\nimport { ComponentElement } from './component-element';\nimport { ComponentEvent } from './component-event';\nimport { ComponentProps } from './component-props';\n\n/**\n * Element component template\n */\nexport class Component {\n    public static baseImagePath: string;\n\n    /**\n     * Default component element selection handler\n     * @param component - Component\n     * @param el - Component element\n     */\n    public static defaultSelect(component: Component, el: ComponentElement): void {\n        return;\n    }\n\n    /**\n     * Default component element deselection handler\n     * @param component - Component\n     * @param el - Component element\n     */\n    public static defaultDeselect(component: Component, el: ComponentElement): void {\n        return;\n    }\n\n    /**\n     * Default component element drag enter handler\n     * @param component - Component\n     * @param args - Element drag args\n     */\n    public static defaultDragEnter(component: Component, args: ElementDragArgs): void {\n        const el = args.element;\n        if (!el.model) {\n            return;\n        }\n        if (!el.id) {\n            throw new Error(ErrorMessages.ElementIdUndefined);\n        }\n        const mr: ModelResource = el.model.resourceManager.get(el.id) as ModelResource;\n        const model = mr.model;\n        if (!model) {\n            return;\n        }\n        const size = model.getSize();\n        if (!size) {\n            throw new Error(ErrorMessages.SizeUndefined);\n        }\n        model.setStroke(undefined);\n        let dragRect = model.elementWithId('dragrect');\n        if (!dragRect) {\n            dragRect = RectangleElement.create(0, 0, size.width, size.height)\n                .setStroke('#88ff0000,9')\n                .setFill('#88ffd700')\n                .addTo(model);\n            dragRect.id = 'dragrect';\n        }\n    }\n\n    /**\n     * Default component element drag leave handler\n     * @param component - Component\n     * @param args - Element drag args\n     */\n    public static defaultDragLeave(component: Component, args: ElementDragArgs): void {\n        const el = args.element;\n        if (!el.model || !el.id) {\n            return;\n        }\n        const mr: ModelResource = el.model.resourceManager.get(el.id) as ModelResource;\n        const model = mr.model;\n        if (!model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        model.setStroke('Black');\n        const dragRect = model.elementWithId('dragrect');\n        if (dragRect) {\n            model.remove(dragRect);\n        }\n    }\n\n    /**\n     * Name\n     */\n    public name?: string;\n\n    /**\n     * Normal state fill\n     */\n    public fill?: string | LinearGradientFill | RadialGradientFill;\n\n    /**\n     * Normal state stroke\n     */\n    public stroke?: string;\n\n    /**\n     * Selected state fill\n     */\n    public selectedFill?: string | LinearGradientFill | RadialGradientFill;\n\n    /**\n     * Selected state stroke\n     */\n    public selectedStroke?: string;\n\n    /**\n     * True if component accepts file drag and drop\n     */\n    public acceptsDrag: boolean = false;\n\n    /**\n     * Array of file extensions component supports\n     */\n    public fileExtensions?: string[];\n\n    /**\n     * Component element initialization (callback:(success: boolean)=>void)=>void\n     */\n    public initialize?: (callback: (success: boolean) => void) => void;\n\n    /**\n     * Initialized flag.  True after initialization\n     */\n    public initialized: boolean = false;\n\n    /**\n     * Component element creation handler (props: ElementCreationProps)=>ComponentElement\n     */\n    public create?: (props: ElementCreationProps) => ComponentElement;\n\n    /**\n     * Component element set canvas creation fill function (controller: DesignController, c: CanvasRenderingContext2D)\n     */\n    public setCreationFill?: (c: CanvasRenderingContext2D) => void;\n\n    /**\n     * Component element fill image provider function (callback:(image: HTMLImageElement)=>void)=>void\n     */\n    public getFillImage?: (callback: (image: HTMLImageElement) => void) => void;\n\n    /**\n     * Component element selection event\n     */\n    public select: ComponentEvent<ComponentElement> = new ComponentEvent<ComponentElement>();\n\n    /**\n     * Component element deselection event\n     */\n    public deselect: ComponentEvent<ComponentElement> = new ComponentEvent<ComponentElement>();\n\n    /**\n     * Component element drag enter event\n     */\n    public dragEnter: ComponentEvent<ElementDragArgs> = new ComponentEvent<ElementDragArgs>();\n\n    /**\n     * Component element drag leave event\n     */\n    public dragLeave: ComponentEvent<ElementDragArgs> = new ComponentEvent<ElementDragArgs>();\n\n    /**\n     * Component element size event\n     */\n    public size: ComponentEvent<ElementSizeProps> = new ComponentEvent<ElementSizeProps>();\n\n    /**\n     * Component element upload start event\n     */\n    public uploadStart: ComponentEvent<ComponentElement> = new ComponentEvent<ComponentElement>();\n\n    /**\n     * Component element upload complete event\n     */\n    public uploadComplete: ComponentEvent<UploadCompletionProps> = new ComponentEvent<UploadCompletionProps>();\n\n    /**\n     * Component element upload progress event\n     */\n    public uploadProgress: ComponentEvent<UploadProgressProps> = new ComponentEvent<UploadProgressProps>();\n\n    /**\n     * @param name - Component name\n     * @param props - Component properties\n     */\n    constructor(name: string, props: ComponentProps) {\n        this.CreateElement = this.CreateElement.bind(this);\n        this.GetFillImage = this.GetFillImage.bind(this);\n        this.onSize = this.onSize.bind(this);\n        this.onSelect = this.onSelect.bind(this);\n        this.onDeselect = this.onDeselect.bind(this);\n        this.onUploadStart = this.onUploadStart.bind(this);\n        this.onUploadComplete = this.onUploadComplete.bind(this);\n        this.onComponentUploadProgress = this.onComponentUploadProgress.bind(this);\n\n        this.name = name;\n        if (props.fill) {\n            this.fill = props.fill;\n        }\n        if (props.stroke) {\n            this.stroke = props.stroke;\n        }\n        if (props.selectedFill) {\n            this.selectedFill = props.selectedFill;\n        }\n        if (props.selectedStroke) {\n            this.selectedStroke = props.selectedStroke;\n        }\n        if (props.acceptsDrag) {\n            this.acceptsDrag = props.acceptsDrag;\n            if (props.fileExtensions) {\n                this.fileExtensions = props.fileExtensions;\n            }\n            else {\n                this.fileExtensions = [ '*' ];\n            }\n        }\n        else {\n            this.acceptsDrag = false;\n        }\n        if (props.initialize) {\n            this.initialize = props.initialize;\n        }\n        this.initialized = props.initialized;\n        if (props.create != null) {\n            this.create = props.create;\n        }\n        if (props.setCreationFill) {\n            this.setCreationFill = props.setCreationFill;\n        }\n        if (props.getFillImage) {\n            this.getFillImage = props.getFillImage;\n        }\n        if (props.select.hasListeners()) {\n            props.select.copyTo(this.select);\n        }\n        else {\n            this.select.add(Component.defaultSelect);\n        }\n        if (props.deselect.hasListeners()) {\n            props.deselect.copyTo(this.deselect);\n        }\n        else {\n            this.deselect.add(Component.defaultDeselect);\n        }\n        if (props.dragEnter.hasListeners()) {\n            props.dragEnter.copyTo(this.dragEnter);\n        }\n        else {\n            this.dragEnter.add(Component.defaultDragEnter);\n        }\n        if (props.dragLeave.hasListeners()) {\n            props.dragLeave.copyTo(this.dragLeave);\n        }\n        else {\n            this.dragLeave.add(Component.defaultDragLeave);\n        }\n        if (props.size.hasListeners()) {\n            props.size.copyTo(this.size);\n        }\n        if (props.uploadStart.hasListeners()) {\n            props.uploadStart.copyTo(this.uploadStart);\n        }\n        if (props.uploadComplete.hasListeners()) {\n            props.uploadComplete.copyTo(this.uploadComplete);\n        }\n        if (props.uploadProgress.hasListeners()) {\n            props.uploadProgress.copyTo(this.uploadProgress);\n        }\n    }\n\n    /**\n     * Creates a component element\n     * @param model - Target model for new component element\n     * @param id - New element id\n     * @param left - X coordinate\n     * @param top - Y coordinate\n     * @param width - Width\n     * @param height - Height\n     * @param props - Extra element properties\n     */\n    public CreateElement(\n        model: Model,\n        id: string,\n        left: number,\n        top: number,\n        width: number,\n        height: number,\n        props: any\n    ) {\n        let el = null;\n        if (this.create) {\n            el = this.create(new ElementCreationProps(model, id, left, top, width, height, props));\n        }\n        else {\n            const elProps = new ElementCreationProps(model, id, left, top, width, height, props);\n            const componentProps = new ComponentProps();\n            el = componentProps.defaultCreate(elProps);\n            model.add(el);\n        }\n        el.id = id;\n        if (this.acceptsDrag) {\n            el.acceptsDrag = true;\n        }\n        el.component = this;\n        if (props) {\n            el.props = props;\n        }\n        return el;\n    }\n\n    /**\n     * Fill image provider function\n     * @param callback - Image provider callback function (image: HTMLImageElement)\n     */\n    public GetFillImage(callback: (image: HTMLImageElement) => void): void {\n        if (this.getFillImage) {\n            this.getFillImage(callback);\n        }\n    }\n\n    /**\n     * Triggers component element size handler\n     * @param props - Element size props\n     */\n    public onSize(props: ElementSizeProps): void {\n        this.size.trigger(this, props);\n    }\n\n    /**\n     * Triggers component element selection handler\n     * @param el - Element being selected\n     */\n    public onSelect(el: ComponentElement): void {\n        this.select.trigger(this, el);\n    }\n\n    /**\n     * Triggers component element deselection handler\n     * @param el - Element being deselected\n     */\n    public onDeselect(el: ComponentElement): void {\n        this.deselect.trigger(this, el);\n    }\n\n    /**\n     * Triggers component element upload start handler\n     * @param el - Element with upload starting\n     */\n    public onUploadStart(el: ComponentElement): void {\n        this.uploadStart.trigger(this, el);\n    }\n\n    /**\n     * Triggers component element upload completion handler\n     * @param el - Element with upload completed\n     * @param success - Upload completion status\n     */\n    public onUploadComplete(el: ComponentElement, success: boolean): void {\n        if (this.uploadComplete.hasListeners()) {\n            this.uploadComplete.trigger(this, new UploadCompletionProps(el, success));\n        }\n    }\n\n    /**\n     * Triggers component element upload progress handler\n     * @param el - Element with upload progressing\n     * @param percent - Percent of upload complete\n     */\n    public onComponentUploadProgress(el: ComponentElement, percent: number): void {\n        if (this.uploadProgress.hasListeners()) {\n            this.uploadProgress.trigger(this, new UploadProgressProps(el, percent));\n        }\n    }\n}\n","import { Model } from '../../core/model';\nimport { ElementCreationProps } from '../../elements/element-creation-props';\nimport { ElementDragArgs } from '../../elements/element-drag-args';\nimport { ElementSizeProps } from '../../elements/element-size-props';\nimport { UploadCompletionProps } from '../../elements/upload-completion-props';\nimport { UploadProgressProps } from '../../elements/upload-progress-props';\nimport { LinearGradientFill } from '../../fill/linear-gradient-fill';\nimport { RadialGradientFill } from '../../fill/radial-gradient-fill';\nimport { ModelResource } from '../../resource/model-resource';\nimport { Component } from './component';\nimport { ComponentElement } from './component-element';\nimport { ComponentEvent } from './component-event';\n\n/**\n * Describes element component creation properties\n */\nexport class ComponentProps {\n    /**\n     * Base image path for image based components\n     */\n    public static baseImagePath: string;\n\n    /**\n     * Standard element creation fill (default - Half transparent Gold #7fffd700)\n     */\n    public static standardFill = '#7fffd700';\n\n    /**\n     * Standard element creation stroke (default - Solid Red)\n     */\n    public static standardStroke = 'Red';\n\n    /**\n     * Name\n     */\n    public name?: string;\n\n    /**\n     * Normal state fill\n     */\n    public fill?: string | LinearGradientFill | RadialGradientFill;\n\n    /**\n     * Normal state stroke\n     */\n    public stroke?: string;\n\n    /**\n     * Selected state fill\n     */\n    public selectedFill?: string | LinearGradientFill | RadialGradientFill;\n\n    /**\n     * Selected state stroke\n     */\n    public selectedStroke?: string;\n\n    /**\n     * True if component accepts file drag and drop\n     */\n    public acceptsDrag: boolean = false;\n\n    /**\n     * Array of file extensions component supports\n     */\n    public fileExtensions?: string[];\n\n    /**\n     * Initialized flag.  True after initialization\n     */\n    public initialized: boolean = false;\n\n    /**\n     * Component element initialization\n     */\n    public initialize?: (callback: (success: boolean) => void) => void;\n\n    /**\n     * Component element creation handler\n     */\n    public create?: (props: ElementCreationProps) => ComponentElement;\n\n    /**\n     * Component element set canvas creation fill function\n     */\n    public setCreationFill?: (c: CanvasRenderingContext2D) => void;\n\n    /**\n     * Component element fill image provider function\n     */\n    public getFillImage?: (callback: (image: HTMLImageElement) => void) => void;\n\n    /**\n     * Component element selection event\n     */\n    public select: ComponentEvent<ComponentElement> = new ComponentEvent<ComponentElement>();\n\n    /**\n     * Component element deselection event\n     */\n    public deselect: ComponentEvent<ComponentElement> = new ComponentEvent<ComponentElement>();\n\n    /**\n     * Component element drag enter event\n     */\n    public dragEnter: ComponentEvent<ElementDragArgs> = new ComponentEvent<ElementDragArgs>();\n\n    /**\n     * Component element drag leave event\n     */\n    public dragLeave: ComponentEvent<ElementDragArgs> = new ComponentEvent<ElementDragArgs>();\n\n    /**\n     * Component element size event\n     */\n    public size: ComponentEvent<ElementSizeProps> = new ComponentEvent<ElementSizeProps>();\n\n    /**\n     * Component element upload start event\n     */\n    public uploadStart: ComponentEvent<ComponentElement> = new ComponentEvent<ComponentElement>();\n\n    /**\n     * Component element upload complete event\n     */\n    public uploadComplete: ComponentEvent<UploadCompletionProps> = new ComponentEvent<UploadCompletionProps>();\n\n    /**\n     * Component element upload progress event\n     */\n    public uploadProgress: ComponentEvent<UploadProgressProps> = new ComponentEvent<UploadProgressProps>();\n\n    constructor() {\n        this.defaultCreate = this.defaultCreate.bind(this);\n        this.defaultResize = this.defaultResize.bind(this);\n        this.defaultSelect = this.defaultSelect.bind(this);\n        this.defaultDeselect = this.defaultDeselect.bind(this);\n    }\n\n    /**\n     * Default element creation function for elements with simple properties\n     * @param props - Element creation props\n     * @returns New component element\n     */\n    public defaultCreate(props: ElementCreationProps) {\n        const m = Model.create(props.width, props.height);\n        if (this.stroke !== undefined) {\n            m.stroke = this.stroke;\n        }\n        else {\n            m.stroke = ComponentProps.standardStroke;\n        }\n        if (this.fill !== undefined) {\n            m.fill = this.fill;\n        }\n        else {\n            m.fill = ComponentProps.standardFill;\n        }\n        ModelResource.create(props.id, m).addTo(props.model);\n        const el = new ComponentElement(props.id, props.left, props.top, props.width, props.height);\n        props.model.add(el);\n        return el;\n    }\n\n    /**\n     * Default element resizing function for elements with simple properties\n     * @param component - Component\n     * @param props - Element resizing properties\n     */\n    public defaultResize(c: Component, props: ElementSizeProps) {\n        if (!props.element || !props.element.model || !props.element.id) {\n            return;\n        }\n        const res = props.element.model.resourceManager.get(props.element.id) as ModelResource;\n        if (res.model) {\n            res.model.setSize(props.size);\n        }\n    }\n\n    public defaultSelect(c: Component, el: ComponentElement) {\n        if (!el.model || !el.id) {\n            return;\n        }\n        const resource = el.model.resourceManager.get(el.id) as ModelResource;\n        const model = resource.model;\n        if (!model) {\n            return;\n        }\n        if (c.selectedFill) {\n            model.fill = c.selectedFill;\n        }\n        if (c.selectedStroke) {\n            model.stroke = c.selectedStroke;\n        }\n    }\n\n    public defaultDeselect(c: Component, el: ComponentElement) {\n        if (!el.model || !el.id) {\n            return;\n        }\n        const resource = el.model.resourceManager.get(el.id) as ModelResource;\n        const model = resource.model;\n        if (!model) {\n            return;\n        }\n        model.fill = c.fill;\n        model.stroke = c.stroke;\n    }\n}\n","import { ErrorMessages } from '../core/error-messages';\nimport { Model } from '../core/model';\nimport { Size } from '../core/size';\nimport { Utility } from '../core/utility';\nimport { Resource } from './resource';\nimport { ResourceFactory } from './resource-factory';\n\n/**\n * Embedded or externally referenced model resource\n */\nexport class ModelResource extends Resource {\n    /**\n     * Creates model resource from string model URI (referenced) or exising model object (embedded)\n     * @param key - Resource key\n     * @param uriOrModel - Model URI or existing model object\n     * @param locale - Optional resource locale ID (e.g. en-US)\n     * @returns New model resource\n     */\n    public static create(key: string, uriOrModel: string | Model, locale?: string): ModelResource {\n        const r = new ModelResource();\n        if (arguments.length >= 2) {\n            r.key = key;\n            if (typeof uriOrModel === 'string') {\n                r.uri = uriOrModel;\n            }\n            else {\n                r.model = uriOrModel.clone();\n            }\n        }\n        if (locale) {\n            r.locale = locale;\n        }\n        return r;\n    }\n\n    /**\n     * Model dimensions\n     */\n    public size?: Size;\n\n    /**\n     * Resource model\n     */\n    public model?: Model;\n\n    constructor() {\n        super('model');\n    }\n\n    /**\n     * Clones this resource to a new instance\n     * @returns Cloned model resource\n     */\n    public clone(): ModelResource {\n        let o: ModelResource | undefined;\n        if (!this.key) {\n            throw new Error(ErrorMessages.ResourceKeyIsUndefined);\n        }\n        if (this.model) {\n            o = ModelResource.create(this.key, this.model, this.locale);\n        }\n        else if (this.uri) {\n            o = ModelResource.create(this.key, this.uri, this.locale);\n        }\n        if (!o) {\n            throw new Error(ErrorMessages.ResourceIsInvalid);\n        }\n        super.cloneTo(o);\n        if (this.size) {\n            o.size = this.size;\n        }\n        return o;\n    }\n\n    /**\n     * Copies properties of another model resource\n     * @param o - Source model resource\n     */\n    public parse(o: any): void {\n        super.parse(o);\n        if (o.model) {\n            this.model = Model.parse(JSON.stringify(o.model));\n        }\n        if (o.size) {\n            this.size = Size.parse(o.size);\n        }\n    }\n\n    /**\n     * Serializes resource to a new instance\n     * @returns Serialized resource instance\n     */\n    public serialize(): any {\n        const o = super.serialize();\n        if (this.model && !this.uri) {\n            o.model = JSON.parse(JSON.stringify(this.model.serialize()));\n        }\n        if (this.size) {\n            o.size = this.size.toString();\n        }\n        return o;\n    }\n\n    /**\n     * Retrieves model resource from an http(s) source\n     * @param url - Model source URL\n     * @param callback - Retrieval callback (result: boolean)\n     */\n    public load(url: string, callback: (result: boolean) => void): void {\n        const res = this;\n        if (!res.resourceManager) {\n            throw new Error(ErrorMessages.ResourceManagerIsUndefined);\n        }\n        if (!res.resourceManager.model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        if (!res.resourceManager.model.basePath) {\n            throw new Error(ErrorMessages.ModelBasePathUndefined);\n        }\n        const basePath = res.resourceManager.model.basePath;\n        const relUrl = url.substring(basePath.length, url.length);\n        Model.load(basePath, relUrl, model => {\n            if (model && res.resourceManager) {\n                res.model = model;\n                res.model.prepareResources(res.resourceManager.currentLocaleId, () => {\n                    callback(true);\n                });\n            }\n            else {\n                callback(false);\n            }\n        });\n    }\n\n    public initialize() {\n        const self = this;\n\n        if (!self.resourceManager) {\n            throw new Error(ErrorMessages.ResourceManagerIsUndefined);\n        }\n\n        // If embedded model, no need to retrieve, but init resources\n        if (this.model && self.resourceManager.model) {\n            this.model.basePath = self.resourceManager.model.basePath;\n            this.model.prepareResources(self.resourceManager.currentLocaleId, success => {\n                if (self.resourceManager) {\n                    self.resourceManager.unregister(self, success);\n                }\n            });\n        }\n        else {\n            // Get model source URI\n            const modelPath = this.uri;\n\n            if (!modelPath) {\n                throw new Error(ErrorMessages.ModelPathUndefined);\n            }\n\n            // Local (Server) Model\n            if (modelPath.charAt(0) === ':') {\n                const url = modelPath.substring(1, modelPath.length);\n                this.load(url, success => {\n                    if (self.resourceManager) {\n                        self.resourceManager.unregister(self, success);\n                    }\n                });\n            }\n            else if (modelPath.charAt(0) === '/') {\n                // Shared model resource relative to model base path\n                if (self.resourceManager && self.resourceManager.model && self.resourceManager.model.basePath) {\n                    this.load(Utility.joinPaths(self.resourceManager.model.basePath, modelPath), success => {\n                        if (self.resourceManager) {\n                            self.resourceManager.unregister(self, success);\n                        }\n                    });\n                }\n            }\n            else {\n                // Embedded model resource\n                if (self.resourceManager && self.resourceManager.localResourcePath) {\n                    self.load(Utility.joinPaths(self.resourceManager.localResourcePath, modelPath), success => {\n                        if (self.resourceManager) {\n                            self.resourceManager.unregister(self, success);\n                        }\n                    });\n                }\n            }\n        }\n    }\n}\n\n/* Register type creator */\nResourceFactory.registerCreator('model', ModelResource);\n","import { ErrorMessages } from '../core/error-messages';\nimport { Model } from '../core/model';\nimport { ResourceFactory } from './resource-factory';\nimport { ResourceManager } from './resource-manager';\n\n/**\n * Base class for model resources\n */\nexport abstract class Resource {\n    /**\n     * Resource type tag\n     */\n    public type: string;\n\n    /**\n     * Resource key\n     */\n    public key?: string;\n\n    /**\n     * Optional resource locale\n     */\n    public locale?: string;\n\n    /**\n     * Resource URI\n     */\n    public uri?: string;\n\n    /**\n     * Resource manager\n     */\n    public resourceManager?: ResourceManager;\n\n    /**\n     * True if registered for retrieval\n     */\n    public registered: boolean = false;\n\n    /**\n     * True if downloaded and available\n     */\n    public available: boolean = false;\n\n    /**\n     * True if error during retrieval\n     */\n    public error: boolean = false;\n\n    /**\n     * Resource base class\n     */\n    constructor(type: string) {\n        this.type = type;\n        this.clone = this.clone.bind(this);\n        this.cloneTo = this.cloneTo.bind(this);\n        this.parse = this.parse.bind(this);\n        this.serialize = this.serialize.bind(this);\n        this.load = this.load.bind(this);\n        this.matchesFull = this.matchesFull.bind(this);\n        this.matchesGeneric = this.matchesGeneric.bind(this);\n        this.matchesKey = this.matchesKey.bind(this);\n        this.matchesLanguage = this.matchesLanguage.bind(this);\n    }\n\n    /**\n     * Clones this resource to a new instance\n     * @returns Cloned resource instance\n     */\n    public clone(): Resource {\n        const o = ResourceFactory.create(this.type);\n        if (!o) {\n            throw new Error(ErrorMessages.InvalidResourceType + ': ' + this.type);\n        }\n        this.cloneTo(o);\n        return o;\n    }\n\n    /**\n     * Clones properties of this resource to another resource\n     * @param o - Target resource for property copy\n     */\n    public cloneTo(o: any): void {\n        if (this.type) {\n            o.type = this.type;\n        }\n        if (this.key) {\n            o.key = this.key;\n        }\n        if (this.locale) {\n            o.locale = this.locale;\n        }\n        if (this.uri) {\n            o.uri = this.uri;\n        }\n    }\n\n    /**\n     * Clones properties from another resource to this resource\n     * @param o - Source resource for property copy\n     */\n    public parse(o: any): void {\n        if (o.key) {\n            this.key = o.key;\n        }\n        if (o.locale) {\n            this.locale = o.locale;\n        }\n        if (o.uri) {\n            this.uri = o.uri;\n        }\n    }\n\n    /**\n     * Clones serializable properties from this resource to a new resource\n     * @returns Serialized resource instance\n     */\n    public serialize(): any {\n        const o: any = {};\n        o.type = this.type;\n        if (this.key) {\n            o.key = this.key;\n        }\n        if (this.locale) {\n            o.locale = this.locale;\n        }\n        if (this.uri) {\n            o.uri = this.uri;\n        }\n        return o;\n    }\n\n    /**\n     * Retrieves a resource from an http(s) source\n     * @param url - Resource source URL\n     * @param callback - Retrieval callback (result: boolean)\n     */\n    public load(url: string, callback?: (result: boolean) => void): void {\n        if (callback) {\n            callback(true);\n        }\n    }\n\n    /**\n     * Determines if this resource fully matches a request for a desired localized\n     * resource including key and locale (e.g. en-US)\n     * @param key - Resource key\n     * @param locale - Desired resource locale identifier\n     * @returns True if both key and locale id match\n     */\n    public matchesFull(key: string, locale: string): boolean {\n        if (!this.key) {\n            return false;\n        }\n        if (this.key.toLowerCase() !== key.toLowerCase()) {\n            return false;\n        }\n        if (this.locale && locale) {\n            return this.locale.toLowerCase() === locale.toLowerCase();\n        }\n        return false;\n    }\n\n    /**\n     * Determines if this resource matches a request for a desired localized\n     * resource including key and language part of locale ID (e.g. en part of en-US)\n     * @param key - Resource key\n     * @param language - Desired resource locale identifier\n     * @returns True if both key and language of requested locale match\n     */\n    public matchesLanguage(key: string, language: string): boolean {\n        if (!this.key) {\n            return false;\n        }\n        if (this.key.toLowerCase() !== key.toLowerCase()) {\n            return false;\n        }\n        if (this.locale && language) {\n            return this.locale.toLowerCase().slice(0, language.length + 1) === language.toLowerCase() + '-';\n        }\n        return false;\n    }\n\n    /**\n     * Determines if this resource matches a request for a desired\n     * resource key and is a generic resource without a locale designation\n     * @param key - Resource key\n     * @returns True if key matches resource request and resource is generic\n     */\n    public matchesGeneric(key: string): boolean {\n        if (!this.key) {\n            return false;\n        }\n        if (this.key.toLowerCase() !== key.toLowerCase()) {\n            return false;\n        }\n        if (!this.locale || this.locale === null) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Determines if this resource matches a request for a desired\n     * resource key regardless of requested locale or resource locale\n     * @param key - Resource key\n     * @returns True if key matches resource request\n     */\n    public matchesKey(key: string): boolean {\n        if (!this.key) {\n            return false;\n        }\n        return this.key.toLowerCase() === key.toLowerCase();\n    }\n\n    public abstract initialize(): void;\n\n    public addTo(model: Model) {\n        model.resourceManager.merge(this);\n        return this;\n    }\n}\n","import { Model } from '../core/model';\nimport { Utility } from '../core/utility';\nimport { ElementBase } from '../elements/element-base';\nimport { Surface } from './surface';\n\n/**\n * Base class for surface elements\n */\nexport class SurfaceElement {\n    /**\n     * Element id\n     */\n    public id: string;\n\n    /**\n     * Element X coordinate\n     */\n    public left: number;\n\n    /**\n     * Element Y coordinate\n     */\n    public top: number;\n\n    /**\n     * Element width\n     */\n    public width: number;\n\n    /**\n     * Element height\n     */\n    public height: number;\n\n    /**\n     * Parent surface\n     */\n    public surface?: Surface;\n\n    /**\n     * @param id - Item id\n     * @param left - Layout area x coordinate\n     * @param top - Layout area y coordinate\n     * @param width - Layout area width\n     * @param height - Layout area height\n     */\n    constructor(id: string, left: number, top: number, width: number, height: number) {\n        if (id) {\n            this.id = id;\n        }\n        else {\n            this.id = Utility.guid();\n        }\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n    }\n\n    /**\n     * Adds item to surface model\n     * @param model - Surface model\n     */\n    public addToModel(model: Model): ElementBase | undefined {\n        return undefined;\n    }\n}\n","/**\n * Describes current state of surface element\n */\nexport class SurfaceElementStates {\n    public static NORMAL = 'normal';\n    public static SELECTED = 'selected';\n    public static HIGHLIGHTED = 'highlighted';\n    public static DISABLED = 'disabled';\n}\n","export class ElementCommand {\n    /**\n     * Parses string into element command\n     * @param commandString - Command string\n     * @returns Parsed element command\n     */\n    public static parse(commandString: string): ElementCommand {\n        if (commandString.indexOf('(') !== -1) {\n            const commandName = commandString.substring(0, commandString.indexOf('('));\n            const commandParameter = commandString.substring(commandString.indexOf('(') + 1, commandString.length - 1);\n            return new ElementCommand(commandName, commandParameter);\n        }\n        return new ElementCommand(commandString, '');\n    }\n\n    /**\n     * Command name\n     */\n    public name: string;\n\n    /**\n     * Command parameter\n     */\n    public parameter: string;\n\n    /**\n     * Describes an element command and optional parameter\n     * @param name - Command name\n     * @param parameter - Command parameter\n     */\n    constructor(name: string, parameter: string) {\n        this.name = name;\n        this.parameter = parameter;\n    }\n}\n","import { IController } from './controller';\n\nexport interface IControllerEvent<T> {\n    add(handler: (c: IController, data: T) => void): void;\n    remove(handler: any): void;\n    clear(): void;\n    trigger(c: IController, data: T): void;\n    hasListeners(): boolean;\n}\n\nexport class ControllerEvent<T> {\n    private handlers: Array<(c: IController, data: T) => void> = [];\n\n    public add(handler: (c: IController, data: T) => void) {\n        this.handlers.push(handler);\n    }\n\n    public remove(handler: any): void {\n        const index = this.handlers.indexOf(handler);\n        if (index > -1) {\n            this.handlers.splice(index, 1);\n        }\n    }\n\n    public hasListeners(): boolean {\n        return this.handlers.length > 0;\n    }\n\n    public clear(): void {\n        this.handlers.splice(0, this.handlers.length);\n    }\n\n    public trigger(c: IController, data: T) {\n        this.handlers.slice(0).forEach(h => h(c, data));\n    }\n}\n","import { Point } from './point';\n\n/**\n * Encapsulates a location in event parameters\n */\nexport class LocationArgs {\n    public location?: Point;\n\n    /**\n     * @param location - Location\n     */\n    constructor(location?: Point) {\n        this.location = location;\n    }\n}\n","/**\n * Centralized logging support\n */\nexport class Logging {\n    public static enabled = false;\n\n    public static add(handler: (message: string) => void) {\n        Logging.handlers.push(handler);\n    }\n\n    public static remove(handler: (handler: string) => void): void {\n        const index = Logging.handlers.indexOf(handler);\n        if (index > -1) {\n            Logging.handlers.splice(index, 1);\n        }\n    }\n\n    public static hasListeners(): boolean {\n        return Logging.handlers.length > 0;\n    }\n\n    public static clear(): void {\n        Logging.handlers.splice(0, Logging.handlers.length);\n    }\n\n    public static log(message: string) {\n        if (Logging.enabled && Logging.hasListeners) {\n            for (const handler of Logging.handlers) {\n                handler(message);\n            }\n            console.log(message);\n        }\n    }\n\n    private static handlers: Array<(message: string) => void> = [];\n}\n","/**\n * Represents a radial or linear gradient color fill stop\n */\nexport class GradientFillStop {\n    /**\n     * Clones gradient stop collection\n     * @param stops Stops to clone\n     */\n    public static cloneStops(stops: GradientFillStop[]): GradientFillStop[] {\n        const cloned = [];\n        for (const stop of stops) {\n            cloned.push(stop.clone());\n        }\n        return cloned;\n    }\n\n    /**\n     * Fill stop factory function\n     * @param color - Stop color represented as a string\n     * @param offset - Stop offset in the range of 0 to 1\n     * @returns New fill stop\n     */\n    public static create(color: string, offset: number) {\n        return new GradientFillStop(color, offset);\n    }\n\n    /**\n     * Stop color as string\n     */\n    public color: string;\n\n    /**\n     * Stop offset (0-1)\n     */\n    public offset: number;\n\n    /**\n     * @param color - Stop color represented as a string\n     * @param offset - Stop offset in the range of 0 to 1\n     */\n    constructor(color: string, offset: number) {\n        this.color = color;\n        this.offset = offset;\n    }\n\n    public clone(): GradientFillStop {\n        const stop = new GradientFillStop(this.color, this.offset);\n        return stop;\n    }\n}\n","import { ErrorMessages } from '../core/error-messages';\nimport { Point } from '../core/point';\nimport { Region } from '../core/region';\nimport { Size } from '../core/size';\nimport { FillFactory } from '../fill/fill-factory';\nimport { ElementBase } from './element-base';\n\n/**\n * Renders stroked and/or filled ellipse element\n */\nexport class EllipseElement extends ElementBase {\n    /**\n     * Ellipse element factory function\n     * @param x - Center point x coordinate\n     * @param y - Center point y coordinate\n     * @param rx - Horizontal radius\n     * @param ry - Vertical radius\n     * @returns New ellipse element\n     */\n    public static create(x?: number, y?: number, rx?: number, ry?: number) {\n        const e = new EllipseElement();\n        if (x !== undefined && y !== undefined && rx !== undefined && ry !== undefined) {\n            e._center = new Point(x, y);\n            e.radiusX = rx;\n            e.radiusY = ry;\n        }\n        else if (x !== undefined && y !== undefined && rx !== undefined) {\n            e._center = new Point(x, y);\n            e.radiusX = rx;\n            e.radiusY = rx;\n        }\n        return e;\n    }\n\n    /**\n     * Horizontal radius\n     */\n    public radiusX?: number;\n\n    /**\n     * Vertical radius\n     */\n    public radiusY?: number;\n\n    /**\n     * Center point\n     */\n    private _center?: Point;\n\n    constructor() {\n        super('ellipse');\n        this.getCenter = this.getCenter.bind(this);\n        this.setCenter = this.setCenter.bind(this);\n    }\n\n    /**\n     * Center point get accessor as string\n     */\n    get center(): string | undefined {\n        if (!this._center) {\n            return undefined;\n        }\n        else {\n            return this._center.toString();\n        }\n    }\n\n    /**\n     * Center point set accessor as string\n     * @param newValue - New center point as string\n     */\n    set center(newValue: string | undefined) {\n        if (!newValue) {\n            this._center = undefined;\n        }\n        else {\n            this._center = Point.parse(newValue);\n        }\n    }\n\n    /**\n     * Center point get accessor as Point\n     * @returns Center point\n     */\n    public getCenter(): Point | undefined {\n        return this._center;\n    }\n\n    /**\n     * Center point set accessor as string or Point\n     * @param pointSource - Center point as string or Point\n     */\n    public setCenter(pointSource: string | Point | undefined) {\n        if (pointSource) {\n            this._center = Point.parse(pointSource);\n        }\n        else {\n            this._center = undefined;\n        }\n    }\n\n    /**\n     * Copies properties of another object to this instance\n     * @param o - Source object\n     */\n    public parse(o: any): void {\n        super.parse(o);\n        if (o.center) {\n            this._center = Point.parse(o.center);\n        }\n        if (o.radiusX !== undefined) {\n            this.radiusX = o.radiusX;\n        }\n        if (o.radiusY !== undefined) {\n            this.radiusY = o.radiusY;\n        }\n    }\n\n    /**\n     * Serializes persistent properties to new object instance\n     * @returns Serialized element\n     */\n    public serialize(): any {\n        const o = super.serialize();\n        if (this._center) {\n            o.center = this._center.toString();\n        }\n        if (this.radiusX !== undefined) {\n            o.radiusX = this.radiusX;\n        }\n        if (this.radiusY !== undefined) {\n            o.radiusY = this.radiusY;\n        }\n        return o;\n    }\n\n    /**\n     * Clones this ellipse element to a new instance\n     * @returns Cloned ellipse element\n     */\n    public clone() {\n        const e = EllipseElement.create();\n        super.cloneTo(e);\n        if (this._center) {\n            e.center = this._center.toString();\n        }\n        if (this.radiusX !== undefined) {\n            e.radiusX = this.radiusX;\n        }\n        if (this.radiusY !== undefined) {\n            e.radiusY = this.radiusY;\n        }\n        return e;\n    }\n\n    /**\n     * Render ellipse element to canvas context\n     * @param c - Rendering context\n     */\n    public draw(c: CanvasRenderingContext2D): void {\n        const model = this.model;\n        if (!model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        if (this._center === undefined || this.radiusX === undefined || this.radiusY === undefined) {\n            throw new Error(ErrorMessages.PointsAreInvalid);\n        }\n        c.save();\n        if (this.transform) {\n            model.setRenderTransform(\n                c,\n                this.transform,\n                new Point(this._center.x - this.radiusX, this._center.y - this.radiusY)\n            );\n        }\n        const scaleY = this.radiusY / this.radiusX;\n        c.save();\n        c.beginPath();\n        c.translate(this._center.x, this._center.y);\n        c.scale(1.0, scaleY);\n        c.arc(0, 0, this.radiusX, 0, Math.PI * 2, false);\n        c.closePath();\n        c.restore();\n        if (FillFactory.setElementFill(c, this)) {\n            const loc = this.getLocation();\n            if (loc) {\n                if (this.fillOffsetX || this.fillOffsetY) {\n                    const fillOffsetX = this.fillOffsetX || 0;\n                    const fillOffsetY = this.fillOffsetY || 0;\n                    c.translate(loc.x + fillOffsetX, loc.y + fillOffsetY);\n                    c.fill();\n                    c.translate(-(loc.x + fillOffsetX), -(loc.y + fillOffsetY));\n                }\n                else {\n                    c.translate(loc.x, loc.y);\n                    c.fill();\n                    c.translate(-loc.x, -loc.y);\n                }\n            }\n        }\n        if (model.setElementStroke(c, this)) {\n            c.stroke();\n        }\n        c.restore();\n    }\n\n    /**\n     * Hit test ellipse element.  Return true if point is within ellipse interior\n     * @param c - Rendering context\n     * @param tx - X coordinate of point\n     * @param ty - Y coordinate of point\n     * @returns True if point is within ellipse\n     */\n    public hitTest(c: CanvasRenderingContext2D, tx: number, ty: number): boolean {\n        const model = this.model;\n        if (!model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        if (this._center === undefined || this.radiusX === undefined || this.radiusY === undefined) {\n            throw new Error(ErrorMessages.PointsAreInvalid);\n        }\n        c.save();\n        if (this.transform) {\n            model.setRenderTransform(\n                c,\n                this.transform,\n                new Point(this._center.x - this.radiusX, this._center.y - this.radiusY)\n            );\n        }\n        const scaleY = this.radiusY / this.radiusX;\n        c.save();\n        c.beginPath();\n        c.translate(this._center.x, this._center.y);\n        c.scale(1.0, scaleY);\n        c.arc(0, 0, this.radiusX, 0, Math.PI * 2, false);\n        c.closePath();\n        const hit = c.isPointInPath(tx, ty);\n        c.restore();\n        c.restore();\n        return hit;\n    }\n\n    /**\n     * Returns string description of ellipse element\n     * @returns Description\n     */\n    public toString(): string {\n        if (this._center === undefined || this.radiusX === undefined || this.radiusX === undefined) {\n            throw new Error(ErrorMessages.PointsAreInvalid);\n        }\n        return (\n            this.type +\n            ' - c(' +\n            this._center.x +\n            ',' +\n            this._center.y +\n            '), rx:' +\n            this.radiusX +\n            ', ry:' +\n            this.radiusY\n        );\n    }\n\n    /**\n     * Nudges size of ellipse element by a given width and height offset\n     * @param offsetX - Width adjustment\n     * @param offsetY - Height adjustment\n     * @returns This ellipse element\n     */\n    public nudgeSize(offsetX: number, offsetY: number) {\n        if (!this.radiusX || !this.radiusY) {\n            return this;\n        }\n        let newRadiusX = this.radiusX + offsetX / 2;\n        if (newRadiusX < 0) {\n            newRadiusX = 0;\n        }\n        let newRadiusY = this.radiusY + offsetY / 2;\n        if (newRadiusY < 0) {\n            newRadiusY = 0;\n        }\n        this.radiusX = newRadiusX;\n        this.radiusY = newRadiusY;\n        return this;\n    }\n\n    /**\n     * Scales ellipse element by given horizontal and vertical scaling factors\n     * @param scaleX - Horizontal scaling factor\n     * @param scaleY - Vertical scaling factor\n     * @returns This ellipse element\n     */\n    public scale(scaleX: number, scaleY: number) {\n        if (this.radiusX === undefined || this.radiusY === undefined || this._center === undefined) {\n            throw new Error(ErrorMessages.PointsAreInvalid);\n        }\n        this.radiusX *= scaleX;\n        this.radiusY *= scaleY;\n        this._center = Point.scale(this._center, scaleX, scaleY);\n        return this;\n    }\n\n    /**\n     * Moves this ellipse element by the given X and Y offsets\n     * @param offsetX - X size offset\n     * @param offsetY - Y size offset\n     * @returns This ellipse element\n     */\n    public translate(offsetX: number, offsetY: number) {\n        if (!this._center) {\n            return this;\n        }\n        this._center = Point.translate(this._center, offsetX, offsetY);\n        return this;\n    }\n\n    /**\n     * Return rectangular bounding region\n     * @returns Ellipse element bounding region\n     */\n    public getBounds(): Region | undefined {\n        if (!this.radiusX || !this.radiusY || !this._center) {\n            return undefined;\n        }\n        const x = this._center.x - this.radiusX;\n        const y = this._center.y - this.radiusY;\n        return new Region(x, y, this.radiusX * 2, this.radiusY * 2);\n    }\n\n    /**\n     * Moves ellipse element\n     * @param point - New location\n     * @returns This ellipse element\n     */\n    public setLocation(point: Point) {\n        if (this.radiusX !== undefined && this.radiusY !== undefined) {\n            this._center = new Point(point.x + this.radiusX, point.y + this.radiusY);\n        }\n        return this;\n    }\n\n    /**\n     * Resizes ellipse element\n     * @param size - New size\n     * @returns This ellipse element\n     */\n    public setSize(size: Size) {\n        if (this.radiusX === undefined || this.radiusY === undefined || this._center === undefined) {\n            throw new Error(ErrorMessages.PointsAreInvalid);\n        }\n        const x = this._center.x - this.radiusX;\n        const y = this._center.y - this.radiusY;\n        this.radiusX = size.width / 2;\n        this.radiusY = size.height / 2;\n        this._center = new Point(x + this.radiusX, y + this.radiusY);\n        return this;\n    }\n\n    /**\n     * Can element be stroked\n     * @returns Can stroke\n     */\n    public canStroke(): boolean {\n        return true;\n    }\n\n    /**\n     * Can element be filled\n     * @returns Can fill\n     */\n    public canFill(): boolean {\n        return true;\n    }\n}\n","import { ErrorMessages } from '../core/error-messages';\nimport { Point } from '../core/point';\nimport { IPointContainer } from '../core/point-container';\nimport { PointDepth } from '../core/point-depth';\nimport { Region } from '../core/region';\nimport { Size } from '../core/size';\nimport { WindingMode } from '../core/winding-mode';\nimport { FillFactory } from '../fill/fill-factory';\nimport { ElementBase } from './element-base';\nimport { InvalidIndexException } from './invalid-index-exception';\n\n/**\n * Renders connected, stroked and/or filled line segments between three or more points\n */\nexport class PolygonElement extends ElementBase implements IPointContainer {\n    /**\n     * Polygon element factory function\n     * @returns New polygon\n     */\n    public static create(): PolygonElement {\n        const e = new PolygonElement();\n        return e;\n    }\n\n    /**\n     * Computed bounding region\n     */\n    public bounds?: Region;\n\n    /**\n     * True when in point editing mode\n     */\n    public editPoints: boolean = false;\n\n    /**\n     * Point array\n     */\n    private _points?: Point[];\n\n    /**\n     * Fill winding mode\n     */\n    private _winding?: WindingMode;\n\n    constructor() {\n        super('polygon');\n        this.addPoint = this.addPoint.bind(this);\n        this.getPoints = this.getPoints.bind(this);\n        this.setPoints = this.setPoints.bind(this);\n        this.setWinding = this.setWinding.bind(this);\n    }\n\n    /**\n     * Points get accessor as string. Serializes point array into string.\n     * @returns Serialized point array\n     */\n    get points(): string | undefined {\n        if (!this._points) {\n            return undefined;\n        }\n        else {\n            let result = '';\n            let isFirst = true;\n            for (const p of this._points) {\n                if (isFirst) {\n                    isFirst = false;\n                }\n                else {\n                    result += ' ';\n                }\n                result += p.toString();\n            }\n            return result;\n        }\n    }\n\n    /**\n     * Points set accessor as string.  Parses serialized string of points.\n     * @param pointString - Serialized point array\n     */\n    set points(pointString: string | undefined) {\n        if (!pointString) {\n            this._points = undefined;\n        }\n        else {\n            this._points = [];\n            const parts = pointString.split(' ');\n            for (const part of parts) {\n                this._points.push(Point.parse(part));\n            }\n        }\n        this.bounds = undefined;\n    }\n\n    /**\n     * Sets point array as either serialized points string or Point array.\n     * @param pointsSource - Point source as either string of Point array\n     * @return This polygon element\n     */\n    public setPoints(pointsSource: string | Point[]) {\n        if (typeof pointsSource === 'string') {\n            this.points = pointsSource;\n        }\n        else {\n            this._points = pointsSource.slice(0);\n        }\n        this.bounds = undefined;\n        return this;\n    }\n\n    /**\n     * Gets point array\n     * @return Copy of internal points array\n     */\n    public getPoints(): Point[] | undefined {\n        if (this._points) {\n            return this._points.slice(0);\n        }\n        else {\n            return undefined;\n        }\n    }\n\n    /**\n     * Copies properties of another object to this instance\n     * @param o - Source object\n     */\n    public parse(o: any): void {\n        super.parse(o);\n        if (o.points) {\n            this.points = o.points;\n        }\n        if (o.winding) {\n            this.winding = o.winding;\n        }\n        this.bounds = undefined;\n    }\n\n    /**\n     * Serializes persistent properties to new object instance\n     * @returns Serialized element\n     */\n    public serialize(): any {\n        const o = super.serialize();\n        o.size = undefined;\n        o.location = undefined;\n        if (this.points) {\n            o.points = this.points;\n        }\n        if (this.winding && this.winding === WindingMode.EvenOdd) {\n            o.winding = this.winding;\n        }\n        return o;\n    }\n\n    /**\n     * Clones this polygon element to a new instance\n     * @returns Cloned polygon instance\n     */\n    public clone() {\n        const e: PolygonElement = PolygonElement.create();\n        super.cloneTo(e);\n        if (this.points) {\n            e.points = this.points;\n        }\n        if (this.winding) {\n            e.winding = this.winding;\n        }\n        return e;\n    }\n\n    /**\n     * Render polygon to canvas context\n     * @param c - Rendering context\n     */\n    public draw(c: CanvasRenderingContext2D): void {\n        const model = this.model;\n        if (!model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        if (!this._points) {\n            throw new Error(ErrorMessages.NoPointsAreDefined);\n        }\n        const bounds = this.getBounds();\n        if (!bounds) {\n            throw new Error(ErrorMessages.BoundsAreUndefined);\n        }\n        c.save();\n        if (this.transform) {\n            model.setRenderTransform(c, this.transform, bounds.location);\n        }\n        c.beginPath();\n        c.moveTo(this._points[0].x, this._points[0].y);\n        const pl = this._points.length;\n        for (let i = 1; i < pl; i++) {\n            const p: Point = this._points[i];\n            c.lineTo(p.x, p.y);\n        }\n        c.closePath();\n        if (FillFactory.setElementFill(c, this)) {\n            const loc = bounds.location;\n            if (this.fillOffsetX || this.fillOffsetY) {\n                const fillOffsetX = this.fillOffsetX || 0;\n                const fillOffsetY = this.fillOffsetY || 0;\n                c.translate(loc.x + fillOffsetX, loc.y + fillOffsetY);\n                if (this._winding && this._winding === WindingMode.EvenOdd) {\n                    c.fill('evenodd');\n                }\n                else {\n                    c.fill('nonzero');\n                }\n                c.translate(-(loc.x + fillOffsetX), -(loc.y + fillOffsetY));\n            }\n            else {\n                c.translate(loc.x, loc.y);\n                if (this._winding && this._winding === WindingMode.EvenOdd) {\n                    c.fill('evenodd');\n                }\n                else {\n                    c.fill('nonzero');\n                }\n                c.translate(-loc.x, -loc.y);\n            }\n        }\n        if (model.setElementStroke(c, this)) {\n            c.stroke();\n        }\n        c.restore();\n    }\n\n    /**\n     * Hit test polygon.  Return true if point is within polygon interior\n     * @param c - Rendering context\n     * @param tx - X coordinate of point\n     * @param ty - Y coordinate of point\n     * @returns True if point is within polygon\n     */\n    public hitTest(c: CanvasRenderingContext2D, tx: number, ty: number): boolean {\n        const model = this.model;\n        if (!model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        if (!this._points) {\n            throw new Error(ErrorMessages.NoPointsAreDefined);\n        }\n        const bounds = this.getBounds();\n        if (!bounds) {\n            throw new Error(ErrorMessages.BoundsAreUndefined);\n        }\n        c.save();\n        if (this.transform) {\n            model.setRenderTransform(c, this.transform, bounds.location);\n        }\n        c.beginPath();\n        c.moveTo(this._points[0].x, this._points[0].y);\n        const pl = this._points.length;\n        for (let i = 1; i < pl; i++) {\n            c.lineTo(this._points[i].x, this._points[i].y);\n        }\n        c.closePath();\n        let hit: boolean;\n        if (this._winding && this._winding === WindingMode.EvenOdd) {\n            hit = c.isPointInPath(tx, ty, 'evenodd');\n        }\n        else {\n            hit = c.isPointInPath(tx, ty, 'nonzero');\n        }\n        c.restore();\n        return hit;\n    }\n\n    /**\n     * Returns string description of polygon\n     * @returns Description\n     */\n    public toString(): string {\n        if (this._points) {\n            return this.type + ' -  ' + this._points.length + ' Points';\n        }\n        else {\n            return this.type + ' -  0 Points';\n        }\n    }\n\n    /**\n     * Can element be stroked\n     * @returns Can stroke\n     */\n    public canStroke(): boolean {\n        return true;\n    }\n\n    /**\n     * Can element be filled\n     * @returns Can fill\n     */\n    public canFill(): boolean {\n        return true;\n    }\n\n    /**\n     * Polygons can be moved using mouse\n     * @returns True\n     */\n    public canMove(): boolean {\n        return true;\n    }\n\n    /**\n     * Polygons can be sized unless in point editing mode\n     * @returns True unless in point editing mode\n     */\n    public canResize(): boolean {\n        if (this.editPoints) {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * Polygons can be nudged with the keyboard\n     * @returns True\n     */\n    public canNudge(): boolean {\n        return true;\n    }\n\n    /**\n     * Polygons support individual point movement when in point editing mode\n     * @returns True if in point editing mode\n     */\n    public canMovePoint(): boolean {\n        if (this.editPoints) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Polygons support point editing mode\n     * @returns True\n     */\n    public canEditPoints(): boolean {\n        return true;\n    }\n\n    /**\n     * Nudges size of polygon by a given width and height offset\n     * @param offsetX - X offset\n     * @param offsetY - Y offset\n     * @returns This polygon\n     */\n    public nudgeSize(offsetX: number, offsetY: number) {\n        if (!this._points) {\n            return this;\n        }\n        const bounds = this.getBounds();\n        if (!bounds) {\n            throw new Error(ErrorMessages.BoundsAreUndefined);\n        }\n        let newWidth = bounds.width + offsetX;\n        if (newWidth < 1) {\n            newWidth = 1;\n        }\n        let newHeight = bounds.height + offsetY;\n        if (newHeight < 1) {\n            newHeight = 1;\n        }\n\n        if (this.aspectLocked) {\n            if (offsetX === 0) {\n                this.scale(newHeight / bounds.height, newHeight / bounds.height);\n            }\n            else {\n                this.scale(newWidth / bounds.width, newWidth / bounds.width);\n            }\n        }\n        else {\n            this.scale(newWidth / bounds.width, newHeight / bounds.height);\n        }\n        this.bounds = undefined;\n        return this;\n    }\n\n    /**\n     * Scales polygon points by given horizontal and vertical scaling factors\n     * @param scaleX - Horizontal scaling factor\n     * @param scaleY - Vertical scaling factor\n     * @returns This polygon element\n     */\n    public scale(scaleX: number, scaleY: number) {\n        if (!this._points) {\n            return this;\n        }\n        const newPoints: Point[] = [];\n        const location = this.getLocation();\n        if (!location) {\n            throw new Error(ErrorMessages.LocationUndefined);\n        }\n        for (const point of this._points) {\n            newPoints.push(Point.scale(point, scaleX, scaleY, location.x, location.y));\n        }\n        this._points = newPoints;\n        this.bounds = undefined;\n        return this;\n    }\n\n    /**\n     * Moves this polygon element by the given X and Y offsets\n     * @param offsetX - X size offset\n     * @param offsetY - Y size offset\n     * @returns This polygon\n     */\n    public translate(offsetX: number, offsetY: number) {\n        if (!this._points) {\n            return this;\n        }\n        const newPoints: Point[] = [];\n        for (const point of this._points) {\n            newPoints.push(Point.translate(point, offsetX, offsetY));\n        }\n        this._points = newPoints;\n        this.bounds = undefined;\n        return this;\n    }\n\n    /**\n     * Computes (if undefined) and returns rectangular bounding region\n     * @returns Polygon bounding region\n     */\n    public getBounds(): Region | undefined {\n        if (this.bounds) {\n            return this.bounds;\n        }\n        if (!this._points) {\n            return undefined;\n        }\n        let minX: number | undefined;\n        let minY: number | undefined;\n        let maxX: number | undefined;\n        let maxY: number | undefined;\n        for (const p of this._points) {\n            if (!minX) {\n                minX = p.x;\n            }\n            else if (p.x < minX) {\n                minX = p.x;\n            }\n            if (!minY) {\n                minY = p.y;\n            }\n            else if (p.y < minY) {\n                minY = p.y;\n            }\n            if (!maxX) {\n                maxX = p.x;\n            }\n            else if (p.x > maxX) {\n                maxX = p.x;\n            }\n            if (!maxY) {\n                maxY = p.y;\n            }\n            else if (p.y > maxY) {\n                maxY = p.y;\n            }\n        }\n        if (minX !== undefined && minY !== undefined && maxX !== undefined && maxY !== undefined) {\n            this.bounds = new Region(minX, minY, maxX - minX, maxY - minY);\n            this._location = new Point(minX, minY);\n            this._size = new Size(this.bounds.width, this.bounds.height);\n            return this.bounds;\n        }\n        return undefined;\n    }\n\n    /**\n     * Moves polygon\n     * @param pointSource - New location\n     * @returns This polygon\n     */\n    public setLocation(pointSource: string | Point) {\n        if (!this._points) {\n            return this;\n        }\n        const bounds = this.getBounds();\n        if (!bounds) {\n            throw new Error(ErrorMessages.BoundsAreUndefined);\n        }\n        let pt: Point;\n        if (typeof pointSource === 'string') {\n            pt = Point.parse(pointSource);\n        }\n        else {\n            pt = new Point(pointSource.x, pointSource.y);\n        }\n        const deltaX = pt.x - bounds.x;\n        const deltaY = pt.y - bounds.y;\n        this.translate(deltaX, deltaY);\n        return this;\n    }\n\n    /**\n     * Resizes polygon\n     * @param size - New size\n     * @returns This polygon\n     */\n    public setSize(sizeSource: string | Size) {\n        const size = Size.parse(sizeSource);\n        const bounds = this.getBounds();\n        if (!bounds) {\n            throw new Error(ErrorMessages.BoundsAreUndefined);\n        }\n        const scaleX = size.width / bounds.width;\n        const scaleY = size.height / bounds.height;\n        this.scale(scaleX, scaleY);\n        return this;\n    }\n\n    /**\n     * Returns number of points in polygon\n     * @returns Number of points\n     */\n    public pointCount(): number {\n        if (this._points) {\n            return this._points.length;\n        }\n        return 0;\n    }\n\n    /**\n     * Returns point at a given index (0 to # points - 1)\n     * @param index - Point index (0 to # points - 1)\n     * @param depth - Not applicable\n     * @returns Requested point\n     */\n    public getPointAt(index: number, depth?: PointDepth): Point {\n        if (!this._points) {\n            throw new Error(ErrorMessages.NoPointsAreDefined);\n        }\n        if (index >= 0 && index < this._points.length) {\n            return this._points[index];\n        }\n        throw new InvalidIndexException(index);\n    }\n\n    /**\n     * Sets point at a given index (0 to # points - 1)\n     * @param index - Point index (0 to # points - 1)\n     * @param value - New point value\n     * @param depth - Not applicable to this element\n     * @returns This polygon\n     */\n    public setPointAt(index: number, value: Point, depth: PointDepth) {\n        if (!this._points) {\n            throw new Error(ErrorMessages.NoPointsAreDefined);\n        }\n        if (index >= 0 && index < this._points.length) {\n            this._points[index] = value;\n            this.bounds = undefined;\n            return this;\n        }\n        throw new InvalidIndexException(index);\n    }\n\n    /**\n     * Adds a new point to this polygon\n     * @param point - New point\n     * @returns This polygon\n     */\n    public addPoint(point: Point) {\n        if (!this._points) {\n            this._points = [];\n        }\n        this._points.push(point);\n        this.bounds = undefined;\n        return this;\n    }\n\n    /**\n     * Winding mode get accessor\n     * @returns Fill winding mode\n     */\n    get winding(): WindingMode | undefined {\n        return this._winding;\n    }\n\n    /**\n     * Winding mode set accessor\n     * @param newValue - New fill winding mode\n     */\n    set winding(newValue: WindingMode | undefined) {\n        this._winding = newValue;\n    }\n\n    /**\n     * Sets fill winding mode\n     * @param winding - Fill winding mode\n     * @returns This polygon\n     */\n    public setWinding(winding: WindingMode) {\n        this._winding = winding;\n        return this;\n    }\n}\n","import { ResourceManager } from './resource-manager';\r\n\r\n/**\r\n * Resource manager event\r\n */\r\nexport class ResourceManagerEvent<T> {\r\n    public listeners: Array<(resourceManager: ResourceManager, data?: T) => void> = [];\r\n\r\n    constructor() {\r\n        this.add = this.add.bind(this);\r\n        this.remove = this.remove.bind(this);\r\n        this.clear = this.clear.bind(this);\r\n        this.trigger = this.trigger.bind(this);\r\n        this.hasListeners = this.hasListeners.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Add a new event listener\r\n     * @param listener - Resource manager event listener (resourceManager: ResourceManager, data?: T)\r\n     */\r\n    public add(listener: (resourceManager: ResourceManager, data?: T) => void) {\r\n        this.listeners.push(listener);\r\n    }\r\n\r\n    /**\r\n     * Removes an event listener\r\n     * @param listener - Resource manager event listener (resourceManager: ResourceManager, data?: T)\r\n     */\r\n    public remove(listener: (resourceManager: ResourceManager, data?: T) => void) {\r\n        const index = this.listeners.indexOf(listener);\r\n        if (index !== -1) {\r\n            this.listeners.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clears all event listeners\r\n     */\r\n    public clear() {\r\n        this.listeners = [];\r\n    }\r\n\r\n    /**\r\n     * Triggers event and calls listeners\r\n     * @param rm - Resource manager\r\n     * @param data - Event data\r\n     */\r\n    public trigger(rm: ResourceManager, data?: T) {\r\n        this.listeners.slice(0).forEach(h => h(rm, data));\r\n    }\r\n\r\n    /**\r\n     * Returns true if any registered listeners\r\n     * @returns True if any registered listeners\r\n     */\r\n    public hasListeners() {\r\n        return this.listeners.length > 0;\r\n    }\r\n}\r\n","/**\n * Represents horizontal(rx) and vertical (ry) scaling factors\n */\nexport class ScalingInfo {\n    /** Horizontal scaling factor */\n    public rx: number;\n\n    /** Vertical scaling factor */\n    public ry: number;\n\n    constructor() {\n        this.rx = 1;\n        this.ry = 1;\n    }\n}\n","import { MousePositionInfo } from './mouse-position-info';\nimport { Point } from './point';\n/**\n * Represents a DOM point related event\n */\nexport class PointEventParameters {\n    /**\n     * Point at which the event occurred adjusted to model coordinates\n     */\n    public point?: Point;\n\n    /**\n     * DOM source event\n     */\n    public event?: Event | MousePositionInfo;\n\n    /**\n     * @param event - Source DOM event\n     * @param point - Model scale adjusted point at which event occurred\n     */\n    constructor(event: Event | MousePositionInfo, point?: Point) {\n        if (event instanceof Event) {\n            this.event = event;\n        }\n        if (point !== undefined) {\n            this.point = point;\n        }\n    }\n}\n","import { Component } from './component';\n\n/**\n * Component related event\n */\nexport class ComponentEvent<T> {\n    private listeners: Array<(c: Component, data: T) => void> = [];\n\n    constructor() {\n        this.add = this.add.bind(this);\n        this.remove = this.remove.bind(this);\n        this.clear = this.clear.bind(this);\n        this.trigger = this.trigger.bind(this);\n        this.hasListeners = this.hasListeners.bind(this);\n        this.copyTo = this.copyTo.bind(this);\n    }\n\n    /**\n     * Adds a component event listener\n     * @param listener - Listener function (c: Component, data: T)\n     */\n    public add(listener: (c: Component, data: T) => void) {\n        this.listeners.push(listener);\n    }\n\n    /**\n     * Removes a component event listener\n     * @param listener - Listener function to remove (c: Component, data: T)\n     */\n    public remove(listener: any): void {\n        const index = this.listeners.indexOf(listener);\n        if (index > -1) {\n            this.listeners.splice(index, 1);\n        }\n    }\n\n    /**\n     * Clears all listeners\n     */\n    public clear(): void {\n        this.listeners.splice(0, this.listeners.length);\n    }\n\n    /**\n     * Triggers event\n     * @param c - Component firing event\n     * @param data - Event data\n     */\n    public trigger(c: Component, data: T) {\n        this.listeners.slice(0).forEach(h => h(c, data));\n    }\n\n    /**\n     * Returns true if any listeners attached\n     * @returns True if any listeners attached to event\n     */\n    public hasListeners(): boolean {\n        if (!this.listeners || this.listeners.length === 0) {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * Copies listeners of this event to another event\n     * @param other - Target component event\n     */\n    public copyTo(other: ComponentEvent<T>) {\n        this.listeners.forEach(h => {\n            other.add(h);\n        });\n    }\n}\n","import { ErrorMessages } from '../../core/error-messages';\r\nimport { Model } from '../../core/model';\r\nimport { Size } from '../../core/size';\r\nimport { ElementCreationProps } from '../../elements/element-creation-props';\r\nimport { ElementSizeProps } from '../../elements/element-size-props';\r\nimport { RectangleElement } from '../../elements/rectangle-element';\r\nimport { BitmapResource } from '../../resource/bitmap-resource';\r\nimport { ModelResource } from '../../resource/model-resource';\r\nimport { ComponentElement } from '../component/component-element';\r\nimport { Component } from './component';\r\nimport { ComponentProps } from './component-props';\r\n\r\n/**\r\n * Encapsulates image based component creation properties\r\n */\r\nexport class ImageBasedComponentProps extends ComponentProps {\r\n    public imageTag: string;\r\n\r\n    public fillImage?: HTMLImageElement;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.onCreate = this.onCreate.bind(this);\r\n        this.onInitialize = this.onInitialize.bind(this);\r\n        this.onSetCreationFill = this.onSetCreationFill.bind(this);\r\n        this.onGetFillImage = this.onGetFillImage.bind(this);\r\n        this.onSize = this.onSize.bind(this);\r\n\r\n        this.imageTag = 'push-button';\r\n        this.size.add(this.onSize);\r\n\r\n        this.initialize = this.onInitialize;\r\n        this.create = this.onCreate;\r\n        this.setCreationFill = this.onSetCreationFill;\r\n        this.getFillImage = this.onGetFillImage;\r\n    }\r\n\r\n    protected onCreate(props: ElementCreationProps) {\r\n        const m = Model.create(props.width, props.height);\r\n        BitmapResource.create('navigate', Component.baseImagePath + this.imageTag + '.png').addTo(m);\r\n        m.stroke = 'Black';\r\n        const rect = RectangleElement.create(0, 0, props.width, props.height)\r\n            .setFill('image(0.75;' + this.imageTag + ')')\r\n            .addTo(m);\r\n        rect.id = 'r';\r\n        ModelResource.create(props.id, m).addTo(props.model);\r\n        const el = new ComponentElement(props.id, props.left, props.top, props.width, props.height);\r\n        props.model.add(el);\r\n        return el;\r\n    }\r\n\r\n    protected onInitialize(callback: (success: boolean) => void) {\r\n        const self = this;\r\n        const image = new Image();\r\n        image.onload = e => {\r\n            self.fillImage = image;\r\n            if (callback) {\r\n                callback(true);\r\n            }\r\n        };\r\n        image.onerror = e => {\r\n            self.fillImage = undefined;\r\n            if (callback) {\r\n                callback(false);\r\n            }\r\n        };\r\n        if (Component.baseImagePath.substr(0, 1) === ':') {\r\n            image.src = Component.baseImagePath.substr(1) + this.imageTag + '.png';\r\n        }\r\n        else {\r\n            image.src = Component.baseImagePath + this.imageTag + '.png';\r\n        }\r\n    }\r\n\r\n    protected onSetCreationFill(c: CanvasRenderingContext2D): void {\r\n        if (this.fillImage) {\r\n            const pattern = c.createPattern(this.fillImage, 'repeat');\r\n            if (pattern) {\r\n                c.fillStyle = pattern;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected onGetFillImage(callback: (image: HTMLImageElement) => void) {\r\n        if (this.fillImage) {\r\n            if (callback) {\r\n                callback(this.fillImage);\r\n            }\r\n        }\r\n        else {\r\n            const image = new Image();\r\n            image.onload = e => {\r\n                if (callback) {\r\n                    callback(image);\r\n                }\r\n            };\r\n            if (Component.baseImagePath.substr(0, 1) === ':') {\r\n                image.src = Component.baseImagePath.substr(1) + this.imageTag + '.png';\r\n            }\r\n            else {\r\n                image.src = Component.baseImagePath + this.imageTag + '.png';\r\n            }\r\n        }\r\n    }\r\n\r\n    protected onSize(c: Component, props: ElementSizeProps) {\r\n        const el = props.element;\r\n        if (!el.model) {\r\n            throw new Error(ErrorMessages.ModelUndefined);\r\n        }\r\n        if (!el.id) {\r\n            throw new Error(ErrorMessages.ElementIdUndefined);\r\n        }\r\n        const size = props.size;\r\n        const res = el.model.resourceManager.get(el.id) as ModelResource;\r\n        if (!res.model) {\r\n            throw new Error(ErrorMessages.ModelUndefined);\r\n        }\r\n        res.model.setSize(size);\r\n        const r = res.model.elementWithId('r');\r\n        if (r) {\r\n            r.setSize(Size.create(size.width, size.height));\r\n        }\r\n    }\r\n}\r\n","import { ViewController } from '../view/view-controller';\nimport { Surface } from './surface';\n\n/**\n * Extends ViewController to add surface property\n */\nexport class SurfaceViewController extends ViewController {\n    /**\n     * Controlled surface\n     */\n    public surface?: Surface;\n\n    constructor() {\n        super();\n    }\n}\n","import { ElementCommandHandler } from '../command/element-command-handler';\nimport { IController } from '../controller/controller';\nimport { ControllerEvent } from '../controller/controller-event';\nimport { ErrorMessages } from '../core/error-messages';\nimport { Logging } from '../core/logging';\nimport { Model } from '../core/model';\nimport { MouseEventArgs } from '../core/mouse-event-args';\nimport { MousePositionInfo } from '../core/mouse-position-info';\nimport { Point } from '../core/point';\nimport { PointEventParameters } from '../core/point-event-parameters';\nimport { TimerParameters } from '../core/timer-parameters';\nimport { ElementBase } from '../elements/element-base';\nimport { ViewRenderer } from './view-renderer';\n\nconst log = Logging.log;\n\n/**\n * Manages rendering and interaction with rendered model content\n */\nexport class ViewController implements IController {\n    /**\n     * Captured view controller for mouse event routing when mouse is down\n     */\n    public static captured: ViewController | undefined;\n\n    /**\n     * Create a new view controller and canvas and bind to host DIV element\n     * @param hostDiv - Host div element\n     * @param model - Drawing model\n     * @param scale - Rendering scale\n     * @returns New view controller\n     */\n    public static initializeTarget(hostDiv: HTMLDivElement, model: Model, scale?: number) {\n        log('Initializing view controller target');\n        if (!hostDiv) {\n            throw new Error(ErrorMessages.HostElementUndefined);\n        }\n        if (!model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        const size = model.getSize();\n        if (!size) {\n            throw new Error(ErrorMessages.SizeUndefined);\n        }\n        const viewScale = scale === undefined ? 1 : scale;\n        hostDiv.innerHTML = '';\n        const controller = new ViewController();\n        controller.setScale(viewScale);\n        controller.setModel(model);\n        const canvas = controller.getCanvas();\n        hostDiv.appendChild(canvas);\n        hostDiv.style.width = size.width * viewScale + 'px';\n        hostDiv.style.height = size.height * viewScale + 'px';\n        controller.draw();\n        model.controllerAttached.trigger(model, controller);\n        return controller;\n    }\n\n    /**\n     * Fired when model is updated\n     */\n    public modelUpdated: ControllerEvent<Model> = new ControllerEvent<Model>();\n\n    /**\n     * Fired when enabled state is changed\n     */\n    public enabledChanged: ControllerEvent<boolean> = new ControllerEvent<boolean>();\n\n    /**\n     * Fired when mouse enters view\n     */\n    public mouseEnteredView: ControllerEvent<MouseEventArgs> = new ControllerEvent<MouseEventArgs>();\n\n    /**\n     * Fired when mouse leaves view\n     */\n    public mouseLeftView: ControllerEvent<MouseEventArgs> = new ControllerEvent<MouseEventArgs>();\n\n    /**\n     * Fired when mouse is pressed over view. Captures mouse activity.\n     */\n    public mouseDownView: ControllerEvent<PointEventParameters> = new ControllerEvent<PointEventParameters>();\n\n    /**\n     * Fired when mouse is released and mouse is captured.\n     */\n    public mouseUpView: ControllerEvent<PointEventParameters> = new ControllerEvent<PointEventParameters>();\n\n    /**\n     * Fired when mouse is moved over view\n     */\n    public mouseMovedView: ControllerEvent<PointEventParameters> = new ControllerEvent<PointEventParameters>();\n\n    /**\n     * Fired when mouse enters element bounds\n     */\n    public mouseEnteredElement: ControllerEvent<ElementBase> = new ControllerEvent<ElementBase>();\n\n    /**\n     * Fired when mouse leaves element bounds\n     */\n    public mouseLeftElement: ControllerEvent<ElementBase> = new ControllerEvent<ElementBase>();\n\n    /**\n     * Fired when mouse is pressed over element\n     */\n    public mouseDownElement: ControllerEvent<ElementBase> = new ControllerEvent<ElementBase>();\n\n    /**\n     * Fired when mouse is released over element\n     */\n    public mouseUpElement: ControllerEvent<ElementBase> = new ControllerEvent<ElementBase>();\n\n    /**\n     * Fired when mouse is pressed and released over an element\n     */\n    public elementClicked: ControllerEvent<ElementBase> = new ControllerEvent<ElementBase>();\n\n    /**\n     * Period animation event timer fired when timer is enabled\n     */\n    public timer: ControllerEvent<TimerParameters> = new ControllerEvent<TimerParameters>();\n\n    /**\n     * Controlled model\n     */\n    public model?: Model;\n\n    /**\n     * Canvas rendering target\n     */\n    public canvas?: HTMLCanvasElement;\n\n    /**\n     * Current mouse x position\n     */\n    public currentX?: number;\n\n    /**\n     * Current mouse y position\n     */\n    public currentY?: number;\n\n    /**\n     * Mouse down location\n     */\n    public mouseDownPosition?: Point;\n\n    /**\n     * True when mouse is over view\n     */\n    public isMouseOver: boolean = false;\n\n    /**\n     * True when mouse is down and captured over view\n     */\n    public isMouseDown: boolean = false;\n\n    /**\n     * Rendering origin X offset\n     */\n    public offsetX: number = 0;\n\n    /**\n     * Rendering origin y offset\n     */\n    public offsetY: number = 0;\n\n    /**\n     * Rendering scale\n     */\n    public scale: number = 1;\n\n    /**\n     * Last mouse movement X delta\n     */\n    public lastDeltaX?: number;\n\n    /**\n     * Last mouse movement Y delta\n     */\n    public lastDeltaY?: number;\n\n    /**\n     * Last mouse client X position\n     */\n    public lastClientX?: number;\n\n    /**\n     * Last mouse client Y position\n     */\n    public lastClientY?: number;\n\n    /**\n     * Topmost element at mouse location\n     */\n    public mouseOverElement?: ElementBase;\n\n    /**\n     * Pressed element\n     */\n    public pressedElement?: ElementBase;\n\n    /**\n     * Touch delayed pending mouse down element\n     */\n    public pendingMouseDownElement?: ElementBase;\n\n    /**\n     * Click cancelled flag\n     */\n    public clickCancelled: boolean = false;\n\n    /**\n     * Cancel action flag\n     */\n    public cancelAction: boolean = false;\n\n    /**\n     * Set internally when view should be redrawn\n     */\n    public needsRedraw: boolean = false;\n\n    /**\n     * Associated view renderer\n     */\n    public renderer?: ViewRenderer;\n\n    /**\n     * Event delay period when using event delay\n     */\n    public eventDelay: number;\n\n    /**\n     * Event delay timer handle\n     */\n    public eventTimer?: number;\n\n    /**\n     * Animation timer start time\n     */\n    public startTime?: number;\n\n    /**\n     * Last animation timer tick time\n     */\n    public lastTick?: number;\n\n    /**\n     * Last frame render time\n     */\n    public lastFrameTime?: number;\n\n    /**\n     * Animation timer handle\n     */\n    public timerHandle?: number;\n\n    /**\n     * Animation timer enabled flag\n     */\n    public timerEnabled: boolean = false;\n\n    /*\n     * Reused object for timer event parameters\n     */\n    public timerParameters: TimerParameters;\n\n    /**\n     * Animation timer pause time\n     */\n    public pauseTime?: number;\n\n    /**\n     * User interaction enabled flag\n     */\n    public enabled: boolean;\n\n    /**\n     * Fill to render over disabled view\n     */\n    public disabledFill?: string;\n\n    /**\n     * Command handler for handling routed events\n     */\n    public commandHandler?: ElementCommandHandler;\n\n    constructor() {\n        /** Initialize animation timer function */\n        // Animation.initialize();\n\n        this.setModel = this.setModel.bind(this);\n        this.setEnabled = this.setEnabled.bind(this);\n        this.getCanvas = this.getCanvas.bind(this);\n        this.drawIfNeeded = this.drawIfNeeded.bind(this);\n        this.createCanvas = this.createCanvas.bind(this);\n        this.detach = this.detach.bind(this);\n        this.windowToCanvas = this.windowToCanvas.bind(this);\n        this.windowMouseUp = this.windowMouseUp.bind(this);\n        this.windowMouseMove = this.windowMouseMove.bind(this);\n        this.onCanvasMouseEnter = this.onCanvasMouseEnter.bind(this);\n        this.onCanvasMouseLeave = this.onCanvasMouseLeave.bind(this);\n        this.onCanvasMouseDown = this.onCanvasMouseDown.bind(this);\n        this.onCanvasMouseUp = this.onCanvasMouseUp.bind(this);\n        this.onCanvasMouseMove = this.onCanvasMouseMove.bind(this);\n        this.setMouseDownElement = this.setMouseDownElement.bind(this);\n        this.setMouseOverElement = this.setMouseOverElement.bind(this);\n        this.setScale = this.setScale.bind(this);\n        this.onModelUpdated = this.onModelUpdated.bind(this);\n        this.draw = this.draw.bind(this);\n        this.calculateFPS = this.calculateFPS.bind(this);\n        this.invalidate = this.invalidate.bind(this);\n        this.startTimer = this.startTimer.bind(this);\n        this.pauseTimer = this.pauseTimer.bind(this);\n        this.resumeTimer = this.resumeTimer.bind(this);\n        this.stopTimer = this.stopTimer.bind(this);\n        this.tick = this.tick.bind(this);\n        this.elapsedTime = this.elapsedTime.bind(this);\n        this.timerPhase = this.timerPhase.bind(this);\n        this.bindTarget = this.bindTarget.bind(this);\n\n        this.enabled = true;\n        this.scale = 1;\n        this.offsetX = 0;\n        this.offsetY = 0;\n        this.lastDeltaX = -1;\n        this.lastDeltaY = -1;\n        this.eventDelay = 0;\n\n        this.timerParameters = new TimerParameters(0, 0);\n    }\n\n    /**\n     * Sets controller model\n     * @param model - Drawing model\n     */\n    public setModel(model: Model): void {\n        if (model === this.model) {\n            return;\n        }\n        if (this.model) {\n            this.model.controllerDetached.trigger(this.model, this);\n        }\n        log('Setting view controller model');\n        this.model = model;\n        this.currentX = undefined;\n        this.currentY = undefined;\n        this.isMouseDown = false;\n        this.mouseDownPosition = undefined;\n        this.mouseOverElement = undefined;\n        this.pressedElement = undefined;\n        this.lastDeltaX = -1;\n        this.lastDeltaY = -1;\n        this.offsetX = 0;\n        this.offsetY = 0;\n        if (!this.canvas) {\n            this.createCanvas();\n        }\n        else if (this.model) {\n            const size = this.model.getSize();\n            if (!size) {\n                throw new Error(ErrorMessages.SizeUndefined);\n            }\n            this.canvas.width = size.width * this.scale;\n            this.canvas.height = size.height * this.scale;\n            const element = this.canvas.parentElement;\n            if (element) {\n                element.style.width = size.width * this.scale + 'px';\n                element.style.height = size.height * this.scale + 'px';\n            }\n        }\n        if (this.model.elements !== undefined && this.model.elements.length > 0) {\n            this.model.elements.forEach(element => {\n                if (element.interactive === undefined) {\n                    element.interactive = true;\n                }\n            });\n        }\n        this.draw();\n        model.controllerAttached.trigger(model, this);\n    }\n\n    /**\n     * Sets enabled state with optional disabled state overlay fill\n     * @param enabled - User interactivity enabled state\n     * @param disabledFill - Optional disabled state fill as string\n     */\n    public setEnabled(enabled: boolean, disabledFill?: string): void {\n        if (enabled === this.enabled) {\n            return;\n        }\n        this.enabled = enabled;\n        if (arguments.length > 1) {\n            this.disabledFill = disabledFill;\n        }\n        if (!enabled) {\n            if (this.isMouseDown) {\n                this.cancelAction = true;\n                if (this.lastClientX && this.lastClientY) {\n                    this.onCanvasMouseUp(new MousePositionInfo(this.lastClientX, this.lastClientY));\n                }\n            }\n        }\n        this.draw();\n        this.enabledChanged.trigger(this, enabled);\n    }\n\n    /**\n     * Creates if necessary and returns canvas element\n     */\n    public getCanvas(): HTMLCanvasElement {\n        if (!this.canvas) {\n            this.createCanvas();\n        }\n        if (!this.canvas) {\n            throw new Error(ErrorMessages.CanvasIsUndefined);\n        }\n        if (!this.model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        const size = this.model.getSize();\n        if (!size) {\n            throw new Error(ErrorMessages.SizeUndefined);\n        }\n        this.canvas.width = size.width * this.scale;\n        this.canvas.height = size.height * this.scale;\n        return this.canvas;\n    }\n\n    /**\n     * Renders to canvas if needed and clears redraw flag\n     */\n    public drawIfNeeded(): void {\n        if (this.needsRedraw) {\n            this.draw();\n            this.needsRedraw = false;\n        }\n    }\n\n    /**\n     * Creates canvas for model at current scale and attached event handlers\n     */\n    public createCanvas(): void {\n        log('Creating canvas and attaching event handlers');\n        const self = this;\n        if (!self.model) {\n            return;\n        }\n        const size = self.model.getSize();\n        if (!size) {\n            throw new Error(ErrorMessages.SizeUndefined);\n        }\n        const canvas = document.createElement('canvas');\n        canvas.width = size.width * self.scale;\n        canvas.height = size.height * self.scale;\n        canvas.addEventListener('mouseenter', self.onCanvasMouseEnter);\n        canvas.addEventListener('mouseleave', self.onCanvasMouseLeave);\n        canvas.addEventListener('mousedown', self.onCanvasMouseDown);\n        canvas.addEventListener('mousemove', self.onCanvasMouseMove);\n\n        self.canvas = canvas;\n        self.renderer = new ViewRenderer(self);\n    }\n\n    /**\n     * Detaches and destroys current canvas\n     */\n    public detach(): void {\n        this.stopTimer();\n        if (this.model) {\n            this.model.controllerDetached.trigger(this.model, this);\n            this.model.controllerDetached.clear();\n            this.model.controllerAttached.clear();\n        }\n        if (!this.canvas) {\n            return;\n        }\n        log('Detaching event handlers and destroying canvas');\n        this.canvas.removeEventListener('mouseenter', this.onCanvasMouseEnter);\n        this.canvas.removeEventListener('mouseleave', this.onCanvasMouseLeave);\n        this.canvas.removeEventListener('mousedown', this.onCanvasMouseDown);\n        this.canvas.removeEventListener('mousemove', this.onCanvasMouseMove);\n        const element = this.canvas.parentElement;\n        if (element) {\n            element.removeChild(this.canvas);\n        }\n        this.mouseEnteredView.clear();\n        this.mouseLeftView.clear();\n        this.mouseDownView.clear();\n        this.mouseUpView.clear();\n        this.mouseMovedView.clear();\n        this.elementClicked.clear();\n        this.mouseDownElement.clear();\n        this.mouseEnteredElement.clear();\n        this.mouseLeftElement.clear();\n        this.mouseUpElement.clear();\n        this.modelUpdated.clear();\n        this.enabledChanged.clear();\n        if (this.timer) {\n            this.timer.clear();\n        }\n        this.canvas = undefined;\n    }\n\n    /**\n     * Translates raw window coordinates to model coordinates\n     * compensating for current scale and origin offset\n     * @param x - Raw x coordinate\n     * @param y - Raw y coordinate\n     */\n    public windowToCanvas(x: number, y: number): Point {\n        if (!this.canvas || !this.model) {\n            return new Point(x, y);\n        }\n        const bounds = this.canvas.getBoundingClientRect();\n        const size = this.model.getSize();\n        if (!size) {\n            throw new Error(ErrorMessages.SizeUndefined);\n        }\n        let x1: number;\n        let y1: number;\n        x1 = x - Math.round(bounds.left);\n        y1 = y - Math.round(bounds.top);\n        if (this.canvas.width !== bounds.width) {\n            x1 *= this.canvas.width / bounds.width;\n        }\n        if (this.canvas.height !== bounds.height) {\n            y1 *= this.canvas.height / bounds.height;\n        }\n        if (this.scale !== 1) {\n            x1 /= this.scale;\n            y1 /= this.scale;\n        }\n        if (this.isMouseOver) {\n            if (x1 < 0) {\n                x1 = 0;\n            }\n            if (x1 > size.width - 1) {\n                x1 = size.width - 1;\n            }\n            if (y1 < 0) {\n                y1 = 0;\n            }\n            if (y1 > size.height - 1) {\n                y1 = size.height - 1;\n            }\n        }\n        x1 = x1 + this.offsetX;\n        y1 = y1 + this.offsetY;\n        return new Point(x1, y1);\n    }\n\n    /**\n     * Handles captured mouse up event\n     * @param e - Window mouse up event\n     */\n    public windowMouseUp(e: MouseEvent) {\n        const captured = ViewController.captured;\n        if (captured) {\n            log(`Window mouse up ${e.clientX}:${e.clientY}`);\n            // const canvas = captured.canvas;\n            captured.onCanvasMouseUp(e);\n            captured.drawIfNeeded();\n            window.removeEventListener('mouseup', captured.windowMouseUp, true);\n            window.removeEventListener('mousemove', captured.windowMouseMove, true);\n            ViewController.captured = undefined;\n        }\n    }\n\n    /**\n     * Handles captured mouse move event\n     * @param e - Window mouse up event\n     */\n    public windowMouseMove(e: MouseEvent) {\n        const captured = ViewController.captured;\n        if (captured) {\n            log(`Window mouse move ${e.clientX}:${e.clientY}`);\n            e.preventDefault();\n            e.stopPropagation();\n            captured.onCanvasMouseMove(e);\n            captured.drawIfNeeded();\n        }\n    }\n\n    /**\n     * Handles canvas mouse enter event\n     * @param e - DOM event\n     */\n    public onCanvasMouseEnter(e: MouseEvent) {\n        log(`Canvas mouse enter`);\n        this.isMouseOver = true;\n        if (!this.enabled) {\n            return;\n        }\n        if (this.mouseEnteredView.hasListeners) {\n            this.mouseEnteredView.trigger(this, new MouseEventArgs(e));\n        }\n        this.drawIfNeeded();\n    }\n\n    /**\n     * Handles canvas mouse leave event\n     * @param e - DOM event\n     */\n    public onCanvasMouseLeave(e: MouseEvent) {\n        log('Canvas mouse leave');\n        this.isMouseOver = false;\n        if (!this.enabled) {\n            return;\n        }\n        if (this.mouseLeftView.hasListeners) {\n            this.mouseLeftView.trigger(this, new MouseEventArgs(e));\n        }\n        this.drawIfNeeded();\n    }\n\n    /**\n     * Handles canvas mouse down event\n     * @param e - Mouse event\n     */\n    public onCanvasMouseDown(e: MouseEvent) {\n        const self = this;\n        log(`Canvas mouse down ${e.clientX}:${e.clientY}`);\n        ViewController.captured = self;\n        window.addEventListener('mouseup', self.windowMouseUp, true);\n        window.addEventListener('mousemove', self.windowMouseMove, true);\n\n        if (!self.enabled) {\n            return;\n        }\n        if (!self.canvas) {\n            return;\n        }\n        if (!self.model) {\n            return;\n        }\n        self.lastClientX = e.clientX;\n        self.lastClientY = e.clientY;\n        const p = self.windowToCanvas(e.clientX, e.clientY);\n        const context = self.canvas.getContext('2d');\n        if (!context) {\n            throw new Error(ErrorMessages.CanvasContextIsNull);\n        }\n        self.currentX = p.x;\n        self.currentY = p.y;\n        self.mouseDownPosition = Point.create(p.x, p.y);\n        self.isMouseDown = true;\n        self.mouseDownView.trigger(self, new PointEventParameters(e, self.mouseDownPosition));\n        const activeElement = self.model.firstActiveElementAt(context, p.x, p.y);\n        self.clickCancelled = false;\n        if (self.eventDelay > 0) {\n            self.pendingMouseDownElement = activeElement;\n            if (self.eventTimer) {\n                clearTimeout(self.eventTimer);\n                self.eventTimer = undefined;\n            }\n            self.eventTimer = setTimeout(() => {\n                if (!self.clickCancelled) {\n                    self.setMouseDownElement(self.pendingMouseDownElement);\n                }\n            }, self.eventDelay);\n        }\n        else {\n            self.setMouseDownElement(activeElement);\n        }\n        self.drawIfNeeded();\n    }\n\n    /**\n     * Handles canvas mouse move event\n     * @param e - Mouse event\n     */\n    public onCanvasMouseMove(e: MouseEvent): void {\n        log(`Canvas mouse move ${e.clientX}:${e.clientY}`);\n\n        if (!this.enabled) {\n            return;\n        }\n        if (!this.lastClientX) {\n            return;\n        }\n        if (!this.model) {\n            return;\n        }\n        const deltaX = this.lastClientX - e.clientX;\n        if (Math.abs(deltaX) > 8) {\n            this.clickCancelled = true;\n        }\n        const p = this.windowToCanvas(e.clientX, e.clientY);\n        if (p.x === this.currentX && this.currentY === p.y) {\n            return;\n        }\n        this.currentX = p.x;\n        this.currentY = p.y;\n        this.mouseMovedView.trigger(this, new PointEventParameters(e, p));\n        if (!this.canvas) {\n            return;\n        }\n        const context = this.canvas.getContext('2d');\n        if (!context) {\n            throw new Error(ErrorMessages.CanvasContextIsNull);\n        }\n        const activeElement = this.model.firstActiveElementAt(context, p.x, p.y);\n        this.setMouseOverElement(activeElement);\n    }\n\n    /**\n     * Handles canvas mouse up\n     * @param e - Mouse event info\n     */\n    public onCanvasMouseUp(e: MouseEvent | MousePositionInfo) {\n        log(`Canvas mouse up ${e.clientX}:${e.clientY}`);\n        ViewController.captured = undefined;\n        window.removeEventListener('mouseup', this.windowMouseUp, true);\n        window.removeEventListener('mousemove', this.windowMouseMove, true);\n\n        if (!this.enabled) {\n            return;\n        }\n        if (!this.isMouseDown) {\n            return;\n        }\n        this.lastClientX = e.clientX;\n        this.lastClientY = e.clientY;\n        const p = this.windowToCanvas(e.clientX, e.clientY);\n        this.currentX = p.x;\n        this.currentY = p.y;\n        this.isMouseDown = false;\n        this.mouseUpView.trigger(this, new PointEventParameters(e, p));\n        if (this.pressedElement) {\n            const el = this.pressedElement;\n            this.mouseUpElement.trigger(this, el);\n            if (!this.clickCancelled) {\n                if (el === this.mouseOverElement) {\n                    this.elementClicked.trigger(this, el);\n                }\n            }\n            this.pressedElement = undefined;\n        }\n        else if (this.pendingMouseDownElement && !this.clickCancelled) {\n            this.setMouseOverElement(this.pendingMouseDownElement);\n            this.setMouseDownElement(this.pendingMouseDownElement);\n            this.mouseUpElement.trigger(this, this.pendingMouseDownElement);\n            this.elementClicked.trigger(this, this.pendingMouseDownElement);\n            this.pendingMouseDownElement = undefined;\n        }\n        this.drawIfNeeded();\n    }\n\n    /**\n     * Sets current mouse down element\n     * @param el - Mouse down element\n     */\n    public setMouseDownElement(el: ElementBase | undefined) {\n        if (el) {\n            this.setMouseOverElement(el);\n        }\n        if (el !== this.pressedElement) {\n            if (this.pressedElement) {\n                this.mouseUpElement.trigger(this, this.pressedElement);\n            }\n            this.pressedElement = el;\n            if (el) {\n                this.mouseDownElement.trigger(this, el);\n            }\n        }\n    }\n\n    /**\n     * Sets current mouse over element\n     * @param el -Mouse over element\n     */\n    public setMouseOverElement(el: ElementBase | undefined) {\n        if (el !== this.mouseOverElement) {\n            if (this.mouseOverElement) {\n                this.mouseLeftElement.trigger(this, this.mouseOverElement);\n            }\n            this.mouseOverElement = el;\n            if (el) {\n                this.mouseEnteredElement.trigger(this, el);\n            }\n        }\n        if (this.canvas) {\n            if (this.mouseOverElement) {\n                this.canvas.style.cursor = 'pointer';\n            }\n            else {\n                this.canvas.style.cursor = 'default';\n            }\n        }\n    }\n\n    /**\n     * Sets rendering scale.  Recreates or sizes target canvas.\n     * @param Render scale\n     */\n    public setScale(scale: number) {\n        if (scale === this.scale) {\n            return;\n        }\n        this.scale = scale;\n        if (!this.model) {\n            return;\n        }\n        if (!this.canvas) {\n            return;\n        }\n        const size = this.model.getSize();\n        if (!size) {\n            throw new Error(ErrorMessages.SizeUndefined);\n        }\n        if (this.canvas) {\n            this.canvas.width = size.width * scale;\n            this.canvas.height = size.height * scale;\n        }\n        else {\n            this.createCanvas();\n        }\n        const hostDiv = this.canvas.parentElement;\n        if (hostDiv) {\n            hostDiv.style.width = size.width * scale + 'px';\n            hostDiv.style.height = size.height * scale + 'px';\n        }\n        this.draw();\n    }\n\n    /**\n     * Called when model is updated. Sets redraw flag and triggers\n     * model updated event\n     */\n    public onModelUpdated(): void {\n        if (!this.model) {\n            return;\n        }\n        this.modelUpdated.trigger(this, this.model);\n        this.invalidate();\n    }\n\n    /**\n     * Renders model to canvas and clears redraw flag\n     */\n    public draw(): void {\n        if (!this.canvas) {\n            return;\n        }\n        if (!this.model) {\n            return;\n        }\n\n        const context = this.canvas.getContext('2d');\n        if (!context) {\n            throw new Error(ErrorMessages.CanvasContextIsNull);\n        }\n        this.model.context = context;\n        const size = this.model.getSize();\n        if (!size) {\n            throw new Error(ErrorMessages.SizeUndefined);\n        }\n        const w = size.width;\n        const h = size.height;\n\n        // Clear context\n        if (this.scale !== 1.0) {\n            context.clearRect(0, 0, w * this.scale, h * this.scale);\n        }\n        else {\n            context.clearRect(0, 0, w, h);\n        }\n\n        // Offset for scroll\n        context.save();\n        context.translate(-this.offsetX * this.scale, -this.offsetY * this.scale);\n\n        // Render model\n        if (!this.renderer) {\n            throw new Error(ErrorMessages.RendererIsUndefined);\n        }\n        this.renderer.renderToContext(context, this.scale);\n\n        // Restore from offset\n        context.restore();\n\n        // If displaying frame rate\n        if (this.model.displayFPS) {\n            context.fillStyle = 'cornflowerblue';\n            context.font = '16px monospace';\n            context.fillText(this.calculateFPS().toFixed() + ' fps', 20, 20);\n        }\n\n        // Clear redraw flag\n        this.needsRedraw = false;\n    }\n\n    /**\n     * Begins direct rendering\n     */\n    public beginDraw(): CanvasRenderingContext2D {\n        if (!this.canvas) {\n            throw new Error(ErrorMessages.CanvasIsUndefined);\n        }\n        if (!this.model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        const size = this.model.getSize();\n        if (!size) {\n            throw new Error(ErrorMessages.SizeUndefined);\n        }\n\n        const context = this.canvas.getContext('2d');\n        if (!context) {\n            throw new Error(ErrorMessages.CanvasContextIsNull);\n        }\n        this.model.context = context;\n\n        const w = size.width;\n        const h = size.height;\n\n        // Clear context\n        if (this.scale !== 1.0) {\n            context.clearRect(0, 0, w * this.scale, h * this.scale);\n        }\n        else {\n            context.clearRect(0, 0, w, h);\n        }\n\n        // Offset for scroll\n        context.save();\n        context.translate(-this.offsetX * this.scale, -this.offsetY * this.scale);\n\n        // Render model\n        if (!this.renderer) {\n            throw new Error(ErrorMessages.RendererIsUndefined);\n        }\n        this.renderer.renderToContext(context, this.scale);\n\n        return context;\n    }\n\n    /**\n     * Ends direct rendering\n     */\n    public endDraw(context: CanvasRenderingContext2D) {\n        // Render model\n        // this.renderer.renderToContext(context, this.scale);\n\n        // Restore from offset\n        context.restore();\n\n        // Clear redraw flag\n        this.needsRedraw = false;\n    }\n\n    /**\n     * Calculates frame rate based on elapsed time since last frame\n     */\n    public calculateFPS(): number {\n        const now = +new Date();\n        let fps = 0;\n        if (this.lastFrameTime !== undefined) {\n            fps = 1000 / (now - this.lastFrameTime);\n        }\n        this.lastFrameTime = now;\n        return fps;\n    }\n\n    /**\n     * Sets redraw flag to induce draw on next draw cycle\n     */\n    public invalidate(): void {\n        this.needsRedraw = true;\n    }\n\n    /**\n     * Starts animation timer to induce period tick events\n     * @param offset - Timer start offset\n     */\n    public startTimer(offset: number = 0): void {\n        this.startTime = +new Date();\n        if (offset) {\n            this.startTime += offset * 1000;\n        }\n        this.lastTick = 0.0;\n        if (this.timerEnabled) {\n            return;\n        }\n        this.timerEnabled = true;\n        const controller = this;\n        this.timerHandle = window.requestAnimationFrame(controller.tick);\n    }\n\n    /**\n     * Pauses animation timer\n     */\n    public pauseTimer(): void {\n        if (!this.timerEnabled) {\n            return;\n        }\n        this.pauseTime = +new Date();\n        this.timerEnabled = false;\n        if (this.timerHandle !== undefined) {\n            window.cancelAnimationFrame(this.timerHandle);\n            this.timerHandle = undefined;\n        }\n    }\n\n    /**\n     * Resumes animation timer at time paused\n     */\n    public resumeTimer(): void {\n        if (this.timerEnabled) {\n            return;\n        }\n        const controller = this;\n        const now = +new Date();\n        if (this.pauseTime !== undefined && controller.startTime !== undefined) {\n            const elapsed = now - this.pauseTime;\n            controller.startTime += elapsed;\n        }\n        else {\n            controller.startTime = now;\n        }\n        controller.pauseTime = undefined;\n        controller.timerEnabled = true;\n        this.timerHandle = window.requestAnimationFrame(controller.tick);\n    }\n\n    /**\n     * Stops animation timer\n     */\n    public stopTimer() {\n        if (!this.timerEnabled) {\n            return;\n        }\n        this.timerEnabled = false;\n        if (this.timerHandle !== undefined) {\n            window.cancelAnimationFrame(this.timerHandle);\n            this.timerHandle = undefined;\n        }\n    }\n\n    /**\n     * Animation timer callback. Called by system animation frame timer and induces tick event when timer is enabled.\n     */\n    public tick() {\n        const controller = this;\n        if (controller.timerEnabled) {\n            this.timerParameters.elapsedTime = controller.elapsedTime();\n            if (controller.lastTick !== undefined) {\n                this.timerParameters.tickDelta = this.timerParameters.elapsedTime - controller.lastTick;\n            }\n            else {\n                this.timerParameters.tickDelta = 0;\n            }\n            controller.lastTick = this.timerParameters.elapsedTime;\n            controller.timer.trigger(controller, this.timerParameters);\n            controller.drawIfNeeded();\n            this.timerHandle = window.requestAnimationFrame(controller.tick);\n        }\n        else {\n            this.timerHandle = undefined;\n        }\n    }\n\n    /**\n     * Computes animation timer elapsed time\n     */\n    public elapsedTime(): number {\n        const now = +new Date();\n        if (this.startTime !== undefined) {\n            return (now - this.startTime) / 1000.0;\n        }\n        else {\n            return 0;\n        }\n    }\n\n    /**\n     * Binds existing controller to host DIV element\n     * @param hostDiv - Hosting div element\n     * @returns This view controller\n     */\n    public bindTarget(hostDiv: HTMLDivElement) {\n        if (!hostDiv) {\n            throw new Error(ErrorMessages.HostElementUndefined);\n        }\n        if (!this.model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        const size = this.model.getSize();\n        if (!size) {\n            throw new Error(ErrorMessages.SizeUndefined);\n        }\n        hostDiv.innerHTML = '';\n        const canvas = this.getCanvas();\n        hostDiv.appendChild(canvas);\n        hostDiv.style.width = size.width * this.scale + 'px';\n        hostDiv.style.height = size.height * this.scale + 'px';\n        this.draw();\n        this.model.controllerAttached.trigger(this.model, this);\n        return this;\n    }\n\n    /**\n     * Computes floating point modulus (remainder) of two number\n     * @param a - Numerator\n     * @param b - Denominator\n     * @returns Floating point remainder\n     */\n    private fmod(a: number, b: number): number {\n        return Number((a - Math.floor(a / b) * b).toPrecision(8));\n    }\n\n    /**\n     * Computes periodic timer phase angle based on timer offset and frequency\n     * @param frequency - Timer frequency in cycles per second\n     * @returns Timer phase angle in radians\n     */\n    private timerPhase(frequency: number): number {\n        const elapsed = this.elapsedTime();\n        const period = 1.0 / frequency;\n        const partial = this.fmod(elapsed, period) / period;\n        const phase = partial * 2.0 * Math.PI;\n        return phase;\n    }\n}\n","export class CommandEventTrigger {\n    public static None = 'none';\n    public static MouseEnter = 'mouseEnter';\n    public static MouseLeave = 'mouseLeave';\n    public static MouseDown = 'mouseDown';\n    public static MouseUp = 'mouseUp';\n    public static Click = 'click';\n    public static Timer = 'timer';\n}\n","import { ElementBase } from '../elements/element-base';\nimport { ICommandHandlerMethod } from './command-handler';\n\nexport class ElementCommandHandlerRegistration {\n    public command: string;\n    public handler: ICommandHandlerMethod<ElementBase>;\n\n    constructor(command: string, handler: ICommandHandlerMethod<ElementBase>) {\n        this.command = command;\n        this.handler = handler;\n    }\n}\n","export class ControllerEventArgs {\n    /**\n     * DOM Event\n     */\n    public event: Event;\n\n    /**\n     * @param event - DOM event\n     */\n    constructor(event: Event) {\n        this.event = event;\n    }\n}\n","import { Color } from './color';\r\n\r\n/**\r\n * Describes a color with a well-known name\r\n */\r\nexport class NamedColor {\r\n    public name: string;\r\n    public color: Color;\r\n\r\n    constructor(name: string, color: Color) {\r\n        this.name = name;\r\n        this.color = color;\r\n    }\r\n}\r\n","import { ElementBase } from './element-base';\nimport { IElementCreator } from './element-creator';\nimport { ElementCreatorRegistration } from './element-creator-registration';\nimport { EllipseElement } from './ellipse-element';\nimport { ImageElement } from './image-element';\nimport { LineElement } from './line-element';\nimport { ModelElement } from './model-element';\nimport { PathElement } from './path-element';\nimport { PolygonElement } from './polygon-element';\nimport { PolylineElement } from './polyline-element';\nimport { RectangleElement } from './rectangle-element';\nimport { SpriteElement } from './sprite-element';\nimport { TextElement } from './text-element';\n\n/**\n * Central element creator registry\n */\nexport class ElementFactory {\n    /**\n     * Element creators\n     */\n    public static ElementCreators: ElementCreatorRegistration[] = [];\n\n    /**\n     * Register a new element creator\n     * @param name - Name\n     * @param creator - Element creator\n     */\n    public static registerCreator(name: string, creator: IElementCreator) {\n        ElementFactory.ElementCreators.push(new ElementCreatorRegistration(name, creator));\n    }\n\n    /**\n     * Create a new element given its type tag\n     * @param name - Element type tag\n     * @returns New element\n     */\n    public static create(name: string): ElementBase | undefined {\n        for (const creatorRegistration of ElementFactory.ElementCreators) {\n            if (creatorRegistration.name === name) {\n                return creatorRegistration.creator.create();\n            }\n        }\n        return undefined;\n    }\n}\n\n/* Register element creators */\nElementFactory.registerCreator('image', ImageElement);\nElementFactory.registerCreator('sprite', SpriteElement);\nElementFactory.registerCreator('rectangle', RectangleElement);\nElementFactory.registerCreator('line', LineElement);\nElementFactory.registerCreator('polyline', PolylineElement);\nElementFactory.registerCreator('polygon', PolygonElement);\nElementFactory.registerCreator('path', PathElement);\nElementFactory.registerCreator('ellipse', EllipseElement);\nElementFactory.registerCreator('text', TextElement);\nElementFactory.registerCreator('model', ModelElement);\n","import { IElementCreator } from './element-creator';\n\n/**\n * Encapsulates named element creation method\n */\nexport class ElementCreatorRegistration {\n    /**\n     * Element creator registration\n     * @param name - Element type tag\n     * @param creator - Element creator\n     */\n    constructor(public name: string, public creator: IElementCreator) {\n        this.name = name;\n        this.creator = creator;\n    }\n}\n","import { ErrorMessages } from '../core/error-messages';\nimport { Point } from '../core/point';\nimport { IPointContainer } from '../core/point-container';\nimport { PointDepth } from '../core/point-depth';\nimport { Region } from '../core/region';\nimport { Size } from '../core/size';\nimport { WindingMode } from '../core/winding-mode';\nimport { FillFactory } from '../fill/fill-factory';\nimport { ElementBase } from './element-base';\nimport { InvalidIndexException } from './invalid-index-exception';\n\n/**\n * Renders series of stroked and/or filled drawing commands\n */\nexport class PathElement extends ElementBase implements IPointContainer {\n    /**\n     * Path element factory function\n     * @returns New path element\n     */\n    public static create(): PathElement {\n        const e = new PathElement();\n        return e;\n    }\n\n    /**\n     * Computed bounding region\n     */\n    public bounds?: Region;\n\n    /**\n     * True when in point editing mode\n     */\n    public editPoints: boolean = false;\n\n    /**\n     * Drawing commands array\n     */\n    private _commands?: string[];\n\n    /**\n     * Fill winding mode\n     */\n    private _winding?: WindingMode;\n\n    constructor() {\n        super('path');\n        this.add = this.add.bind(this);\n        this.getCommands = this.getCommands.bind(this);\n        this.setWinding = this.setWinding.bind(this);\n        this.setCommands = this.setCommands.bind(this);\n    }\n\n    /**\n     * Commands get accessor as string. Serializes command array into string.\n     * @returns Serialized command array\n     */\n    get commands(): string | undefined {\n        if (!this._commands) {\n            return undefined;\n        }\n        else {\n            return this._commands.join(' ');\n        }\n    }\n\n    /**\n     * Commands set accessor as string.  Parses serialized string of commands.\n     * @param commandString - Serialized command array\n     */\n    set commands(commandString: string | undefined) {\n        if (commandString) {\n            this._commands = commandString.split(' ');\n        }\n        else {\n            this._commands = undefined;\n        }\n        this.bounds = undefined;\n    }\n\n    /**\n     * Sets commands as serialized command string\n     * @param commandString - Serialized command string\n     * @returns This path element\n     */\n    public setCommands(commandString: string) {\n        this.commands = commandString;\n        this.bounds = undefined;\n        return this;\n    }\n\n    /**\n     * Commands get access as command string []\n     * @returns Drawing command array\n     */\n    public getCommands(): string[] | undefined {\n        return this._commands;\n    }\n\n    /**\n     * Copies properties of another object to this instance\n     * @param o - Source object\n     */\n    public parse(o: any): void {\n        super.parse(o);\n        if (o.commands) {\n            const commandString: string = o.commands;\n            this._commands = commandString.split(' ');\n        }\n        if (o.winding) {\n            this.winding = o.winding;\n        }\n        this.bounds = undefined;\n    }\n\n    /**\n     * Serializes persistent properties to new object instance\n     * @returns Serialized element\n     */\n    public serialize(): any {\n        const o = super.serialize();\n        o.size = undefined;\n        o.location = undefined;\n        if (this._commands) {\n            o.commands = this._commands.join(' ');\n        }\n        if (this.winding && this.winding === WindingMode.EvenOdd) {\n            o.winding = this.winding;\n        }\n        return o;\n    }\n\n    /**\n     * Clones this path element to a new instance\n     * @returns Cloned path element\n     */\n    public clone() {\n        const e: PathElement = PathElement.create();\n        super.cloneTo(e);\n        if (this._commands && this._commands.length > 0) {\n            e.commands = this._commands.join(' ');\n        }\n        e.winding = this.winding;\n        return e;\n    }\n\n    /**\n     * Render path element to canvas context\n     * @param c - Rendering context\n     */\n    public draw(c: CanvasRenderingContext2D): void {\n        const model = this.model;\n        if (!model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        if (!this._commands) {\n            throw new Error(ErrorMessages.NoCommandsAreDefined);\n        }\n        const bounds = this.getBounds();\n        if (!bounds) {\n            throw new Error(ErrorMessages.BoundsAreUndefined);\n        }\n        c.save();\n        if (this.transform) {\n            model.setRenderTransform(c, this.transform, bounds.location);\n        }\n        c.beginPath();\n        for (const command of this._commands) {\n            if (command.charAt(0) === 'm') {\n                const point = Point.parse(command.substring(1, command.length));\n                c.moveTo(point.x, point.y);\n            }\n            else if (command.charAt(0) === 'l') {\n                const point = Point.parse(command.substring(1, command.length));\n                c.lineTo(point.x, point.y);\n            }\n            else if (command.charAt(0) === 'c') {\n                const parts = command.substring(1, command.length).split(',');\n                c.bezierCurveTo(\n                    parseFloat(parts[0]),\n                    parseFloat(parts[1]),\n                    parseFloat(parts[2]),\n                    parseFloat(parts[3]),\n                    parseFloat(parts[4]),\n                    parseFloat(parts[5])\n                );\n            }\n            else if (command.charAt(0) === 'z') {\n                c.closePath();\n            }\n        }\n        if (FillFactory.setElementFill(c, this)) {\n            const loc = bounds.location;\n            if (this.fillOffsetX || this.fillOffsetY) {\n                const fillOffsetX = this.fillOffsetX || 0;\n                const fillOffsetY = this.fillOffsetY || 0;\n                c.translate(loc.x + fillOffsetX, loc.y + fillOffsetY);\n                if (this._winding && this._winding === WindingMode.EvenOdd) {\n                    c.fill('evenodd');\n                }\n                else {\n                    c.fill('nonzero');\n                }\n                c.translate(-(loc.x + fillOffsetX), -(loc.y + fillOffsetY));\n            }\n            else {\n                c.translate(loc.x, loc.y);\n                if (this._winding && this._winding === WindingMode.EvenOdd) {\n                    c.fill('evenodd');\n                }\n                else {\n                    c.fill('nonzero');\n                }\n                c.translate(-loc.x, -loc.y);\n            }\n        }\n        if (model.setElementStroke(c, this)) {\n            c.stroke();\n        }\n        c.restore();\n    }\n\n    /**\n     * Hit test path element.  Return true if point is within path element interior\n     * @param c - Rendering context\n     * @param tx - X coordinate of point\n     * @param ty - Y coordinate of point\n     * @returns True if point is within path element interior\n     */\n    public hitTest(c: CanvasRenderingContext2D, tx: number, ty: number): boolean {\n        const model = this.model;\n        if (!model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        if (!this._commands) {\n            return false;\n        }\n        const bounds = this.getBounds();\n        if (!bounds) {\n            throw new Error(ErrorMessages.BoundsAreUndefined);\n        }\n        c.save();\n        if (this.transform) {\n            model.setRenderTransform(c, this.transform, bounds.location);\n        }\n        c.beginPath();\n        for (const command of this._commands) {\n            if (command.charAt(0) === 'm') {\n                const point = Point.parse(command.substring(1, command.length));\n                c.moveTo(point.x, point.y);\n            }\n            else if (command.charAt(0) === 'l') {\n                const point = Point.parse(command.substring(1, command.length));\n                c.lineTo(point.x, point.y);\n            }\n            else if (command.charAt(0) === 'c') {\n                const parts = command.substring(1, command.length).split(',');\n                c.bezierCurveTo(\n                    parseFloat(parts[0]),\n                    parseFloat(parts[1]),\n                    parseFloat(parts[2]),\n                    parseFloat(parts[3]),\n                    parseFloat(parts[4]),\n                    parseFloat(parts[5])\n                );\n            }\n            else if (command.charAt(0) === 'z') {\n                c.closePath();\n            }\n        }\n        let hit: boolean;\n        if (this._winding && this._winding === WindingMode.EvenOdd) {\n            hit = c.isPointInPath(tx, ty, 'evenodd');\n        }\n        else {\n            hit = c.isPointInPath(tx, ty, 'nonzero');\n        }\n        c.restore();\n        return hit;\n    }\n\n    /**\n     * Returns string description of path element\n     * @returns Description\n     */\n    public toString(): string {\n        if (this._commands) {\n            return this.type + ' -  ' + this._commands.length + ' Commands';\n        }\n        else {\n            return this.type + ' -  0 Commands';\n        }\n    }\n\n    /**\n     * Can element be stroked\n     * @returns Can stroke\n     */\n    public canStroke(): boolean {\n        return true;\n    }\n\n    /**\n     * Can element be filled\n     * @returns Can fill\n     */\n    public canFill(): boolean {\n        return true;\n    }\n\n    /**\n     * Path elements can be moved using mouse\n     * @returns True\n     */\n    public canMove(): boolean {\n        return true;\n    }\n\n    /**\n     * Path elements can be sized unless in point editing mode\n     * @returns True unless in point editing mode\n     */\n    public canResize(): boolean {\n        if (this.editPoints) {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * Path elements can be nudged with the keyboard\n     * @returns True\n     */\n    public canNudge(): boolean {\n        return true;\n    }\n\n    /**\n     * Path elements support individual point movement when in point editing mode\n     * @returns True if in point editing mode\n     */\n    public canMovePoint(): boolean {\n        if (this.editPoints) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Path elements support point editing mode\n     * @returns True\n     */\n    public canEditPoints(): boolean {\n        return true;\n    }\n\n    /**\n     * Nudges size of path element by a given width and height offset\n     * @param offsetX - Width adjustment\n     * @param offsetY - Height adjustment\n     * @returns This path element\n     */\n    public nudgeSize(offsetX: number, offsetY: number) {\n        if (!this._commands) {\n            return this;\n        }\n        const b = this.getBounds();\n        if (!b) {\n            throw new Error(ErrorMessages.BoundsAreUndefined);\n        }\n        let newWidth = b.width + offsetX;\n        if (newWidth < 1) {\n            newWidth = 1;\n        }\n        let newHeight = b.height + offsetY;\n        if (newHeight < 1) {\n            newHeight = 1;\n        }\n        if (this.aspectLocked) {\n            if (offsetX === 0) {\n                this.scale(newHeight / b.height, newHeight / b.height);\n            }\n            else {\n                this.scale(newWidth / b.width, newWidth / b.width);\n            }\n        }\n        else {\n            this.scale(newWidth / b.width, newHeight / b.height);\n        }\n        this.bounds = undefined;\n        return this;\n    }\n\n    /**\n     * Scales path element command points by given horizontal and vertical scaling factors\n     * @param scaleX - Horizontal scaling factor\n     * @param scaleY - Vertical scaling factor\n     * @returns This path element\n     */\n    public scale(scaleX: number, scaleY: number) {\n        if (!this._commands) {\n            return this;\n        }\n        const location = this.getLocation();\n        if (!location) {\n            throw new Error(ErrorMessages.LocationUndefined);\n        }\n        const newCommands: string[] = [];\n        for (const command of this._commands) {\n            if (command.charAt(0) === 'm') {\n                newCommands.push(\n                    'm' +\n                        Point.scale(\n                            Point.parse(command.substring(1, command.length)),\n                            scaleX,\n                            scaleY,\n                            location.x,\n                            location.y\n                        ).toString()\n                );\n            }\n            else if (command.charAt(0) === 'l') {\n                newCommands.push(\n                    'l' +\n                        Point.scale(\n                            Point.parse(command.substring(1, command.length)),\n                            scaleX,\n                            scaleY,\n                            location.x,\n                            location.y\n                        ).toString()\n                );\n            }\n            else if (command.charAt(0) === 'c') {\n                const parts = command.substring(1, command.length).split(',');\n                const cp1 = Point.scale(\n                    new Point(parseFloat(parts[0]), parseFloat(parts[1])),\n                    scaleX,\n                    scaleY,\n                    location.x,\n                    location.y\n                );\n                const cp2 = Point.scale(\n                    new Point(parseFloat(parts[2]), parseFloat(parts[3])),\n                    scaleX,\n                    scaleY,\n                    location.x,\n                    location.y\n                );\n                const endPoint = Point.scale(\n                    new Point(parseFloat(parts[4]), parseFloat(parts[5])),\n                    scaleX,\n                    scaleY,\n                    location.x,\n                    location.y\n                );\n                newCommands.push('c' + cp1.toString() + ',' + cp2.toString() + ',' + endPoint.toString());\n            }\n        }\n        this._commands = newCommands;\n        this.bounds = undefined;\n        return this;\n    }\n\n    /**\n     * Moves this path element by the given X and Y offsets\n     * @param offsetX - X size offset\n     * @param offsetY - Y size offset\n     * @returns This path element\n     */\n    public translate(offsetX: number, offsetY: number) {\n        if (!this._commands) {\n            return this;\n        }\n        const newCommands: string[] = [];\n        for (const command of this._commands) {\n            if (command.charAt(0) === 'm') {\n                newCommands.push(\n                    'm' +\n                        Point.translate(Point.parse(command.substring(1, command.length)), offsetX, offsetY).toString()\n                );\n            }\n            else if (command.charAt(0) === 'l') {\n                newCommands.push(\n                    'l' +\n                        Point.translate(Point.parse(command.substring(1, command.length)), offsetX, offsetY).toString()\n                );\n            }\n            else if (command.charAt(0) === 'c') {\n                const parts = command.substring(1, command.length).split(',');\n                const cp1 = Point.translate(new Point(parseFloat(parts[0]), parseFloat(parts[1])), offsetX, offsetY);\n                const cp2 = Point.translate(new Point(parseFloat(parts[2]), parseFloat(parts[3])), offsetX, offsetY);\n                const endPoint = Point.translate(\n                    new Point(parseFloat(parts[4]), parseFloat(parts[5])),\n                    offsetX,\n                    offsetY\n                );\n                newCommands.push('c' + cp1.toString() + ',' + cp2.toString() + ',' + endPoint.toString());\n            }\n        }\n        this._commands = newCommands;\n        this.bounds = undefined;\n        return this;\n    }\n\n    /**\n     * Computes (if undefined) and returns rectangular bounding region\n     * @returns Path element bounding region\n     */\n    public getBounds(): Region | undefined {\n        if (this.bounds) {\n            return this.bounds;\n        }\n        if (!this._commands) {\n            return undefined;\n        }\n        let minX: number | undefined;\n        let minY: number | undefined;\n        let maxX: number | undefined;\n        let maxY: number | undefined;\n        for (const command of this._commands) {\n            let p: Point | undefined;\n            if (command.charAt(0) === 'm') {\n                p = Point.parse(command.substring(1, command.length));\n            }\n            else if (command.charAt(0) === 'l') {\n                p = Point.parse(command.substring(1, command.length));\n            }\n            else if (command.charAt(0) === 'c') {\n                const parts = command.substring(1, command.length).split(',');\n                p = new Point(parseFloat(parts[4]), parseFloat(parts[5]));\n            }\n            if (p) {\n                if (!minX) {\n                    minX = p.x;\n                }\n                else if (p.x < minX) {\n                    minX = p.x;\n                }\n                if (!minY) {\n                    minY = p.y;\n                }\n                else if (p.y < minY) {\n                    minY = p.y;\n                }\n                if (!maxX) {\n                    maxX = p.x;\n                }\n                else if (p.x > maxX) {\n                    maxX = p.x;\n                }\n                if (!maxY) {\n                    maxY = p.y;\n                }\n                else if (p.y > maxY) {\n                    maxY = p.y;\n                }\n            }\n        }\n        if (minX !== undefined && minY !== undefined && maxX !== undefined && maxY !== undefined) {\n            this.bounds = new Region(minX, minY, maxX - minX, maxY - minY);\n            this._location = new Point(minX, minY);\n            this._size = new Size(this.bounds.width, this.bounds.height);\n            return this.bounds;\n        }\n        return undefined;\n    }\n\n    /**\n     * Moves path element\n     * @param pointSource - New location\n     * @returns This path element\n     */\n    public setLocation(pointSource: string | Point) {\n        if (!this._commands) {\n            return this;\n        }\n        const b = this.getBounds();\n        if (!b) {\n            throw new Error(ErrorMessages.BoundsAreUndefined);\n        }\n        let pt: Point;\n        if (typeof pointSource === 'string') {\n            pt = Point.parse(pointSource);\n        }\n        else {\n            pt = new Point(pointSource.x, pointSource.y);\n        }\n        const deltaX = pt.x - b.x;\n        const deltaY = pt.y - b.y;\n        this.translate(deltaX, deltaY);\n        return this;\n    }\n\n    /**\n     * Resizes path element\n     * @param size - New size\n     * @returns This path element\n     */\n    public setSize(sizeSource: Size | string) {\n        const size = Size.parse(sizeSource);\n        const b = this.getBounds();\n        if (!b) {\n            throw new Error(ErrorMessages.BoundsAreUndefined);\n        }\n        const scaleX = size.width / b.width;\n        const scaleY = size.height / b.height;\n        this.scale(scaleX, scaleY);\n        return this;\n    }\n\n    /**\n     * Returns number of points in path element\n     * @returns Number of points\n     */\n    public pointCount(): number {\n        let pointCount = 0;\n        if (this._commands) {\n            for (const command of this._commands) {\n                if (command.charAt(0) === 'm') {\n                    pointCount++;\n                }\n                else if (command.charAt(0) === 'l') {\n                    pointCount++;\n                }\n                else if (command.charAt(0) === 'c') {\n                    pointCount += 3;\n                }\n            }\n        }\n        return pointCount;\n    }\n\n    /**\n     * Returns point at a given index (0 to # points - 1)\n     * @param index - Point index (0 to # points - 1)\n     * @param depth - Point depth\n     * @returns Requested point\n     */\n    public getPointAt(index: number, depth?: PointDepth): Point {\n        let current = -1;\n        if (!this._commands) {\n            throw new InvalidIndexException(index);\n        }\n        for (const command of this._commands) {\n            if (command.charAt(0) === 'm') {\n                current++;\n                if (current === index) {\n                    return Point.parse(command.substring(1, command.length));\n                }\n            }\n            else if (command.charAt(0) === 'l') {\n                current++;\n                if (current === index) {\n                    return Point.parse(command.substring(1, command.length));\n                }\n            }\n            else if (command.charAt(0) === 'c') {\n                const parts = command.substring(1, command.length).split(',');\n                const cp1 = new Point(parseFloat(parts[0]), parseFloat(parts[1]));\n                const cp2 = new Point(parseFloat(parts[2]), parseFloat(parts[3]));\n                const endPoint = new Point(parseFloat(parts[4]), parseFloat(parts[5]));\n                current++;\n                if (current === index) {\n                    return endPoint;\n                }\n                if (depth === PointDepth.Full) {\n                    current++;\n                    if (current === index) {\n                        return cp1;\n                    }\n                    current++;\n                    if (current === index) {\n                        return cp2;\n                    }\n                }\n            }\n        }\n        throw new InvalidIndexException(index);\n    }\n\n    /**\n     * Sets point at a given index (0 to # points - 1)\n     * @param index - Point index (0 to # points - 1)\n     * @param value - New point value\n     * @param depth - Not applicable to this element\n     */\n    public setPointAt(index: number, value: Point, depth: PointDepth) {\n        let current = -1;\n        if (!this._commands) {\n            throw new Error(ErrorMessages.NoCommandsAreDefined);\n        }\n        const cl = this._commands.length;\n        for (let i = 0; i < cl; i++) {\n            const command = this._commands[i];\n            if (command.charAt(0) === 'm') {\n                current++;\n                if (current === index) {\n                    this._commands[i] = 'm' + value.toString();\n                    this.bounds = undefined;\n                    return this;\n                }\n            }\n            else if (command.charAt(0) === 'l') {\n                current++;\n                if (current === index) {\n                    this._commands[i] = 'l' + value.toString();\n                    this.bounds = undefined;\n                    return this;\n                }\n            }\n            else if (command.charAt(0) === 'c') {\n                const parts = command.substring(1, command.length).split(',');\n                let cp1 = new Point(parseFloat(parts[0]), parseFloat(parts[1]));\n                let cp2 = new Point(parseFloat(parts[2]), parseFloat(parts[3]));\n                let endPoint = new Point(parseFloat(parts[4]), parseFloat(parts[5]));\n                current++;\n                if (current === index) {\n                    endPoint = value;\n                    this._commands[i] = 'c' + cp1.toString() + ',' + cp2.toString() + ',' + endPoint.toString();\n                    this.bounds = undefined;\n                    return this;\n                }\n                if (depth === PointDepth.Full) {\n                    current++;\n                    if (current === index) {\n                        cp1 = value;\n                        this._commands[i] = 'c' + cp1.toString() + ',' + cp2.toString() + ',' + endPoint.toString();\n                        this.bounds = undefined;\n                        return this;\n                    }\n                    current++;\n                    if (current === index) {\n                        cp2 = value;\n                        this._commands[i] = 'c' + cp1.toString() + ',' + cp2.toString() + ',' + endPoint.toString();\n                        this.bounds = undefined;\n                        return this;\n                    }\n                }\n            }\n        }\n        throw new InvalidIndexException(index);\n    }\n\n    /**\n     * Adds a new command to this path element\n     * @param command - New drawing command\n     * @returns This path element\n     */\n    public add(command: string) {\n        if (!this._commands) {\n            this._commands = [];\n        }\n        this._commands.push(command);\n        this.bounds = undefined;\n        return this;\n    }\n\n    /**\n     * Winding mode get accessor\n     * @returns Fill winding mode\n     */\n    get winding(): WindingMode | undefined {\n        return this._winding;\n    }\n\n    /**\n     * Winding mode set accessor\n     * @param newValue - New fill winding mode\n     */\n    set winding(newValue: WindingMode | undefined) {\n        this._winding = newValue;\n    }\n\n    /**\n     * Sets fill winding mode\n     * @param winding - Fill winding mode\n     * @returns This path element\n     */\n    public setWinding(winding: WindingMode) {\n        this._winding = winding;\n        return this;\n    }\n}\n","/**\n * Represents the transition state of a sprite element\n */\nexport class SpriteState {\n    /**\n     * Visual transition in effect\n     */\n    public transition: string | undefined;\n\n    /**\n     * Offset into transition in the range of 0-1\n     */\n    public offset: number;\n\n    /**\n     * Source frame index\n     */\n    public frame1: number;\n\n    /**\n     * Target frame index\n     */\n    public frame2: number;\n\n    /**\n     * @param transition - Visual transition\n     * @param offset - Offset into transition in the range of 0-1\n     * @param frame1 - Source frame index\n     * @param frame2 - Target frame index\n     */\n    constructor(transition: string | undefined, offset: number, frame1: number, frame2: number) {\n        this.transition = transition;\n        this.offset = offset;\n        this.frame1 = frame1;\n        this.frame2 = frame2;\n    }\n}\n","import { IResourceCreator } from './resource-creator';\r\n\r\n/**\r\n * Resource creator registration\r\n */\r\nexport class ResourceCreatorRegistration {\r\n    /**\r\n     * @param name - Resource type name\r\n     * @param creator - Resource creation function\r\n     */\r\n    constructor(public name: string, public creator: IResourceCreator) {\r\n        this.name = name;\r\n        this.creator = creator;\r\n    }\r\n}\r\n","import { ErrorMessages } from '../core/error-messages';\r\nimport { Model } from '../core/model';\r\nimport { Resource } from './resource';\r\nimport { ResourceLoaderState } from './resource-loader-state';\r\nimport { ResourceManagerEvent } from './resource-manager-event';\r\nimport { ResourceState } from './resource-state';\r\n\r\n/**\r\n * Manages model resource loading and resolution\r\n */\r\nexport class ResourceManager {\r\n    /**\r\n     * Local resource path for model level resources\r\n     */\r\n    public localResourcePath?: string;\r\n\r\n    /**\r\n     * Current locale ID to use for localized resource lookups\r\n     */\r\n    public currentLocaleId?: string;\r\n\r\n    /**\r\n     * Array of resources not yet downloaded\r\n     */\r\n    public pendingResources?: Resource[] = [];\r\n\r\n    /**\r\n     * Number of resources not yet downloaded\r\n     */\r\n    public pendingResourceCount: number;\r\n\r\n    /**\r\n     * Total number of resources\r\n     */\r\n    public totalResourceCount: number;\r\n\r\n    /**\r\n     * Number of loaded resources\r\n     */\r\n    public numberLoaded: number;\r\n\r\n    /**\r\n     * Registered manager event listeners\r\n     */\r\n    public listenerEvent: ResourceManagerEvent<ResourceState> = new ResourceManagerEvent<ResourceState>();\r\n\r\n    /**\r\n     * Load completion callback - Multi event listener\r\n     */\r\n    public loadCompleted: ResourceManagerEvent<boolean> = new ResourceManagerEvent<boolean>();\r\n\r\n    /**\r\n     * Load completion callback - Final callback\r\n     */\r\n    public completionCallback?: (result: boolean) => void;\r\n\r\n    /**\r\n     * Resource loading failed flag\r\n     */\r\n    public resourceFailed: boolean = false;\r\n\r\n    /**\r\n     * Reference to model containing resources to manage\r\n     */\r\n    public model?: Model;\r\n\r\n    /**\r\n     * @param model - Model with resources to manage\r\n     */\r\n    constructor(model: Model) {\r\n        this.add = this.add.bind(this);\r\n        this.merge = this.merge.bind(this);\r\n        this.findBestResource = this.findBestResource.bind(this);\r\n        this.get = this.get.bind(this);\r\n        this.register = this.register.bind(this);\r\n        this.unregister = this.unregister.bind(this);\r\n        this.oncomplete = this.oncomplete.bind(this);\r\n        this.load = this.load.bind(this);\r\n        this.loadNext = this.loadNext.bind(this);\r\n\r\n        this.pendingResourceCount = 0;\r\n        this.totalResourceCount = 0;\r\n        this.numberLoaded = 0;\r\n        this.model = model;\r\n    }\r\n\r\n    /**\r\n     * Adds a resource to managed resources\r\n     * @param res - Resource to add\r\n     */\r\n    public add(res: Resource) {\r\n        res.resourceManager = this;\r\n        if (this.model) {\r\n            this.model.resources.push(res);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Merges (adds or updates) a managed resource\r\n     * @param res - Resource to merge\r\n     */\r\n    public merge(res: Resource) {\r\n        let replaced: Resource | undefined;\r\n        if (!this.model) {\r\n            throw new Error(ErrorMessages.ModelPathUndefined);\r\n        }\r\n        if (res.locale) {\r\n            this.model.resources.forEach(existing => {\r\n                if (existing.key === res.key) {\r\n                    if (existing.locale && existing.locale === res.locale) {\r\n                        replaced = existing;\r\n                        replaced.uri = res.uri;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.model.resources.forEach(existing => {\r\n                if (existing.key === res.key) {\r\n                    if (!existing.locale) {\r\n                        replaced = existing;\r\n                        replaced.uri = res.uri;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if (!replaced) {\r\n            res.resourceManager = this;\r\n            this.model.resources.push(res);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns to closest matching localized resource for a\r\n     * given key using fallback rules\r\n     * @param key - Resource key\r\n     * @param locale - Desired resource locale (e.g. en-US)\r\n     * @returns Best available resource\r\n     */\r\n    public findBestResource(key: string, locale: string | undefined): Resource | undefined {\r\n        let language: string | undefined;\r\n        if (!this.model) {\r\n            throw new Error(ErrorMessages.ModelUndefined);\r\n        }\r\n\r\n        // Try to find exact locale match if locale was specified\r\n        if (locale && locale.length > 0) {\r\n            for (const compare of this.model.resources) {\r\n                if (compare.matchesFull(key, locale)) {\r\n                    return compare;\r\n                }\r\n            }\r\n        }\r\n\r\n        // If locale was specified\r\n        if (locale && locale.length > 0) {\r\n            // Return generic locale match if available\r\n            if (locale.indexOf('-') !== -1) {\r\n                language = locale.substring(0, locale.indexOf('-'));\r\n                for (const compare of this.model.resources) {\r\n                    if (compare.matchesFull(key, language)) {\r\n                        return compare;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Return other language variant if available\r\n            if (locale.indexOf('-') !== -1) {\r\n                language = locale.substring(0, locale.indexOf('-'));\r\n                for (const compare of this.model.resources) {\r\n                    if (compare.matchesLanguage(key, language)) {\r\n                        return compare;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // If generic locale requested, return any matching specific locale\r\n            if (locale.indexOf('-') === -1 && language) {\r\n                for (const compare of this.model.resources) {\r\n                    if (compare.matchesLanguage(key, language)) {\r\n                        return compare;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Return unspecified locale id if available\r\n        for (const compare of this.model.resources) {\r\n            if (compare.matchesGeneric(key)) {\r\n                return compare;\r\n            }\r\n        }\r\n\r\n        // Return anything matching key\r\n        for (const compare of this.model.resources) {\r\n            if (compare.matchesKey(key)) {\r\n                return compare;\r\n            }\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Returns to closest matching localized resource for a\r\n     * given key using fallback rules\r\n     * @param key - Resource key\r\n     * @param localeID - Desired resource locale (e.g. en-US)\r\n     * @returns Best available resource\r\n     */\r\n    public get(key: string, localeId?: string): Resource | undefined {\r\n        let locale: string | undefined;\r\n        if (!localeId) {\r\n            locale = this.currentLocaleId;\r\n        }\r\n        else {\r\n            locale = localeId;\r\n        }\r\n        return this.findBestResource(key, locale);\r\n    }\r\n\r\n    /**\r\n     * Registers best available resource for download\r\n     * @param key - Resource key\r\n     */\r\n    public register(key: string): void {\r\n        const res = this.get(key, this.currentLocaleId);\r\n        if (res) {\r\n            if (!res.resourceManager) {\r\n                res.resourceManager = this;\r\n            }\r\n            if (res.type === 'text' && !res.uri) {\r\n                return;\r\n            }\r\n            if (!res.registered) {\r\n                res.registered = true;\r\n                if (!this.pendingResources) {\r\n                    this.pendingResources = [];\r\n                }\r\n                this.pendingResources.push(res);\r\n                this.pendingResourceCount++;\r\n                this.totalResourceCount++;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Unregisters a downloaded resource\r\n     * @param res - Resource downloaded\r\n     * @param success - True if resource downloaded successfully\r\n     */\r\n    public unregister(res: Resource, success: boolean): void {\r\n        // Remove resource from registered resources\r\n        let state: ResourceState;\r\n        if (!this.pendingResources) {\r\n            return;\r\n        }\r\n        const pl = this.pendingResources.length;\r\n        for (let i = 0; i < pl; i++) {\r\n            if (this.pendingResources[i] === res) {\r\n                this.pendingResources.splice(i, 1);\r\n                res.registered = false;\r\n                this.pendingResourceCount--;\r\n                if (success) {\r\n                    res.available = true;\r\n                    this.numberLoaded++;\r\n                }\r\n                else {\r\n                    res.error = true;\r\n                    this.resourceFailed = true;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        // Notify any event listeners\r\n        if (this.listenerEvent.hasListeners()) {\r\n            if (success) {\r\n                state = new ResourceState(\r\n                    this.numberLoaded,\r\n                    this.totalResourceCount,\r\n                    ResourceLoaderState.ResourceComplete,\r\n                    res.uri || res.key || ''\r\n                );\r\n                this.listenerEvent.trigger(this, state);\r\n            }\r\n            else {\r\n                state = new ResourceState(\r\n                    this.numberLoaded,\r\n                    this.totalResourceCount,\r\n                    ResourceLoaderState.ResourceFailed,\r\n                    res.uri || res.key || ''\r\n                );\r\n                this.listenerEvent.trigger(this, state);\r\n            }\r\n        }\r\n\r\n        // If all done, call oncomplete\r\n        if (this.pendingResourceCount === 0) {\r\n            this.oncomplete(this.resourceFailed ? false : true);\r\n            return;\r\n        }\r\n\r\n        // Load next resource if not done\r\n        this.loadNext();\r\n    }\r\n\r\n    /**\r\n     * Notify listeners and completion callbacks\r\n     * @param success - Success or failure indication\r\n     */\r\n    public oncomplete(success: boolean): void {\r\n        let state: ResourceState;\r\n        if (success) {\r\n            state = new ResourceState(\r\n                this.numberLoaded,\r\n                this.totalResourceCount,\r\n                ResourceLoaderState.Idle,\r\n                'All Resources Loaded.'\r\n            );\r\n        }\r\n        else {\r\n            state = new ResourceState(\r\n                this.numberLoaded,\r\n                this.totalResourceCount,\r\n                ResourceLoaderState.Idle,\r\n                'One or More Resources Failed To Load.'\r\n            );\r\n        }\r\n        this.listenerEvent.trigger(this, state);\r\n        this.loadCompleted.trigger(this, success);\r\n        if (this.completionCallback) {\r\n            this.completionCallback(success);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Loads all resource registered for download\r\n     * @param callback - Success or failure completion callback (result: boolean)\r\n     */\r\n    public load(callback?: (result: boolean) => void): void {\r\n        const rm = this;\r\n        rm.resourceFailed = false;\r\n        rm.completionCallback = callback;\r\n        if (rm.pendingResourceCount === 0) {\r\n            rm.oncomplete(true);\r\n            return;\r\n        }\r\n        if (this.listenerEvent.hasListeners()) {\r\n            const state = new ResourceState(\r\n                rm.numberLoaded,\r\n                rm.totalResourceCount,\r\n                ResourceLoaderState.Loading,\r\n                'Starting Resource Load'\r\n            );\r\n            this.listenerEvent.trigger(this, state);\r\n        }\r\n        rm.loadNext();\r\n    }\r\n\r\n    /**\r\n     * Request next registered resource\r\n     */\r\n    public loadNext(): void {\r\n        let state: ResourceState;\r\n        const self = this;\r\n        if (!self.pendingResources) {\r\n            this.oncomplete(this.resourceFailed ? false : true);\r\n            return;\r\n        }\r\n        if (self.pendingResourceCount === 0) {\r\n            this.oncomplete(this.resourceFailed ? false : true);\r\n            return;\r\n        }\r\n\r\n        // Get remaining pending resources\r\n        const toLoad: Resource[] = [];\r\n        self.pendingResourceCount = 0;\r\n        for (const pendingResource of self.pendingResources) {\r\n            if (!pendingResource.available) {\r\n                toLoad.push(pendingResource);\r\n                self.pendingResourceCount++;\r\n            }\r\n        }\r\n\r\n        // If no pending resource, notify completion\r\n        if (self.pendingResourceCount === 0) {\r\n            self.oncomplete(true);\r\n            return;\r\n        }\r\n\r\n        // Get next resource to load\r\n        const resourceToLoad = toLoad[0];\r\n\r\n        // Notify listeners of request\r\n        if (self.listenerEvent.hasListeners()) {\r\n            state = new ResourceState(\r\n                self.numberLoaded,\r\n                self.totalResourceCount,\r\n                ResourceLoaderState.ResourceStart,\r\n                resourceToLoad.uri || resourceToLoad.key || ''\r\n            );\r\n            self.listenerEvent.trigger(self, state);\r\n        }\r\n\r\n        // Initialize resource\r\n        resourceToLoad.initialize();\r\n    }\r\n}\r\n","/**\n * Describes resource loading state\n */\nexport enum ResourceLoaderState {\n    /**\n     * Loader is idle\n     */\n    Idle = 1,\n\n    /**\n     * Resource loading in progress\n     */\n    Loading = 2,\n\n    /**\n     * Start loading resource\n     */\n    ResourceStart = 3,\n\n    /**\n     * Resource load completed successfully\n     */\n\n    ResourceComplete = 4,\n\n    /**\n     * Resource load failed\n     */\n    ResourceFailed = 5\n}\n","import { ResourceLoaderState } from './resource-loader-state';\r\n\r\n/**\r\n * Indicates state of loaded resources\r\n */\r\nexport class ResourceState {\r\n    /**\r\n     * @param numberLoaded - Number of resources loaded\r\n     * @param totalResources - Total number of resource to load\r\n     * @param code - Resource loader state enumeration\r\n     * @param status - Status string\r\n     */\r\n    constructor(\r\n        public numberLoaded: number,\r\n        public totalResources: number,\r\n        public code: ResourceLoaderState,\r\n        public status: string\r\n    ) {\r\n        this.toString = this.toString.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Describes resource state as string\r\n     * @returns Description\r\n     */\r\n    public toString(): string {\r\n        return '[' + this.numberLoaded + '/' + this.totalResources + '] ' + this.code + '-' + this.status;\r\n    }\r\n}\r\n","import { Model } from './model';\n\n/**\n * Generic, multicast model related event dispatcher\n */\nexport class ModelEvent<T> {\n    private listeners: Array<(model: Model, data?: T) => void> = [];\n\n    constructor() {\n        this.add = this.add.bind(this);\n        this.remove = this.remove.bind(this);\n        this.clear = this.clear.bind(this);\n        this.trigger = this.trigger.bind(this);\n    }\n\n    /**\n     * Add a listener\n     * @param listener - Listener function (c: Model, data?: T)\n     */\n    public add(listener: (c: Model, data?: T) => void) {\n        this.listeners.push(listener);\n    }\n\n    /**\n     * Removes a listener\n     * @param listener - Listener function (c: Model, data?: T)\n     */\n    public remove(listener: (c: Model, data?: T) => void) {\n        const index = this.listeners.indexOf(listener);\n        if (index !== -1) {\n            this.listeners.splice(index, 1);\n        }\n    }\n\n    /**\n     * Clears listeners\n     */\n    public clear() {\n        this.listeners = [];\n    }\n\n    /**\n     * Trigger event\n     *  @param model - Event model\n     *  @param Event data\n     */\n    public trigger(model: Model, data?: T) {\n        this.listeners.slice(0).forEach(h => h(model, data));\n    }\n}\n","import { IMouseEvent } from './mouse-event';\nimport { MouseEventArgs } from './mouse-event-args';\nimport { Point } from './point';\n\n/**\n * Represents a mouse location in event handlers\n */\nexport class MouseLocationArgs extends MouseEventArgs {\n    /**\n     * Location\n     */\n    public location: Point;\n\n    /**\n     * @param event - Mouse event or simulated event args\n     * @param location - Location\n     */\n    constructor(event: MouseEvent | IMouseEvent, location: Point) {\n        super(event);\n        this.location = location;\n    }\n}\n","/**\n * Represents the raw source point at which a DOM event occurred\n */\nexport class MousePositionInfo {\n    /**\n     * @param clientX - Raw x coordinate\n     * @param clientY - Raw y coordinate\n     */\n    constructor(public clientX: number, public clientY: number) {}\n}\n","import { Size } from './size';\n\n/**\n * Represents a size in event handlers\n */\nexport class SizeArgs {\n    /**\n     * Size property\n     */\n    public size: Size;\n\n    /**\n     * Describes a size\n     * @param size - Size\n     */\n    constructor(size: Size) {\n        this.size = size;\n    }\n}\n","/**\n * Encapsulates the callback parameters for timer methods\n */\nexport class TimerParameters {\n    /**\n     * Timer total elapsed time in seconds\n     */\n    public elapsedTime: number;\n\n    /**\n     * Time since last event in seconds\n     */\n    public tickDelta: number;\n\n    /**\n     * @param elapsedTime - Total elapsed time in seconds\n     * @param tickDelta - Time since last callback event in seconds\n     */\n    constructor(elapsedTime: number, tickDelta: number) {\n        this.elapsedTime = elapsedTime;\n        this.tickDelta = tickDelta;\n    }\n}\n","import { LocationArgs } from './location-args';\nimport { Point } from './point';\n\n/**\n * Describes a view drag event\n */\nexport class ViewDragArgs extends LocationArgs {\n    /**\n     * Drag Event\n     */\n    public event?: DragEvent;\n\n    /**\n     * @param event - Mouse drag event\n     * @param location - Location\n     */\n    constructor(event?: DragEvent, location?: Point) {\n        super(location);\n        this.event = event;\n    }\n}\n","import { Model } from '../core/model';\n\n/**\n * Encapsulates properties for element creation\n */\nexport class ElementCreationProps {\n    /**\n     * Model to which element should be added\n     */\n    public model: Model;\n\n    /**\n     * New element ID\n     */\n    public id: string;\n\n    /**\n     * X coordinate\n     */\n    public left: number;\n\n    /**\n     * Y coordinate\n     */\n    public top: number;\n\n    /**\n     * Width\n     */\n    public width: number;\n\n    /**\n     * Height\n     */\n    public height: number;\n\n    /**\n     * Extra element properties\n     */\n    public props: any;\n\n    /**\n     * @param model - Model to which element should be added\n     * @param id - Element id\n     * @param left - X coordinate\n     * @param top - Y coordinate\n     * @param width - Width\n     * @param height - Height\n     * @param props - Extra properties object\n     */\n    constructor(model: Model, id: string, left: number, top: number, width: number, height: number, props: any) {\n        this.model = model;\n        this.id = id;\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.props = props;\n    }\n}\n","import { ElementBase } from './element-base';\n\n/**\n * Describes file upload completion results\n */\nexport class UploadCompletionProps {\n    /**\n     * Element for which upload has finished\n     */\n    public element: ElementBase;\n\n    /**\n     * True if upload completed successfully\n     */\n    public success: boolean;\n\n    /**\n     * @param element - Element associated with upload\n     * @param success - Boolean completion result\n     */\n    constructor(element: ElementBase, success: boolean) {\n        this.element = element;\n        this.success = success;\n    }\n}\n","import { ElementBase } from './element-base';\n\n/**\n * Describes file upload progress\n */\nexport class UploadProgressProps {\n    /**\n     * Element associated with upload\n     */\n    public element: ElementBase;\n\n    /**\n     * Percent of upload completion\n     */\n    public percent: number;\n\n    /**\n     * @param element - Element associated with upload\n     * @param percent - Percent of upload completed\n     */\n    constructor(element: ElementBase, percent: number) {\n        this.element = element;\n        this.percent = percent;\n    }\n}\n","import { Model } from '../../core/model';\nimport { Component } from './component';\nimport { ComponentElement } from './component-element';\nimport { ComponentProps } from './component-props';\n\n/**\n * Central design component registry\n */\nexport class ComponentRegistry {\n    /**\n     * Registered component array\n     */\n    public static components: Component[] = [];\n\n    public static initializeAllCallback?: (success: boolean) => void;\n\n    /**\n     * Registers a component type\n     * @param name - Component type name\n     * @param props - Component template props\n     */\n    public static registerComponent(name: string, props: ComponentProps) {\n        ComponentRegistry.unregisterComponent(name);\n        const component = new Component(name, props);\n        ComponentRegistry.components.push(component);\n    }\n\n    /**\n     * Unregisters a component type\n     * @param name - Component type name\n     */\n    public static unregisterComponent(name: string) {\n        const index = ComponentRegistry.getComponentIndex(name);\n        if (index !== -1) {\n            ComponentRegistry.components.splice(index, 1);\n        }\n    }\n\n    /**\n     * Retrieves index of registered component name or -1 if not found\n     * @param name - Component type name\n     * @returns Component index or -1 if not found\n     */\n    public static getComponentIndex(name: string): number {\n        for (let i = 0; i < ComponentRegistry.components.length; i++) {\n            if (ComponentRegistry.components[i].name === name) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * Retrieves component by type name\n     * @param name - Component type name\n     * @returns Component or undefined if not found\n     */\n    public static getComponent(name: string): Component | undefined {\n        const index = ComponentRegistry.getComponentIndex(name);\n        if (index !== -1) {\n            return ComponentRegistry.components[index];\n        }\n        return undefined;\n    }\n\n    /**\n     * Determines if component type name is registered\n     * @param name - Component type name\n     * @returns True if component type name is registered\n     */\n    public static isComponentRegistered(name: string): boolean {\n        return ComponentRegistry.getComponentIndex(name) !== -1;\n    }\n\n    /**\n     * Creates element of a component type\n     * @param model - Target model for element\n     * @param type - Component type name\n     * @param id - New element ID\n     * @param left - X coordinate\n     * @param top - Y coordinate\n     * @param width - Width\n     * @param height - Height\n     * @param props - Extra element properties\n     */\n    public static createComponentElement(\n        model: Model,\n        type: string,\n        id: string,\n        left: number,\n        top: number,\n        width: number,\n        height: number,\n        props: any\n    ): ComponentElement {\n        const component = ComponentRegistry.getComponent(type);\n        if (!component) {\n            throw new Error(`Component type ${type} not registered.`);\n        }\n        const el = component.CreateElement(model, id, left, top, width, height, props);\n        return el;\n    }\n\n    /**\n     * Calls fill image retrieval function to retrieve fill image\n     * @param type - Component type name\n     * @param callback - Image callback function (image: HTMLImageElement)\n     */\n    public static getComponentFillImage(type: string, callback: (image: HTMLImageElement) => void): void {\n        const component = ComponentRegistry.getComponent(type);\n        if (!component) {\n            throw new Error(`Component type ${type} not registered.`);\n        }\n        component.GetFillImage(callback);\n    }\n\n    public static initializeAll(callback?: (success: boolean) => void) {\n        ComponentRegistry.initializeAllCallback = callback;\n\n        for (const component of ComponentRegistry.components) {\n            if (!component.initialized && component.initialize) {\n                component.initialize(success => {\n                    if (success) {\n                        component.initialized = true;\n                        ComponentRegistry.initializeAll(ComponentRegistry.initializeAllCallback);\n                    }\n                    else {\n                        if (ComponentRegistry.initializeAllCallback) {\n                            ComponentRegistry.initializeAllCallback(false);\n                            ComponentRegistry.initializeAllCallback = undefined;\n                        }\n                    }\n                });\n                return;\n            }\n        }\n\n        if (ComponentRegistry.initializeAllCallback) {\n            ComponentRegistry.initializeAllCallback(true);\n            ComponentRegistry.initializeAllCallback = undefined;\n        }\n    }\n}\n","import { Model } from '../../core/model';\r\nimport { Point } from '../../core/point';\r\nimport { Size } from '../../core/size';\r\nimport { ElementCreationProps } from '../../elements/element-creation-props';\r\nimport { ElementSizeProps } from '../../elements/element-size-props';\r\nimport { RectangleElement } from '../../elements/rectangle-element';\r\nimport { UploadCompletionProps } from '../../elements/upload-completion-props';\r\nimport { UploadProgressProps } from '../../elements/upload-progress-props';\r\nimport { BitmapResource } from '../../resource/bitmap-resource';\r\nimport { ModelResource } from '../../resource/model-resource';\r\nimport { Component } from '../component/component';\r\nimport { ComponentElement } from './component-element';\r\nimport { ImageBasedComponentProps } from './image-based-component-props';\r\nimport { ProgressRectangle } from './progress-rectangle';\r\n/**\r\n * Extends [[ImageBasedComponentProps]] to describe a component supporting uploadable attachments\r\n */\r\nexport class UploadComponentProps extends ImageBasedComponentProps {\r\n    public fileExtensions: string[] = [ '*' ];\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.onCreate = this.onCreate.bind(this);\r\n        this.onSize = this.onSize.bind(this);\r\n        this.onUploadStart = this.onUploadStart.bind(this);\r\n        this.onUploadProgress = this.onUploadProgress.bind(this);\r\n        this.onUploadComplete = this.onUploadComplete.bind(this);\r\n\r\n        this.imageTag = 'upload';\r\n        this.acceptsDrag = true;\r\n\r\n        this.size.add(this.onSize);\r\n        this.uploadStart.add(this.onUploadStart);\r\n        this.uploadProgress.add(this.onUploadProgress);\r\n        this.uploadComplete.add(this.onUploadComplete);\r\n\r\n        this.initialize = this.onInitialize;\r\n        this.create = this.onCreate;\r\n        this.setCreationFill = this.onSetCreationFill;\r\n        this.getFillImage = this.onGetFillImage;\r\n    }\r\n\r\n    /**\r\n     * Handles component element creation\r\n     */\r\n    protected onCreate(props: ElementCreationProps) {\r\n        const m = Model.create(props.width, props.height);\r\n        BitmapResource.create(this.imageTag, Component.baseImagePath + this.imageTag + '.png').addTo(m);\r\n        m.stroke = 'Black';\r\n        // m.fill = '#c0ffffff';\r\n        const rect = RectangleElement.create(0, 0, props.width, props.height)\r\n            .setFill('image(0.75;' + this.imageTag + ')')\r\n            .addTo(m);\r\n        rect.id = 'r';\r\n\r\n        // Upload indicator\r\n        const upframe = RectangleElement.create(0, props.height - 8, props.width, 8)\r\n            .setFill('#00000000')\r\n            .setStroke('#00000000')\r\n            .addTo(m);\r\n        upframe.id = 'upframe';\r\n        const upind = new ProgressRectangle();\r\n        upind\r\n            .setLocation(Point.create(0, props.height - 8))\r\n            .setSize(Size.create(0, 8))\r\n            .setFill('#00000000')\r\n            .setStroke('#00000000')\r\n            .addTo(m);\r\n        upind.id = 'upind';\r\n        upind.percent = 0;\r\n\r\n        ModelResource.create(props.id, m).addTo(props.model);\r\n        const el = new ComponentElement(props.id, props.left, props.top, props.width, props.height);\r\n        props.model.add(el);\r\n        return el;\r\n    }\r\n\r\n    protected onSize(c: Component, props: ElementSizeProps) {\r\n        const el = props.element;\r\n        if (!el.model) {\r\n            throw new Error('Model is undefined.');\r\n        }\r\n        if (!el.id) {\r\n            throw new Error('Element ID is undefined.');\r\n        }\r\n        const size = props.size;\r\n        const res = el.model.resourceManager.get(el.id) as ModelResource;\r\n        if (!res.model) {\r\n            throw new Error('Model is undefined.');\r\n        }\r\n        res.model.setSize(size);\r\n        const r = res.model.elementWithId('r');\r\n        if (r) {\r\n            r.setSize(Size.create(size.width, size.height));\r\n        }\r\n        const upframe = res.model.elementWithId('upframe');\r\n        if (upframe) {\r\n            upframe.setSize(Size.create(size.width, 8));\r\n            upframe.setLocation(Point.create(0, size.height - 8));\r\n        }\r\n        const upind = res.model.elementWithId('upind') as ProgressRectangle;\r\n        upind.setSize(Size.create(size.width * upind.percent, 8));\r\n        upind.setLocation(Point.create(0, size.height - 8));\r\n    }\r\n\r\n    protected onUploadStart(c: Component, el: ComponentElement) {\r\n        if (!el.model) {\r\n            throw new Error('Model is undefined.');\r\n        }\r\n        if (!el.id) {\r\n            throw new Error('Element ID is undefined.');\r\n        }\r\n        const res = el.model.resourceManager.get(el.id) as ModelResource;\r\n        if (!res.model) {\r\n            throw new Error('Model is undefined.');\r\n        }\r\n        const upframe = res.model.elementWithId('upframe');\r\n        if (upframe) {\r\n            upframe.setStroke('Black').setFill('#80000080');\r\n        }\r\n        const upind = res.model.elementWithId('upind') as ProgressRectangle;\r\n        upind.setSize(Size.create(0, 8));\r\n        upind.setFill('#ffff00');\r\n    }\r\n\r\n    protected onUploadComplete(c: Component, props: UploadCompletionProps) {\r\n        const el = props.element;\r\n        if (!el.model) {\r\n            throw new Error('Model is undefined.');\r\n        }\r\n        if (!el.id) {\r\n            throw new Error('Element ID is undefined.');\r\n        }\r\n        const res = el.model.resourceManager.get(el.id) as ModelResource;\r\n        if (!res.model) {\r\n            throw new Error('Model is undefined.');\r\n        }\r\n        const upframe = res.model.elementWithId('upframe');\r\n        if (upframe) {\r\n            upframe.setStroke('#00000000').setFill('#00000000');\r\n        }\r\n        const upind = res.model.elementWithId('upind');\r\n        if (upind) {\r\n            upind.setSize(Size.create(0, 8));\r\n            upind.setFill('#00000000');\r\n        }\r\n    }\r\n\r\n    protected onUploadProgress(c: Component, props: UploadProgressProps) {\r\n        const el = props.element;\r\n        if (!el.model || !el.id) {\r\n            throw new Error('Model is undefined.');\r\n        }\r\n        const res = el.model.resourceManager.get(el.id) as ModelResource;\r\n        if (!res.model) {\r\n            throw new Error('Model is undefined.');\r\n        }\r\n        const upind = res.model.elementWithId('upind') as ProgressRectangle;\r\n        const upframe = res.model.elementWithId('upframe');\r\n        upind.percent = props.percent / 100;\r\n        if (upframe) {\r\n            const frameSize = upframe.getSize();\r\n            if (frameSize) {\r\n                upind.setSize(Size.create(frameSize.width * upind.percent, 8));\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { RectangleElement } from '../../elements/rectangle-element';\r\n/**\r\n * Extends [[RectangleElement]] to describe progress bar progress\r\n */\r\nexport class ProgressRectangle extends RectangleElement {\r\n    public percent: number = 0;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n}\r\n","import { ElementBase } from './element-base';\n\n/**\n * Encapsulates element drag event arguments\n */\nexport class ElementDragArgs {\n    /**\n     * Model element\n     */\n    public element: ElementBase;\n\n    /**\n     * Drag Event\n     */\n    public event?: DragEvent;\n\n    /**\n     * Describes an element drag event\n     * @param element - Model element\n     * @param event - Mouse drag event\n     */\n    constructor(element: ElementBase, event?: DragEvent) {\n        this.element = element;\n        this.event = event;\n    }\n}\n","import { LocationArgs } from '../core/location-args';\nimport { Point } from '../core/point';\nimport { ElementBase } from './element-base';\n\n/**\n * Describes a temporary element location\n */\nexport class ElementLocationArgs extends LocationArgs {\n    /**\n     * Model element\n     */\n    public element: ElementBase;\n\n    /**\n     * Constructs an element location args\n     * @param element - Model element\n     * @param location - Location\n     */\n    constructor(element: ElementBase, location: Point) {\n        super(location);\n        this.element = element;\n    }\n}\n","import { Size } from '../core/size';\nimport { SizeArgs } from '../core/size-args';\nimport { ElementBase } from './element-base';\n\n/**\n * Describes a temporary element size\n */\nexport class ElementSizeArgs extends SizeArgs {\n    /**\n     * Model element\n     */\n    public element: ElementBase;\n\n    /**\n     * Describes an element size\n     * @param element - Model element\n     * @param size - Size\n     */\n    constructor(element: ElementBase, size: Size) {\n        super(size);\n        this.element = element;\n    }\n}\n","import { Size } from '../core/size';\nimport { ElementBase } from './element-base';\n\n/**\n * Encapsulates element sizing event arguments\n */\nexport class ElementSizeProps {\n    /**\n     * Element being sized\n     */\n    public element: ElementBase;\n\n    /**\n     * Element size\n     */\n    public size: Size;\n\n    /**\n     * Constructs an element size props\n     * @param element - Element being sized\n     * @param size - New element size\n     */\n    constructor(element: ElementBase, size: Size) {\n        this.element = element;\n        this.size = size;\n    }\n}\n","import { Point } from '../core/point';\nimport { ElementBase } from './element-base';\n\n/**\n * Represents the tentative location of an element during a move operation\n */\nexport class MoveLocation {\n    /**\n     * Element being moved\n     */\n    public element: ElementBase;\n\n    /**\n     * Tentative location of element\n     */\n    public location: Point;\n\n    /**\n     * @param element - Element being sized\n     * @param location - Tentative location of element\n     */\n    constructor(element: ElementBase, location: Point) {\n        this.element = element;\n        this.location = location;\n    }\n}\n","import { Size } from '../core/size';\nimport { ElementBase } from './element-base';\n\n/**\n * Represents the tentative size of an element during a resizing operation\n */\nexport class ResizeSize {\n    /**\n     * Element being sized\n     */\n    public element: ElementBase;\n\n    /**\n     * Tentative size of element\n     */\n    public size: Size;\n\n    /**\n     * @param element - Element being sized\n     * @param size - Tentative size of element\n     */\n    constructor(element: ElementBase, size: Size) {\n        this.element = element;\n        this.size = size;\n    }\n}\n","import { ErrorMessages } from '../core/error-messages';\nimport { Point } from '../core/point';\nimport { PointDepth } from '../core/point-depth';\nimport { Size } from '../core/size';\nimport { WindingMode } from '../core/winding-mode';\nimport { ElementBase } from '../elements/element-base';\nimport { EllipseElement } from '../elements/ellipse-element';\nimport { ImageElement } from '../elements/image-element';\nimport { LineElement } from '../elements/line-element';\nimport { ModelElement } from '../elements/model-element';\nimport { PathElement } from '../elements/path-element';\nimport { PolygonElement } from '../elements/polygon-element';\nimport { PolylineElement } from '../elements/polyline-element';\nimport { RectangleElement } from '../elements/rectangle-element';\nimport { SpriteElement } from '../elements/sprite-element';\nimport { TextElement } from '../elements/text-element';\nimport { FillFactory } from '../fill/fill-factory';\nimport { BitmapResource } from '../resource/bitmap-resource';\nimport { ModelResource } from '../resource/model-resource';\nimport { TextResource } from '../resource/text-resource';\nimport { DesignController } from './design-controller';\n\n/**\n * Renders elements for interactive manipulation\n */\nexport class DesignRenderer {\n    /**\n     * Associated design controller\n     */\n    public controller: DesignController;\n\n    /**\n     * Renders model elements for design controller\n     * @param controller - Design controller\n     */\n    constructor(controller: DesignController) {\n        this.renderToContext = this.renderToContext.bind(this);\n        this.renderElement = this.renderElement.bind(this);\n        this.renderImageElement = this.renderImageElement.bind(this);\n        this.renderSpriteElement = this.renderSpriteElement.bind(this);\n        this.renderRectangleElement = this.renderRectangleElement.bind(this);\n        this.renderLineElement = this.renderLineElement.bind(this);\n        this.renderPolylineElement = this.renderPolylineElement.bind(this);\n        this.renderPolygonElement = this.renderPolygonElement.bind(this);\n        this.renderPathElement = this.renderPathElement.bind(this);\n        this.renderEllipseElement = this.renderEllipseElement.bind(this);\n        this.renderTextElement = this.renderTextElement.bind(this);\n        this.renderModelElement = this.renderModelElement.bind(this);\n\n        this.controller = controller;\n    }\n\n    /**\n     * Renders model elements at designated scale to canvas 2d context\n     * @param c - Rendering context\n     * @param scale - Rendering scale\n     */\n    public renderToContext(c: CanvasRenderingContext2D, scale: number) {\n        const model = this.controller.model;\n        if (!model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        const b = model.getBounds();\n        if (!b) {\n            throw new Error(ErrorMessages.BoundsAreUndefined);\n        }\n        const w = b.size.width;\n        const h = b.size.height;\n\n        c.save();\n        if (arguments.length > 1 && scale !== 1) {\n            c.scale(scale, scale);\n        }\n\n        // If transformed\n        if (model.transform) {\n            model.setRenderTransform(c, model.transform, b.location);\n        }\n\n        // Fill\n        if (FillFactory.setElementFill(c, model)) {\n            if (model.fillOffsetX || model.fillOffsetY) {\n                const fillOffsetX = model.fillOffsetX || 0;\n                const fillOffsetY = model.fillOffsetY || 0;\n                c.translate(fillOffsetX, fillOffsetY);\n                c.fillRect(-fillOffsetX, -fillOffsetY, w, h);\n                c.translate(-fillOffsetX, -fillOffsetY);\n            }\n            else {\n                c.fillRect(0, 0, w, h);\n            }\n        }\n\n        // Render elements\n        c.globalAlpha = 1.0;\n        for (const el of model.elements) {\n            this.renderElement(c, el);\n        }\n\n        // Stroke\n        if (model.setElementStroke(c, model)) {\n            c.strokeRect(0, 0, w, h);\n        }\n        c.restore();\n    }\n\n    /**\n     * Renders a model element to canvas 2d context\n     * @param c - Rendering context\n     * @param el - Element to render\n     */\n    public renderElement(c: CanvasRenderingContext2D, el: ElementBase) {\n        if (el.type === 'image') {\n            this.renderImageElement.apply(this, [ c, el as ImageElement ]);\n        }\n        else if (el.type === 'sprite') {\n            this.renderSpriteElement.apply(this, [ c, el as SpriteElement ]);\n        }\n        else if (el.type === 'rectangle') {\n            this.renderRectangleElement.apply(this, [ c, el as RectangleElement ]);\n        }\n        else if (el.type === 'line') {\n            this.renderLineElement.apply(this, [ c, el as LineElement ]);\n        }\n        else if (el.type === 'polyline') {\n            this.renderPolylineElement.apply(this, [ c, el as PolylineElement ]);\n        }\n        else if (el.type === 'polygon') {\n            this.renderPolygonElement.apply(this, [ c, el as PolygonElement ]);\n        }\n        else if (el.type === 'path') {\n            this.renderPathElement.apply(this, [ c, el as PathElement ]);\n        }\n        else if (el.type === 'ellipse') {\n            this.renderEllipseElement.apply(this, [ c, el as EllipseElement ]);\n        }\n        else if (el.type === 'model') {\n            this.renderModelElement.apply(this, [ c, el as ModelElement ]);\n        }\n        else if (el.type === 'text') {\n            this.renderTextElement.apply(this, [ c, el as TextElement ]);\n        }\n    }\n\n    /**\n     * Renders an imag eelement to canvas 2d context\n     * @param c - Rendering context\n     * @param image - Image element to render\n     */\n    public renderImageElement(c: CanvasRenderingContext2D, image: ImageElement) {\n        const model = image.model;\n        if (!model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        if (!image.source) {\n            throw new Error(ErrorMessages.SourceUndefined);\n        }\n        const resource = model.resourceManager.get(image.source) as BitmapResource;\n        if (!resource.image) {\n            throw new Error(ErrorMessages.ImageUndefined);\n        }\n        let location = image.getLocation();\n        if (!location) {\n            throw new Error(ErrorMessages.LocationUndefined);\n        }\n        let size = image.getSize();\n        if (!size) {\n            throw new Error(ErrorMessages.SourceUndefined);\n        }\n        if ((this.controller.isMoving || this.controller.isResizing) && this.controller.isSelected(image)) {\n            location = this.controller.getElementMoveLocation(image);\n            size = this.controller.getElementResizeSize(image);\n        }\n        c.save();\n        if (image.transform) {\n            model.setRenderTransform(c, image.transform, location);\n        }\n        if (image.opacity !== undefined && image.opacity > 0 && image.opacity < 1.0) {\n            const o = c.globalAlpha;\n            c.globalAlpha = image.opacity;\n            c.drawImage(resource.image, location.x, location.y, size.width, size.height);\n            c.globalAlpha = o;\n        }\n        else if (resource.image) {\n            try {\n                c.drawImage(resource.image, location.x, location.y, size.width, size.height);\n            } catch (ignore) {\n                throw new Error(ErrorMessages.CanvasDrawImageError + ':' + ignore);\n            }\n        }\n        if (model.setElementStroke(c, image)) {\n            c.strokeRect(location.x, location.y, size.width, size.height);\n        }\n        c.restore();\n    }\n\n    /**\n     * Renders a sprite element to canvas 2d context\n     * @param c - Rendering context\n     * @param sprite - Sprite element to render\n     */\n    public renderSpriteElement(c: CanvasRenderingContext2D, sprite: SpriteElement) {\n        const model = sprite.model;\n        if (!sprite.frames) {\n            return;\n        }\n        if (!model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        const frame = sprite.frames[sprite.frameIndex];\n        const resource = model.resourceManager.get(frame.source) as BitmapResource;\n        if (!resource.image) {\n            throw new Error(ErrorMessages.ImageUndefined);\n        }\n        let location = sprite.getLocation();\n        let size = sprite.getSize();\n        if (!location) {\n            throw new Error(ErrorMessages.LocationUndefined);\n        }\n        if (!size) {\n            throw new Error(ErrorMessages.SizeUndefined);\n        }\n        if ((this.controller.isMoving || this.controller.isResizing) && this.controller.isSelected(sprite)) {\n            location = this.controller.getElementMoveLocation(sprite);\n            size = this.controller.getElementResizeSize(sprite);\n        }\n        c.save();\n        if (sprite.transform) {\n            model.setRenderTransform(c, sprite.transform, location);\n        }\n        if (frame.opacity !== undefined && frame.opacity > 0 && frame.opacity < 1.0) {\n            const o = c.globalAlpha;\n            c.globalAlpha = frame.opacity;\n            c.drawImage(\n                resource.image,\n                frame.x,\n                frame.y,\n                frame.width,\n                frame.height,\n                location.x,\n                location.y,\n                size.width,\n                size.height\n            );\n            c.globalAlpha = o;\n        }\n        else {\n            c.drawImage(\n                resource.image,\n                frame.x,\n                frame.y,\n                frame.width,\n                frame.height,\n                location.x,\n                location.y,\n                size.width,\n                size.height\n            );\n        }\n        c.restore();\n    }\n\n    /**\n     * Renders a rectangle element to canvas 2d context\n     * @param c - Rendering context\n     * @param rectangle - Rectangle element to render\n     */\n    public renderRectangleElement(c: CanvasRenderingContext2D, rectangle: RectangleElement) {\n        const model = rectangle.model;\n        if (!model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        let location = rectangle.getLocation();\n        let size = rectangle.getSize();\n        if ((this.controller.isMoving || this.controller.isResizing) && this.controller.isSelected(rectangle)) {\n            location = this.controller.getElementMoveLocation(rectangle);\n            size = this.controller.getElementResizeSize(rectangle);\n        }\n        if (!location) {\n            throw new Error(ErrorMessages.LocationUndefined);\n        }\n        if (!size) {\n            throw new Error(ErrorMessages.SizeUndefined);\n        }\n        const x = location.x;\n        const y = location.y;\n        const w = size.width;\n        const h = size.height;\n        c.save();\n        if (rectangle.transform) {\n            model.setRenderTransform(c, rectangle.transform, location);\n        }\n        if (FillFactory.setElementFill(c, rectangle)) {\n            let loc = rectangle.getLocation();\n            if ((this.controller.isMoving || this.controller.isResizing) && this.controller.isSelected(rectangle)) {\n                loc = this.controller.getElementMoveLocation(rectangle);\n            }\n            if (!loc) {\n                throw new Error(ErrorMessages.LocationUndefined);\n            }\n            if (rectangle.fillOffsetX || rectangle.fillOffsetY) {\n                const fillOffsetX = rectangle.fillOffsetX || 0;\n                const fillOffsetY = rectangle.fillOffsetY || 0;\n                c.translate(loc.x + fillOffsetX, loc.y + fillOffsetY);\n                c.fillRect(-fillOffsetX, -fillOffsetY, w, h);\n                c.translate(-(loc.x + fillOffsetX), -(loc.y + fillOffsetY));\n            }\n            else {\n                c.translate(loc.x, loc.y);\n                c.fillRect(0, 0, w, h);\n                c.translate(-loc.x, -loc.y);\n            }\n        }\n        if (model.setElementStroke(c, rectangle)) {\n            c.strokeRect(x, y, w, h);\n        }\n        c.restore();\n    }\n\n    /**\n     * Renders a line element to canvas 2d context\n     * @param c - Rendering context\n     * @param line - Line element to render\n     */\n    public renderLineElement(c: CanvasRenderingContext2D, line: LineElement) {\n        const model = line.model;\n        if (!model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        let p1x;\n        let p2x;\n        let p1y;\n        let p2y;\n        let offsetX = 0;\n        let offsetY = 0;\n        const b = line.getBounds();\n        if (!b) {\n            throw new Error(ErrorMessages.BoundsAreUndefined);\n        }\n        const p1 = line.getP1();\n        const p2 = line.getP2();\n        if (!p1 || !p2) {\n            throw new Error(ErrorMessages.NoPointsAreDefined);\n        }\n        let location = b.location;\n        if (this.controller.isMoving && this.controller.isSelected(line)) {\n            location = this.controller.getElementMoveLocation(line);\n            offsetX = location.x - b.x;\n            offsetY = location.y - b.y;\n        }\n        if (this.controller.isMovingPoint && this.controller.isSelected(line) && this.controller.movingPointLocation) {\n            if (this.controller.movingPointIndex === 0) {\n                p1x = this.controller.movingPointLocation.x;\n                p1y = this.controller.movingPointLocation.y;\n                p2x = p2.x;\n                p2y = p2.y;\n            }\n            else if (this.controller.movingPointIndex === 1) {\n                p1x = p1.x;\n                p1y = p1.y;\n                p2x = this.controller.movingPointLocation.x;\n                p2y = this.controller.movingPointLocation.y;\n            }\n            else {\n                p1x = p1.x;\n                p2x = p2.x;\n                p1y = p1.y;\n                p2y = p2.y;\n            }\n        }\n        else {\n            p1x = p1.x;\n            p2x = p2.x;\n            p1y = p1.y;\n            p2y = p2.y;\n        }\n        c.save();\n        if (line.transform) {\n            model.setRenderTransform(c, line.transform, new Point(p1x, p1y));\n        }\n        c.beginPath();\n        c.moveTo(p1x + offsetX, p1y + offsetY);\n        c.lineTo(p2x + offsetX, p2y + offsetY);\n        if (model.setElementStroke(c, line)) {\n            c.stroke();\n        }\n        c.restore();\n    }\n\n    /**\n     * Renders a polyline element to canvas 2d context\n     * @param c - Rendering context\n     * @param polyline - Polyline element to render\n     */\n    public renderPolylineElement(c: CanvasRenderingContext2D, polyline: PolylineElement) {\n        const model = polyline.model;\n        if (!model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        let movingPointIndex;\n        let movingPointLocation;\n        let offsetX = 0;\n        let offsetY = 0;\n        let scaleX = 1;\n        let scaleY = 1;\n        const b = polyline.getBounds();\n        if (!b) {\n            throw new Error(ErrorMessages.BoundsAreUndefined);\n        }\n        let location = b.location;\n        let size = b.size;\n        let scaled;\n        if (this.controller.isMoving && this.controller.isSelected(polyline)) {\n            location = this.controller.getElementMoveLocation(polyline);\n            offsetX = location.x - b.x;\n            offsetY = location.y - b.y;\n        }\n        if (this.controller.isResizing && this.controller.isSelected(polyline)) {\n            location = this.controller.getElementMoveLocation(polyline);\n            size = this.controller.getElementResizeSize(polyline);\n            offsetX = location.x - b.x;\n            offsetY = location.y - b.y;\n            scaleX = size.width / b.width;\n            scaleY = size.height / b.height;\n        }\n        if (this.controller.isMovingPoint && this.controller.isSelected(polyline)) {\n            movingPointIndex = this.controller.movingPointIndex;\n            movingPointLocation = this.controller.movingPointLocation;\n        }\n        c.save();\n        if (polyline.transform) {\n            model.setRenderTransform(c, polyline.transform, b.location);\n        }\n        c.beginPath();\n        if (movingPointIndex === 0 && movingPointLocation) {\n            c.moveTo(movingPointLocation.x, movingPointLocation.y);\n        }\n        else {\n            scaled = Point.scale(polyline.getPointAt(0), scaleX, scaleY, b.x, b.y);\n            scaled = Point.translate(scaled, offsetX, offsetY);\n            c.moveTo(scaled.x, scaled.y);\n        }\n        const l = polyline.pointCount();\n        let i;\n        let scaled2;\n        if (polyline.smoothPoints) {\n            for (i = 1; i < l - 2; i++) {\n                if (i === movingPointIndex && movingPointLocation) {\n                    scaled2 = Point.scale(polyline.getPointAt(i + 1), scaleX, scaleY, b.x, b.y);\n                    scaled2 = Point.translate(scaled2, offsetX, offsetY);\n                    const xc = (movingPointLocation.x + scaled2.x) / 2;\n                    const yc = (movingPointLocation.y + scaled2.y) / 2;\n                    c.quadraticCurveTo(movingPointLocation.x, movingPointLocation.y, xc, yc);\n                }\n                else {\n                    scaled = Point.scale(polyline.getPointAt(i), scaleX, scaleY, b.x, b.y);\n                    scaled = Point.translate(scaled, offsetX, offsetY);\n                    scaled2 = Point.scale(polyline.getPointAt(i + 1), scaleX, scaleY, b.x, b.y);\n                    scaled2 = Point.translate(scaled2, offsetX, offsetY);\n                    const xc = (scaled.x + scaled2.x) / 2;\n                    const yc = (scaled.y + scaled2.y) / 2;\n                    c.quadraticCurveTo(scaled.x, scaled.y, xc, yc);\n                }\n            }\n            c.lineCap = 'round';\n            if (i === movingPointIndex && movingPointLocation) {\n                scaled2 = Point.scale(movingPointLocation, scaleX, scaleY, b.x, b.y);\n                scaled2 = Point.translate(scaled2, offsetX, offsetY);\n                c.lineTo(scaled2.x, scaled2.y);\n                // c.quadraticCurveTo(movingPointLocation.x, movingPointLocation.y, scaled2.x, scaled2.y);\n            }\n            else {\n                scaled2 = Point.scale(polyline.getPointAt(i + 1), scaleX, scaleY, b.x, b.y);\n                scaled2 = Point.translate(scaled2, offsetX, offsetY);\n                c.lineTo(scaled2.x, scaled2.y);\n            }\n        }\n        else {\n            for (i = 1; i < l; i++) {\n                if (i === movingPointIndex && movingPointLocation) {\n                    c.lineTo(movingPointLocation.x + offsetX, movingPointLocation.y + offsetY);\n                }\n                else {\n                    scaled = Point.scale(polyline.getPointAt(i), scaleX, scaleY, b.x, b.y);\n                    scaled = Point.translate(scaled, offsetX, offsetY);\n                    c.lineTo(scaled.x, scaled.y);\n                }\n            }\n        }\n        if (model.setElementStroke(c, polyline)) {\n            c.stroke();\n        }\n        c.restore();\n    }\n\n    /**\n     * Renders a polygon element to canvas 2d context\n     * @param c - Rendering context\n     * @param polygon - Polygon element to render\n     */\n    public renderPolygonElement(c: CanvasRenderingContext2D, polygon: PolygonElement) {\n        const model = polygon.model;\n        if (!model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        let movingPointIndex = null;\n        let movingPointLocation = null;\n        let offsetX = 0;\n        let offsetY = 0;\n        let scaleX = 1;\n        let scaleY = 1;\n        const b = polygon.getBounds();\n        if (!b) {\n            throw new Error(ErrorMessages.BoundsAreUndefined);\n        }\n        let location = b.location;\n        let size = b.size;\n        let scaled;\n        if (this.controller.isMoving && this.controller.isSelected(polygon)) {\n            location = this.controller.getElementMoveLocation(polygon);\n            offsetX = location.x - b.x;\n            offsetY = location.y - b.y;\n        }\n        if (this.controller.isResizing && this.controller.isSelected(polygon)) {\n            location = this.controller.getElementMoveLocation(polygon);\n            size = this.controller.getElementResizeSize(polygon);\n            offsetX = location.x - b.x;\n            offsetY = location.y - b.y;\n            scaleX = size.width / b.width;\n            scaleY = size.height / b.height;\n        }\n        if (this.controller.isMovingPoint && this.controller.isSelected(polygon)) {\n            movingPointIndex = this.controller.movingPointIndex;\n            movingPointLocation = this.controller.movingPointLocation;\n        }\n        c.save();\n        if (polygon.transform) {\n            model.setRenderTransform(c, polygon.transform, b.location);\n        }\n        c.beginPath();\n        if (movingPointIndex === 0 && movingPointLocation) {\n            c.moveTo(movingPointLocation.x, movingPointLocation.y);\n        }\n        else {\n            scaled = Point.scale(polygon.getPointAt(0), scaleX, scaleY, b.x, b.y);\n            scaled = Point.translate(scaled, offsetX, offsetY);\n            c.moveTo(scaled.x, scaled.y);\n        }\n        const l = polygon.pointCount();\n        let i;\n        for (i = 1; i < l; i++) {\n            if (i === movingPointIndex && movingPointLocation) {\n                c.lineTo(movingPointLocation.x, movingPointLocation.y);\n            }\n            else {\n                scaled = Point.scale(polygon.getPointAt(i), scaleX, scaleY, b.x, b.y);\n                scaled = Point.translate(scaled, offsetX, offsetY);\n                c.lineTo(scaled.x, scaled.y);\n            }\n        }\n        c.closePath();\n        if (FillFactory.setElementFill(c, polygon)) {\n            let loc = polygon.getLocation();\n            if (!loc) {\n                throw new Error(ErrorMessages.LocationUndefined);\n            }\n            if ((this.controller.isMoving || this.controller.isResizing) && this.controller.isSelected(polygon)) {\n                loc = this.controller.getElementMoveLocation(polygon);\n            }\n            if (polygon.fillOffsetX || polygon.fillOffsetY) {\n                const fillOffsetX = polygon.fillOffsetX || 0;\n                const fillOffsetY = polygon.fillOffsetY || 0;\n                c.translate(loc.x + fillOffsetX, loc.y + fillOffsetY);\n                if (polygon.winding && polygon.winding === WindingMode.EvenOdd) {\n                    c.fill('evenodd');\n                }\n                else {\n                    c.fill('nonzero');\n                }\n                c.translate(-(loc.x + fillOffsetX), -(loc.y + fillOffsetY));\n            }\n            else {\n                c.translate(loc.x, loc.y);\n                if (polygon.winding && polygon.winding === WindingMode.EvenOdd) {\n                    c.fill('evenodd');\n                }\n                else {\n                    c.fill('nonzero');\n                }\n                c.translate(-loc.x, -loc.y);\n            }\n        }\n        if (model.setElementStroke(c, polygon)) {\n            c.stroke();\n        }\n        c.restore();\n    }\n\n    /**\n     * Renders a path element to canvas 2d context\n     * @param c - Rendering context\n     * @param pathElement - Path element to render\n     */\n    public renderPathElement(c: CanvasRenderingContext2D, pathElement: PathElement) {\n        const model = pathElement.model;\n        if (!model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        let movingPointIndex;\n        let movingPointLocation;\n        let depth;\n        let current = -1;\n        let offsetX = 0;\n        let offsetY = 0;\n        let scaleX = 1;\n        let scaleY = 1;\n        const b = pathElement.getBounds();\n        if (!b) {\n            throw new Error(ErrorMessages.BoundsAreUndefined);\n        }\n        let location = b.location;\n        let size = b.size;\n        if (this.controller.isMoving && this.controller.isSelected(pathElement)) {\n            location = this.controller.getElementMoveLocation(pathElement);\n            offsetX = location.x - b.x;\n            offsetY = location.y - b.y;\n        }\n        if (this.controller.isResizing && this.controller.isSelected(pathElement)) {\n            location = this.controller.getElementMoveLocation(pathElement);\n            size = this.controller.getElementResizeSize(pathElement);\n            offsetX = location.x - b.x;\n            offsetY = location.y - b.y;\n            scaleX = size.width / b.width;\n            scaleY = size.height / b.height;\n        }\n        if (this.controller.isMovingPoint && this.controller.isSelected(pathElement)) {\n            movingPointIndex = this.controller.movingPointIndex;\n            movingPointLocation = this.controller.movingPointLocation;\n            if (this.controller.selectedElementCount() === 1) {\n                depth = PointDepth.Full;\n            }\n            else {\n                depth = PointDepth.Simple;\n            }\n        }\n        c.save();\n        if (pathElement.transform) {\n            model.setRenderTransform(c, pathElement.transform, b.location);\n        }\n        c.beginPath();\n        const commands = pathElement.getCommands();\n        if (commands) {\n            for (const command of commands) {\n                if (command.charAt(0) === 'm') {\n                    current++;\n                    if (current === movingPointIndex && movingPointLocation) {\n                        c.moveTo(movingPointLocation.x + offsetX, movingPointLocation.y + offsetY);\n                    }\n                    else {\n                        let point = Point.parse(command.substring(1, command.length));\n                        point = Point.scale(point, scaleX, scaleY, b.x, b.y);\n                        point = Point.translate(point, offsetX, offsetY);\n                        c.moveTo(point.x, point.y);\n                    }\n                }\n                else if (command.charAt(0) === 'l') {\n                    current++;\n                    if (current === movingPointIndex && movingPointLocation) {\n                        c.lineTo(movingPointLocation.x + offsetX, movingPointLocation.y + offsetY);\n                    }\n                    else {\n                        let point = Point.parse(command.substring(1, command.length));\n                        point = Point.scale(point, scaleX, scaleY, b.x, b.y);\n                        point = Point.translate(point, offsetX, offsetY);\n                        c.lineTo(point.x, point.y);\n                    }\n                }\n                else if (command.charAt(0) === 'c') {\n                    const parts = command.substring(1, command.length).split(',');\n                    let cp1 = new Point(parseFloat(parts[0]), parseFloat(parts[1]));\n                    cp1 = Point.scale(cp1, scaleX, scaleY, b.x, b.y);\n                    cp1 = Point.translate(cp1, offsetX, offsetY);\n                    let cp2 = new Point(parseFloat(parts[2]), parseFloat(parts[3]));\n                    cp2 = Point.scale(cp2, scaleX, scaleY, b.x, b.y);\n                    cp2 = Point.translate(cp2, offsetX, offsetY);\n                    let endPoint: Point = new Point(parseFloat(parts[4]), parseFloat(parts[5]));\n                    endPoint = Point.scale(endPoint, scaleX, scaleY, b.x, b.y);\n                    endPoint = Point.translate(endPoint, offsetX, offsetY);\n                    current++;\n                    if (movingPointLocation) {\n                        if (current === movingPointIndex) {\n                            endPoint = movingPointLocation;\n                        }\n                        if (depth === PointDepth.Full) {\n                            current++;\n                            if (current === movingPointIndex) {\n                                cp1 = movingPointLocation;\n                            }\n                            current++;\n                            if (current === movingPointIndex) {\n                                cp2 = movingPointLocation;\n                            }\n                        }\n                    }\n                    c.bezierCurveTo(cp1.x, cp1.y, cp2.x, cp2.y, endPoint.x, endPoint.y);\n                }\n                else if (command.charAt(0) === 'z') {\n                    c.closePath();\n                }\n            }\n        }\n\n        if (FillFactory.setElementFill(c, pathElement)) {\n            let loc = pathElement.getLocation();\n            if (loc) {\n                if (\n                    (this.controller.isMoving || this.controller.isResizing) &&\n                    this.controller.isSelected(pathElement)\n                ) {\n                    loc = this.controller.getElementMoveLocation(pathElement);\n                }\n                if (pathElement.fillOffsetX || pathElement.fillOffsetY) {\n                    const fillOffsetX = pathElement.fillOffsetX || 0;\n                    const fillOffsetY = pathElement.fillOffsetY || 0;\n                    c.translate(loc.x + fillOffsetX, loc.y + fillOffsetY);\n                    if (pathElement.winding && pathElement.winding === WindingMode.EvenOdd) {\n                        c.fill('evenodd');\n                    }\n                    else {\n                        c.fill('nonzero');\n                    }\n                    c.translate(-(loc.x + fillOffsetX), -(loc.y + fillOffsetY));\n                }\n                else {\n                    c.translate(loc.x, loc.y);\n                    if (pathElement.winding && pathElement.winding === WindingMode.EvenOdd) {\n                        c.fill('evenodd');\n                    }\n                    else {\n                        c.fill('nonzero');\n                    }\n                    c.translate(-loc.x, -loc.y);\n                }\n            }\n        }\n\n        if (model.setElementStroke(c, pathElement)) {\n            c.stroke();\n        }\n        c.restore();\n    }\n\n    /**\n     * Renders an ellipe element to canvas 2d context\n     * @param c - Rendering context\n     * @param ellipse - Ellipse element to render\n     */\n    public renderEllipseElement(c: CanvasRenderingContext2D, ellipse: EllipseElement) {\n        const model = ellipse.model;\n        if (!model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        let center = ellipse.getCenter();\n        let radiusX = ellipse.radiusX;\n        let radiusY = ellipse.radiusY;\n        if (!radiusX || !radiusY || !center) {\n            throw new Error(ErrorMessages.PointsAreInvalid);\n        }\n        if ((this.controller.isMoving || this.controller.isResizing) && this.controller.isSelected(ellipse)) {\n            const location = this.controller.getElementMoveLocation(ellipse);\n            const size = this.controller.getElementResizeSize(ellipse);\n            center = new Point(location.x + size.width / 2, location.y + size.height / 2);\n            radiusX = size.width / 2;\n            radiusY = size.height / 2;\n        }\n        c.save();\n        if (ellipse.transform) {\n            const b = ellipse.getBounds();\n            if (b) {\n                model.setRenderTransform(c, ellipse.transform, new Point(b.x, b.y));\n            }\n        }\n        const scaleY = radiusY / radiusX;\n        c.save();\n        c.beginPath();\n        c.translate(center.x, center.y);\n        c.scale(1.0, scaleY);\n        c.arc(0, 0, radiusX, 0, Math.PI * 2, false);\n        c.closePath();\n        c.restore();\n        if (FillFactory.setElementFill(c, ellipse)) {\n            let loc = ellipse.getLocation();\n            if (loc) {\n                if ((this.controller.isMoving || this.controller.isResizing) && this.controller.isSelected(ellipse)) {\n                    loc = this.controller.getElementMoveLocation(ellipse);\n                }\n                if (ellipse.fillOffsetX || ellipse.fillOffsetY) {\n                    const fillOffsetX = ellipse.fillOffsetX || 0;\n                    const fillOffsetY = ellipse.fillOffsetY || 0;\n                    c.translate(loc.x + fillOffsetX, loc.y + fillOffsetY);\n                    c.fill();\n                    c.translate(-(loc.x + fillOffsetX), -(loc.y + fillOffsetY));\n                }\n                else {\n                    c.translate(loc.x, loc.y);\n                    c.fill();\n                    c.translate(-loc.x, -loc.y);\n                }\n            }\n        }\n        if (model.setElementStroke(c, ellipse)) {\n            c.stroke();\n        }\n        c.restore();\n    }\n\n    /**\n     * Renders a text element to canvas 2d context\n     * @param c - Rendering context\n     * @param rectangle - Text element to render\n     */\n    public renderTextElement(c: CanvasRenderingContext2D, textElement: TextElement) {\n        const model = textElement.model;\n        if (!model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        let location = textElement.getLocation();\n        let size = textElement.getSize();\n        if (!location) {\n            throw new Error(ErrorMessages.LocationUndefined);\n        }\n        if (!size) {\n            throw new Error(ErrorMessages.SizeUndefined);\n        }\n        if ((this.controller.isMoving || this.controller.isResizing) && this.controller.isSelected(textElement)) {\n            location = this.controller.getElementMoveLocation(textElement);\n            size = this.controller.getElementResizeSize(textElement);\n        }\n        c.save();\n        if (textElement.transform) {\n            model.setRenderTransform(c, textElement.transform, new Point(location.x, location.y));\n        }\n        c.beginPath();\n        c.rect(location.x, location.y, size.width + 10, size.height);\n        c.clip();\n        let font = '';\n        let fontSize = 10.0;\n        let parts;\n        if (textElement.typestyle) {\n            parts = textElement.typestyle.split(',');\n            for (const part of parts) {\n                font += part;\n                font += ' ';\n            }\n        }\n        if (textElement.typesize) {\n            fontSize = textElement.typesize;\n            font += textElement.typesize + 'px ';\n        }\n        if (textElement.typeface) {\n            parts = textElement.typeface.split(',');\n            for (const part of parts) {\n                font += part;\n                font += ' ';\n            }\n        }\n        else {\n            font += 'sans-serif';\n        }\n        c.font = font;\n        let valign = 'top';\n        let halign = 'left';\n        if (textElement.alignment) {\n            parts = textElement.alignment.split(',');\n            for (const part of parts) {\n                if (part.toLowerCase() === 'start') {\n                    c.textAlign = 'start';\n                    halign = 'left';\n                }\n                else if (part.toLowerCase() === 'end') {\n                    c.textAlign = 'end';\n                    halign = 'right';\n                }\n                else if (part.toLowerCase() === 'left') {\n                    c.textAlign = 'left';\n                    halign = 'left';\n                }\n                else if (part.toLowerCase() === 'right') {\n                    c.textAlign = 'right';\n                    halign = 'right';\n                }\n                else if (part.toLowerCase() === 'center') {\n                    c.textAlign = 'center';\n                    halign = 'center';\n                }\n                else if (part.toLowerCase() === 'top') {\n                    valign = 'top';\n                }\n                else if (part.toLowerCase() === 'bottom') {\n                    valign = 'bottom';\n                }\n                else if (part.toLowerCase() === 'middle') {\n                    valign = 'middle';\n                }\n            }\n        }\n\n        // Resolve content\n        let text;\n        if (textElement.source) {\n            const resource = model.resourceManager.get(textElement.source) as TextResource;\n            if (resource) {\n                text = resource.text;\n            }\n        }\n        if (!text) {\n            text = textElement.text;\n        }\n        if (!text) {\n            return;\n        }\n\n        // Get lines of content\n        const lines = textElement.getLines(c, text, size.width);\n\n        // Compute total height of content\n        const lineHeight = fontSize;\n        const totalHeight = lineHeight * lines.length;\n        let x;\n        let y;\n\n        if (FillFactory.setElementFill(c, textElement)) {\n            let loc = textElement.getLocation();\n            if (loc) {\n                if (\n                    (this.controller.isMoving || this.controller.isResizing) &&\n                    this.controller.isSelected(textElement)\n                ) {\n                    loc = this.controller.getElementMoveLocation(textElement);\n                }\n\n                // Iterate lines and fill text\n                x = location.x;\n                if (halign === 'right') {\n                    x += size.width;\n                }\n                else if (halign === 'center') {\n                    x += size.width / 2;\n                }\n                y = location.y;\n                c.textBaseline = 'top';\n                if (valign === 'middle') {\n                    y = location.y + size.height / 2 - totalHeight / 2;\n                }\n                else if (valign === 'bottom') {\n                    y = location.y + size.height - totalHeight;\n                }\n                for (const line of lines) {\n                    if (textElement.fillOffsetX || textElement.fillOffsetY) {\n                        const fillOffsetX = textElement.fillOffsetX || 0;\n                        const fillOffsetY = textElement.fillOffsetY || 0;\n                        c.translate(loc.x + fillOffsetX, loc.y + fillOffsetY);\n                        c.fillText(line, -fillOffsetX + x - loc.x, -fillOffsetY + y - loc.y);\n                        c.translate(-(loc.x + fillOffsetX), -(loc.y + fillOffsetY));\n                    }\n                    else {\n                        c.translate(loc.x, loc.y);\n                        c.fillText(line, x - loc.x, y - loc.y);\n                        c.translate(-loc.x, -loc.y);\n                    }\n                    y += lineHeight;\n                }\n            }\n        }\n\n        if (model.setElementStroke(c, textElement)) {\n            // Iterate lines and stroke text\n            x = location.x;\n            if (halign === 'right') {\n                x += size.width;\n            }\n            else if (halign === 'center') {\n                x += size.width / 2;\n            }\n            y = location.y;\n            if (valign === 'middle') {\n                y = location.y + size.height / 2 - totalHeight / 2;\n            }\n            else if (valign === 'bottom') {\n                y = location.y + size.height - totalHeight;\n            }\n            for (const line of lines) {\n                c.strokeText(line, x, y);\n                y += lineHeight;\n            }\n        }\n        c.restore();\n    }\n\n    /**\n     * Renders a model element to canvas 2d context\n     * @param c - Rendering context\n     * @param modelElement - Model element to render\n     */\n    public renderModelElement(c: CanvasRenderingContext2D, modelElement: ModelElement) {\n        const model = modelElement.model;\n        if (!model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        let location = modelElement.getLocation();\n        let size = modelElement.getSize();\n        if (!location) {\n            throw new Error(ErrorMessages.LocationUndefined);\n        }\n        if (!size) {\n            throw new Error(ErrorMessages.SizeUndefined);\n        }\n        if ((this.controller.isMoving || this.controller.isResizing) && this.controller.isSelected(modelElement)) {\n            location = this.controller.getElementMoveLocation(modelElement);\n            size = this.controller.getElementResizeSize(modelElement);\n        }\n\n        if (!modelElement.source) {\n            throw new Error(ErrorMessages.SourceUndefined);\n        }\n        const resource = model.resourceManager.get(modelElement.source) as ModelResource;\n        const innerModel = resource.model;\n        if (!innerModel) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n\n        const x = location.x;\n        const y = location.y;\n        let w = 0;\n        let h = 0;\n        let rx = 1;\n        let ry = 1;\n        if (size && size !== Size.Empty) {\n            w = size.width;\n            h = size.height;\n        }\n        else if (innerModel.size) {\n            size = innerModel.getSize();\n            if (size) {\n                w = size.width;\n                h = size.height;\n            }\n        }\n        if (innerModel.size) {\n            size = innerModel.getSize();\n            if (size) {\n                rx = w / size.width;\n                ry = h / size.height;\n            }\n        }\n\n        // Clip to bounds\n        /*\n        c.save();\n        c.rect(x, y, w, h);\n        c.stroke();\n        c.clip();\n        */\n\n        // If not full opacity, then render to intermediate canvas\n        if (modelElement.opacity !== undefined && modelElement.opacity > 0 && modelElement.opacity < 1.0) {\n            const offscreen = document.createElement('canvas');\n            offscreen.width = w;\n            offscreen.height = h;\n            const c2 = offscreen.getContext('2d');\n            if (c2) {\n                c2.scale(rx, ry);\n                innerModel.renderToContext(c2);\n            }\n            c.save();\n            c.globalAlpha = modelElement.opacity;\n            if (modelElement.transform) {\n                model.setRenderTransform(c, modelElement.transform, new Point(x, y));\n            }\n            c.drawImage(offscreen, x, y);\n            c.restore();\n        }\n        else {\n            c.save();\n            if (modelElement.transform) {\n                model.setRenderTransform(c, modelElement.transform, new Point(x, y));\n            }\n            c.save();\n            c.translate(x, y);\n            if (rx !== 1 || ry !== 1) {\n                c.scale(rx, ry);\n            }\n            // innerModel.renderer = this;\n            innerModel.renderToContext(c);\n            c.restore();\n            c.restore();\n        }\n\n        // Restore clip\n        // c.restore();\n    }\n}\n","/**\n * Specifies design mode surface reference grid style\n */\nexport enum GridType {\n    /**\n     * No grid\n     */\n    None = 0,\n    /**\n     * Dot grid\n     */\n    Dots = 1,\n    /**\n     * Line grid\n     */\n    Lines = 2\n}\n","import { Point } from '../core/point';\r\nimport { PointDepth } from '../core/point-depth';\r\nimport { Size } from '../core/size';\r\nimport { DesignController } from '../design/design-controller';\r\nimport { ElementBase } from '../elements/element-base';\r\nimport { PathElement } from '../elements/path-element';\r\nimport { Handle } from './handle';\r\n\r\n/**\r\n * Creates design mode manipulation handles for supported elements\r\n */\r\nexport class HandleFactory {\r\n    /**\r\n     * Creates array of handles for element\r\n     * @param el - Element\r\n     * @param c - Design controller\r\n     * @param scale - Controller rendering scale\r\n     * @returns Array of handles for element\r\n     */\r\n    public static handlesForElement(el: ElementBase, c: DesignController, scale: number): Handle[] {\r\n        if (el.type === 'path') {\r\n            if (el.editPoints) {\r\n                return HandleFactory.pathShapeHandles(el as PathElement, c, scale);\r\n            }\r\n            return HandleFactory.rectangularElementHandles(el, c, scale);\r\n        }\r\n        if (el.type === 'polyline' || el.type === 'polygon') {\r\n            if (el.editPoints) {\r\n                return HandleFactory.pointContainerHandles(el, c, scale);\r\n            }\r\n            return HandleFactory.rectangularElementHandles(el, c, scale);\r\n        }\r\n        if (el.type === 'line') {\r\n            return HandleFactory.pointContainerHandles(el, c, scale);\r\n        }\r\n        // image, sprite, rectangle, ellipse, model, text elements\r\n        return HandleFactory.rectangularElementHandles(el, c, scale);\r\n    }\r\n\r\n    /**\r\n     * Creates handles for rectangular elements\r\n     * @param el - Rectangular element\r\n     * @param c - Design controller\r\n     * @param scale - Controller rendering scale\r\n     * @returns Array of handles for element\r\n     */\r\n    public static rectangularElementHandles(el: ElementBase, c: DesignController, scale: number): Handle[] {\r\n        const handles: Handle[] = [];\r\n        let moveLocation: Point;\r\n        let resizeSize: Size;\r\n        const b = el.getBounds();\r\n        if (!b) {\r\n            return handles;\r\n        }\r\n        let location = b.location;\r\n        let size = b.size;\r\n\r\n        if (c.isMoving) {\r\n            if (c.isSelected(el) && el.canMove()) {\r\n                moveLocation = c.getElementMoveLocation(el);\r\n                location = new Point(moveLocation.x, moveLocation.y);\r\n            }\r\n        }\r\n        else if (c.isResizing) {\r\n            if (c.isSelected(el) && el.canResize()) {\r\n                moveLocation = c.getElementMoveLocation(el);\r\n                location = new Point(moveLocation.x, moveLocation.y);\r\n                resizeSize = c.getElementResizeSize(el);\r\n                size = new Size(resizeSize.width, resizeSize.height);\r\n            }\r\n        }\r\n\r\n        // Top Left\r\n        const topLeft = new Handle(location.x, location.y, el, c);\r\n        topLeft.scale = scale;\r\n        topLeft.handleId = 'topLeft';\r\n        topLeft.handleMoved = Handle.sizeRectangleLeftTop;\r\n        topLeft.canMoveHorizontal = true;\r\n        topLeft.canMoveVertical = true;\r\n        topLeft.cursor = 'nw-resize';\r\n        topLeft.region = topLeft.getBounds();\r\n        handles.push(topLeft);\r\n\r\n        // Top center\r\n        const topCenter = new Handle(location.x + size.width / 2, location.y, el, c);\r\n        topCenter.scale = scale;\r\n        topCenter.handleId = 'topCenter';\r\n        topCenter.handleMoved = Handle.sizeRectangleTopCenter;\r\n        topCenter.canMoveHorizontal = false;\r\n        topCenter.canMoveVertical = true;\r\n        topCenter.region = topCenter.getBounds();\r\n        // topCenter.barRegion = elise.region(location.x, location.y, size.width / 4, scale);\r\n        topCenter.cursor = 'n-resize';\r\n        handles.push(topCenter);\r\n\r\n        // Top right\r\n        const topRight = new Handle(location.x + size.width, location.y, el, c);\r\n        topRight.scale = scale;\r\n        topRight.handleId = 'topRight';\r\n        topRight.handleMoved = Handle.sizeRectangleRightTop;\r\n        topRight.canMoveHorizontal = true;\r\n        topRight.canMoveVertical = true;\r\n        topRight.region = topRight.getBounds();\r\n        topRight.cursor = 'ne-resize';\r\n        handles.push(topRight);\r\n\r\n        // Middle right\r\n        const middleRight = new Handle(location.x + size.width, location.y + size.height / 2, el, c);\r\n        middleRight.scale = scale;\r\n        middleRight.handleId = 'middleRight';\r\n        middleRight.handleMoved = Handle.sizeRectangleRightMiddle;\r\n        middleRight.canMoveHorizontal = true;\r\n        middleRight.canMoveVertical = false;\r\n        middleRight.region = middleRight.getBounds();\r\n        // middleRight.barRegion = elise.region(location.x + size.width, location.y, 4 / scale, size.height);\r\n        middleRight.cursor = 'e-resize';\r\n        handles.push(middleRight);\r\n\r\n        // Bottom right\r\n        const bottomRight = new Handle(location.x + size.width, location.y + size.height, el, c);\r\n        bottomRight.scale = scale;\r\n        bottomRight.handleId = 'bottomRight';\r\n        bottomRight.handleMoved = Handle.sizeRectangleRightBottom;\r\n        bottomRight.canMoveHorizontal = true;\r\n        bottomRight.canMoveVertical = true;\r\n        bottomRight.region = bottomRight.getBounds();\r\n        bottomRight.cursor = 'se-resize';\r\n        handles.push(bottomRight);\r\n\r\n        // Bottom center\r\n        const bottomCenter = new Handle(location.x + size.width / 2, location.y + size.height, el, c);\r\n        bottomCenter.scale = scale;\r\n        bottomCenter.handleId = 'bottomCenter';\r\n        bottomCenter.handleMoved = Handle.sizeRectangleBottomCenter;\r\n        bottomCenter.canMoveHorizontal = false;\r\n        bottomCenter.canMoveVertical = true;\r\n        bottomCenter.region = bottomCenter.getBounds();\r\n        // bottomCenter.barRegion = elise.region(location.x, location.y + size.height, size.width, 4 / scale);\r\n        bottomCenter.cursor = 's-resize';\r\n        handles.push(bottomCenter);\r\n\r\n        // Left bottom\r\n        const bottomLeft = new Handle(location.x, location.y + size.height, el, c);\r\n        bottomLeft.scale = scale;\r\n        bottomLeft.handleId = 'bottomLeft';\r\n        bottomLeft.handleMoved = Handle.sizeRectangleLeftBottom;\r\n        bottomLeft.canMoveHorizontal = true;\r\n        bottomLeft.canMoveVertical = true;\r\n        bottomLeft.region = bottomLeft.getBounds();\r\n        bottomLeft.cursor = 'sw-resize';\r\n        handles.push(bottomLeft);\r\n\r\n        // Middle left\r\n        const middleLeft = new Handle(location.x, location.y + size.height / 2, el, c);\r\n        middleLeft.scale = scale;\r\n        middleLeft.handleId = 'middleLeft';\r\n        middleLeft.handleMoved = Handle.sizeRectangleLeftMiddle;\r\n        middleLeft.canMoveHorizontal = true;\r\n        middleLeft.canMoveVertical = false;\r\n        middleLeft.region = middleLeft.getBounds();\r\n        // middleLeft.barRegion = elise.region(location.x, location.y, 4 / scale, size.height);\r\n        middleLeft.cursor = 'w-resize';\r\n        handles.push(middleLeft);\r\n\r\n        // Connect handles\r\n        topLeft.connectedHandles = [ topRight, bottomLeft ];\r\n        bottomRight.connectedHandles = [ bottomLeft, topRight ];\r\n\r\n        return handles;\r\n    }\r\n\r\n    /**\r\n     * Creates handles for path elements\r\n     * @param el - Path element\r\n     * @param c - Design controller\r\n     * @param scale - Controller rendering scale\r\n     * @returns Array of handles for element\r\n     */\r\n    public static pathShapeHandles(el: PathElement, c: DesignController, scale: number): Handle[] {\r\n        const handles: Handle[] = [];\r\n        let movingPointIndex = -1;\r\n        let offsetX = 0;\r\n        let offsetY = 0;\r\n        if (c.isMoving) {\r\n            const offset = c.getElementMoveLocation(el);\r\n            const b = el.getBounds();\r\n            if (!b) {\r\n                return handles;\r\n            }\r\n            offsetX = offset.x - b.x;\r\n            offsetY = offset.y - b.y;\r\n        }\r\n        if (c.isMovingPoint && c.movingPointIndex !== undefined) {\r\n            movingPointIndex = c.movingPointIndex;\r\n        }\r\n        let depth = PointDepth.Simple;\r\n        if (c.selectedElementCount() === 1) {\r\n            depth = PointDepth.Full;\r\n        }\r\n        let handleIndex = -1;\r\n        let handlePoint = Point.Origin;\r\n        let previous: Handle | undefined;\r\n        const commands = el.getCommands();\r\n        if (commands) {\r\n            for (const command of commands) {\r\n                let createHandle = true;\r\n                const connectToPrevious = true;\r\n                if (command.charAt(0) === 'm') {\r\n                    handleIndex++;\r\n                    handlePoint = Point.parse(command.substring(1, command.length));\r\n                }\r\n                else if (command.charAt(0) === 'l') {\r\n                    handleIndex++;\r\n                    handlePoint = Point.parse(command.substring(1, command.length));\r\n                }\r\n                else if (command.charAt(0) === 'c') {\r\n                    const parts = command.substring(1, command.length).split(',');\r\n                    const cp1 = new Point(parseFloat(parts[0]), parseFloat(parts[1]));\r\n                    const cp2 = new Point(parseFloat(parts[2]), parseFloat(parts[3]));\r\n                    const endPoint = new Point(parseFloat(parts[4]), parseFloat(parts[5]));\r\n                    handleIndex++;\r\n                    handlePoint = endPoint;\r\n\r\n                    if (depth === PointDepth.Full) {\r\n                        if (handleIndex === movingPointIndex && c.movingPointLocation) {\r\n                            handlePoint = c.movingPointLocation;\r\n                        }\r\n\r\n                        // End point\r\n                        const hend = new Handle(handlePoint.x + offsetX, handlePoint.y + offsetY, el, c);\r\n                        hend.scale = scale;\r\n                        hend.handleIndex = handleIndex;\r\n                        hend.handleMoved = Handle.movePointContainerPoint;\r\n                        hend.canMoveHorizontal = true;\r\n                        hend.canMoveVertical = true;\r\n                        hend.region = hend.getBounds();\r\n                        hend.cursor = 'move';\r\n                        handles.push(hend);\r\n                        if (connectToPrevious && previous) {\r\n                            hend.connectedHandles = [ previous ];\r\n                        }\r\n                        previous = hend;\r\n\r\n                        // Control point 1\r\n                        handleIndex++;\r\n                        handlePoint = cp1;\r\n                        if (handleIndex === movingPointIndex && c.movingPointLocation) {\r\n                            handlePoint = c.movingPointLocation;\r\n                        }\r\n\r\n                        const hcp1 = new Handle(handlePoint.x + offsetX, handlePoint.y + offsetY, el, c);\r\n                        hcp1.scale = scale;\r\n                        hcp1.handleIndex = handleIndex;\r\n                        hcp1.shape = 'circle';\r\n                        hcp1.handleMoved = Handle.movePointContainerPoint;\r\n                        hcp1.canMoveHorizontal = true;\r\n                        hcp1.canMoveVertical = true;\r\n                        hcp1.region = hcp1.getBounds();\r\n                        hcp1.cursor = 'move';\r\n                        handles.push(hcp1);\r\n                        hcp1.connectedHandles = [ previous ];\r\n\r\n                        // Control point2\r\n                        handleIndex++;\r\n                        handlePoint = cp2;\r\n                        if (handleIndex === movingPointIndex && c.movingPointLocation) {\r\n                            handlePoint = c.movingPointLocation;\r\n                        }\r\n\r\n                        const hcp2 = new Handle(handlePoint.x + offsetX, handlePoint.y + offsetY, el, c);\r\n                        hcp2.scale = scale;\r\n                        hcp2.handleIndex = handleIndex;\r\n                        hcp2.shape = 'circle';\r\n                        hcp2.handleMoved = Handle.movePointContainerPoint;\r\n                        hcp2.canMoveHorizontal = true;\r\n                        hcp2.canMoveVertical = true;\r\n                        hcp2.region = hcp2.getBounds();\r\n                        hcp2.cursor = 'move';\r\n                        handles.push(hcp2);\r\n                        hcp2.connectedHandles = [ previous ];\r\n\r\n                        createHandle = false;\r\n                    }\r\n                }\r\n                else {\r\n                    createHandle = false;\r\n                    previous = undefined;\r\n                }\r\n\r\n                if (handleIndex === movingPointIndex && c.movingPointLocation) {\r\n                    handlePoint = c.movingPointLocation;\r\n                }\r\n\r\n                if (createHandle) {\r\n                    const h = new Handle(handlePoint.x + offsetX, handlePoint.y + offsetY, el, c);\r\n                    h.scale = scale;\r\n                    h.handleIndex = handleIndex;\r\n                    h.handleMoved = Handle.movePointContainerPoint;\r\n                    h.canMoveHorizontal = true;\r\n                    h.canMoveVertical = true;\r\n                    h.region = h.getBounds();\r\n                    h.cursor = 'move';\r\n                    handles.push(h);\r\n                    if (connectToPrevious && previous) {\r\n                        h.connectedHandles = [ previous ];\r\n                    }\r\n                    previous = h;\r\n                }\r\n            }\r\n        }\r\n\r\n        return handles;\r\n    }\r\n\r\n    /**\r\n     * Creates handles for line, polyline and polygon elements (i.e. Point containers)\r\n     * @param el - Element\r\n     * @param c - Design controller\r\n     * @param scale - Controller rendering scale\r\n     * @returns Array of handles for element\r\n     */\r\n    public static pointContainerHandles(el: ElementBase, c: DesignController, scale: number): Handle[] {\r\n        const handles: Handle[] = [];\r\n        let movingPointIndex: number | undefined;\r\n        if (c.isMovingPoint && c.movingPointIndex !== undefined) {\r\n            movingPointIndex = c.movingPointIndex;\r\n        }\r\n        let offsetX = 0;\r\n        let offsetY = 0;\r\n        if (c.isMoving) {\r\n            const offset = c.getElementMoveLocation(el);\r\n            const b = el.getBounds();\r\n            if (!b) {\r\n                return handles;\r\n            }\r\n            offsetX = offset.x - b.x;\r\n            offsetY = offset.y - b.y;\r\n        }\r\n        let previous: Handle | undefined;\r\n        const l = el.pointCount();\r\n        for (let i = 0; i < l; i++) {\r\n            let p = el.getPointAt(i);\r\n            if (i === movingPointIndex && c.movingPointLocation) {\r\n                p = c.movingPointLocation;\r\n            }\r\n            const h = new Handle(p.x + offsetX, p.y + offsetY, el, c);\r\n            h.scale = scale;\r\n            h.handleIndex = i;\r\n            h.handleMoved = Handle.movePointContainerPoint;\r\n            h.canMoveHorizontal = true;\r\n            h.canMoveVertical = true;\r\n            h.region = h.getBounds();\r\n            h.cursor = 'move';\r\n            handles.push(h);\r\n            if (i !== 0 && previous) {\r\n                h.connectedHandles = [ previous ];\r\n            }\r\n            previous = h;\r\n        }\r\n\r\n        // If polygon, connect last to first\r\n        if (el.type === 'polygon') {\r\n            handles[handles.length - 1].connectedHandles.push(handles[0]);\r\n        }\r\n\r\n        return handles;\r\n    }\r\n}\r\n","import { ErrorMessages } from '../core/error-messages';\nimport { Point } from '../core/point';\nimport { PointDepth } from '../core/point-depth';\nimport { Region } from '../core/region';\nimport { Size } from '../core/size';\nimport { DesignController } from '../design/design-controller';\nimport { ElementBase } from '../elements/element-base';\nimport { HandleMovedArgs } from './handle-moved-args';\n\n/**\n * Design mode element manipulation handle\n */\nexport class Handle {\n    /**\n     * Handle size\n     */\n    public static Size = new Size(7, 7);\n\n    /**\n     * Handles movement of left middle rectangular sizing handle\n     * @param h - Handle being moved\n     * @param args - Handle movement info\n     */\n    public static sizeRectangleLeftMiddle(h: Handle, args: HandleMovedArgs): void {\n        const el = h.element;\n        const b = el.getBounds();\n        if (!b) {\n            throw new Error(ErrorMessages.BoundsAreUndefined);\n        }\n        let newX = b.x + args.deltaX;\n        let newWidth = b.width - args.deltaX;\n        let newHeight = b.height;\n        if (newWidth < h.controller.minElementSize.width || newHeight < h.controller.minElementSize.height) {\n            return;\n        }\n        if (h.controller.snapToGrid) {\n            const snappedX = h.controller.getNearestSnapX(newX);\n            if (snappedX !== newX) {\n                if (newWidth + newX - snappedX >= h.controller.minElementSize.width) {\n                    newWidth += newX - snappedX;\n                    newX = snappedX;\n                }\n            }\n        }\n        if (el.aspectLocked || h.controller.lockAspect) {\n            const aspect = b.width / b.height;\n            newHeight = newWidth / aspect;\n        }\n        const moveLocation = new Point(newX, b.y);\n        const resizeSize = new Size(\n            Math.max(newWidth, h.controller.minElementSize.width),\n            Math.max(newHeight, h.controller.minElementSize.height)\n        );\n        h.controller.setElementMoveLocation(el, moveLocation, resizeSize);\n        h.controller.setElementResizeSize(el, resizeSize, moveLocation);\n        h.controller.invalidate();\n    }\n\n    /**\n     * Handles movement of left bottom rectangular sizing handle\n     * @param h - Handle being moved\n     * @param args - Handle movement info\n     */\n    public static sizeRectangleLeftBottom(h: Handle, args: HandleMovedArgs): void {\n        const el = h.element;\n        const b = el.getBounds();\n        if (!b) {\n            throw new Error(ErrorMessages.BoundsAreUndefined);\n        }\n        if (!el) {\n            throw new Error(ErrorMessages.ElementUndefined);\n        }\n        if (!el.model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        let newX = b.x + args.deltaX;\n        let newWidth = b.width - args.deltaX;\n        let newHeight = b.height + args.deltaY;\n        if (newWidth < h.controller.minElementSize.width || newHeight < h.controller.minElementSize.height) {\n            return;\n        }\n        if (newX < 0) {\n            newX = 0;\n        }\n        const size = el.model.getSize();\n        if (!size) {\n            throw new Error(ErrorMessages.SizeUndefined);\n        }\n        if (b.y + newHeight > size.height) {\n            newHeight = size.height - b.y;\n        }\n        if (h.controller.snapToGrid) {\n            const snappedX = h.controller.getNearestSnapX(newX);\n            if (snappedX !== newX) {\n                if (newWidth + newX - snappedX >= h.controller.minElementSize.width) {\n                    newWidth += newX - snappedX;\n                    newX = snappedX;\n                }\n            }\n\n            const newY = b.y + b.height + args.deltaY;\n            const snappedY = h.controller.getNearestSnapY(newY);\n            if (snappedY !== newY) {\n                if (newHeight + newY - snappedY >= h.controller.minElementSize.height) {\n                    newHeight -= newY - snappedY;\n                }\n            }\n        }\n        if (el.aspectLocked || h.controller.lockAspect) {\n            const aspect = b.width / b.height;\n            newHeight = newWidth / aspect;\n        }\n        const moveLocation = new Point(newX, b.y);\n        const resizeSize = new Size(\n            Math.max(newWidth, h.controller.minElementSize.width),\n            Math.max(newHeight, h.controller.minElementSize.height)\n        );\n        h.controller.setElementMoveLocation(el, moveLocation, resizeSize);\n        h.controller.setElementResizeSize(el, resizeSize, moveLocation);\n        h.controller.invalidate();\n    }\n\n    /**\n     * Handles movement of bottom center rectangular sizing handle\n     * @param h - Handle being moved\n     * @param args - Handle movement info\n     */\n    public static sizeRectangleBottomCenter(h: Handle, args: HandleMovedArgs): void {\n        const el = h.element;\n        const b = el.getBounds();\n        if (!b) {\n            throw new Error(ErrorMessages.BoundsAreUndefined);\n        }\n        let newHeight = b.height + args.deltaY;\n        let newWidth = b.width;\n        if (newWidth < h.controller.minElementSize.width || newHeight < h.controller.minElementSize.height) {\n            return;\n        }\n        if (h.controller.snapToGrid) {\n            const newY = b.y + b.height + args.deltaY;\n            const snappedY = h.controller.getNearestSnapY(newY);\n            if (snappedY !== newY) {\n                if (newHeight + newY - snappedY >= h.controller.minElementSize.height) {\n                    newHeight -= newY - snappedY;\n                }\n            }\n        }\n        if (el.aspectLocked || h.controller.lockAspect) {\n            const aspect = b.width / b.height;\n            newWidth = newHeight * aspect;\n        }\n        const resizeSize = new Size(\n            Math.max(newWidth, h.controller.minElementSize.width),\n            Math.max(newHeight, h.controller.minElementSize.height)\n        );\n        h.controller.setElementResizeSize(el, resizeSize);\n        h.controller.invalidate();\n    }\n\n    /**\n     * Handles movement of right middle rectangular sizing handle\n     * @param h - Handle being moved\n     * @param args - Handle movement info\n     */\n    public static sizeRectangleRightMiddle(h: Handle, args: HandleMovedArgs): void {\n        const el = h.element;\n        const b = el.getBounds();\n        if (!b) {\n            throw new Error(ErrorMessages.BoundsAreUndefined);\n        }\n        let newWidth = b.width + args.deltaX;\n        let newHeight = b.height;\n        if (newWidth < h.controller.minElementSize.width || newHeight < h.controller.minElementSize.height) {\n            return;\n        }\n        if (h.controller.snapToGrid) {\n            const newX = b.x + b.width + args.deltaX;\n            const snappedX = h.controller.getNearestSnapX(newX);\n            if (snappedX !== newX) {\n                if (newWidth + newX - snappedX >= h.controller.minElementSize.width) {\n                    newWidth -= newX - snappedX;\n                }\n            }\n        }\n        if (el.aspectLocked || h.controller.lockAspect) {\n            const aspect = b.width / b.height;\n            newHeight = newWidth / aspect;\n        }\n        const resizeSize = new Size(\n            Math.max(newWidth, h.controller.minElementSize.width),\n            Math.max(newHeight, h.controller.minElementSize.height)\n        );\n        h.controller.setElementResizeSize(el, resizeSize);\n        h.controller.invalidate();\n    }\n\n    /**\n     * Handles movement of right bottom rectangular sizing handle\n     * @param h - Handle being moved\n     * @param args - Handle movement info\n     */\n    public static sizeRectangleRightBottom(h: Handle, args: HandleMovedArgs): void {\n        const el = h.element;\n        const b = el.getBounds();\n        if (!b) {\n            throw new Error(ErrorMessages.BoundsAreUndefined);\n        }\n        let newWidth = b.width + args.deltaX;\n        let newHeight = b.height + args.deltaY;\n        if (newWidth < h.controller.minElementSize.width || newHeight < h.controller.minElementSize.height) {\n            return;\n        }\n        if (h.controller.snapToGrid) {\n            const newX = b.x + b.width + args.deltaX;\n            const snappedX = h.controller.getNearestSnapX(newX);\n            if (snappedX !== newX) {\n                if (newWidth + newX - snappedX >= h.controller.minElementSize.width) {\n                    newWidth -= newX - snappedX;\n                }\n            }\n            const newY = b.y + b.height + args.deltaY;\n            const snappedY = h.controller.getNearestSnapY(newY);\n            if (snappedY !== newY) {\n                if (newHeight + newY - snappedY >= h.controller.minElementSize.height) {\n                    newHeight -= newY - snappedY;\n                }\n            }\n        }\n        if (el.aspectLocked || h.controller.lockAspect) {\n            const aspect = b.width / b.height;\n            newHeight = newWidth / aspect;\n        }\n        const resizeSize = new Size(\n            Math.max(newWidth, h.controller.minElementSize.width),\n            Math.max(newHeight, h.controller.minElementSize.height)\n        );\n        h.controller.setElementResizeSize(el, resizeSize);\n        h.controller.invalidate();\n    }\n\n    /**\n     * Handles movement of right top rectangular sizing handle\n     * @param h - Handle being moved\n     * @param args - Handle movement info\n     */\n    public static sizeRectangleRightTop(h: Handle, args: HandleMovedArgs): void {\n        const el = h.element;\n        const b = el.getBounds();\n        if (!b) {\n            throw new Error(ErrorMessages.BoundsAreUndefined);\n        }\n        let newY = b.y + args.deltaY;\n        let newWidth = b.width + args.deltaX;\n        let newHeight = b.height - args.deltaY;\n        if (newWidth < h.controller.minElementSize.width || newHeight < h.controller.minElementSize.height) {\n            return;\n        }\n        if (h.controller.snapToGrid) {\n            const newX = b.x + b.width + args.deltaX;\n            const snappedX = h.controller.getNearestSnapX(newX);\n            if (snappedX !== newX) {\n                if (newWidth + newX - snappedX >= h.controller.minElementSize.width) {\n                    newWidth -= newX - snappedX;\n                }\n            }\n            const snappedY = h.controller.getNearestSnapY(newY);\n            if (snappedY !== newY) {\n                if (newHeight + newY - snappedY >= h.controller.minElementSize.height) {\n                    newHeight += newY - snappedY;\n                    newY = snappedY;\n                }\n            }\n        }\n        if (el.aspectLocked || h.controller.lockAspect) {\n            const aspect = b.width / b.height;\n            const adjustedHeight = newWidth / aspect;\n            newY -= adjustedHeight - newHeight;\n            newHeight = adjustedHeight;\n        }\n        const moveLocation = new Point(b.x, newY);\n        const resizeSize = new Size(\n            Math.max(newWidth, h.controller.minElementSize.width),\n            Math.max(newHeight, h.controller.minElementSize.height)\n        );\n        h.controller.setElementMoveLocation(el, moveLocation, resizeSize);\n        h.controller.setElementResizeSize(el, resizeSize, moveLocation);\n        h.controller.invalidate();\n    }\n\n    /**\n     * Handles movement of top center rectangular sizing handle\n     * @param h - Handle being moved\n     * @param args - Handle movement info\n     */\n    public static sizeRectangleTopCenter(h: Handle, args: HandleMovedArgs): void {\n        const el = h.element;\n        const b = el.getBounds();\n        if (!b) {\n            throw new Error(ErrorMessages.BoundsAreUndefined);\n        }\n        let newY = b.y + args.deltaY;\n        let newHeight = b.height - args.deltaY;\n        let newWidth = b.width;\n        if (newWidth < h.controller.minElementSize.width || newHeight < h.controller.minElementSize.height) {\n            return;\n        }\n        if (h.controller.snapToGrid) {\n            const snappedY = h.controller.getNearestSnapY(newY);\n            if (snappedY !== newY) {\n                if (newHeight + newY - snappedY >= h.controller.minElementSize.height) {\n                    newHeight += newY - snappedY;\n                    newY = snappedY;\n                }\n            }\n        }\n        if (el.aspectLocked || h.controller.lockAspect) {\n            const aspect = b.width / b.height;\n            newWidth = newHeight * aspect;\n        }\n        const moveLocation = new Point(b.x, newY);\n        const resizeSize = new Size(\n            Math.max(newWidth, h.controller.minElementSize.width),\n            Math.max(newHeight, h.controller.minElementSize.height)\n        );\n        h.controller.setElementMoveLocation(el, moveLocation, resizeSize);\n        h.controller.setElementResizeSize(el, resizeSize, moveLocation);\n        h.controller.invalidate();\n    }\n\n    /**\n     * Handles movement of left top rectangular sizing handle\n     * @param h - Handle being moved\n     * @param args - Handle movement info\n     */\n    public static sizeRectangleLeftTop(h: Handle, args: HandleMovedArgs): void {\n        const el = h.element;\n        const b = el.getBounds();\n        if (!b) {\n            throw new Error(ErrorMessages.BoundsAreUndefined);\n        }\n        let newX = b.x + args.deltaX;\n        let newY = b.y + args.deltaY;\n        let newWidth = b.width - args.deltaX;\n        let newHeight = b.height - args.deltaY;\n        if (newWidth < h.controller.minElementSize.width || newHeight < h.controller.minElementSize.height) {\n            return;\n        }\n        if (h.controller.snapToGrid) {\n            const snappedX = h.controller.getNearestSnapX(newX);\n            if (snappedX !== newX) {\n                if (newWidth + newX - snappedX >= h.controller.minElementSize.width) {\n                    newWidth += newX - snappedX;\n                    newX = snappedX;\n                }\n            }\n            const snappedY = h.controller.getNearestSnapY(newY);\n            if (snappedY !== newY) {\n                if (newHeight + newY - snappedY >= h.controller.minElementSize.height) {\n                    newHeight += newY - snappedY;\n                    newY = snappedY;\n                }\n            }\n        }\n        if (el.aspectLocked || h.controller.lockAspect) {\n            const aspect = b.width / b.height;\n            const adjustedHeight = newWidth / aspect;\n            newY -= adjustedHeight - newHeight;\n            newHeight = adjustedHeight;\n        }\n        const moveLocation = new Point(newX, newY);\n        const resizeSize = new Size(\n            Math.max(newWidth, h.controller.minElementSize.width),\n            Math.max(newHeight, h.controller.minElementSize.height)\n        );\n        h.controller.setElementMoveLocation(el, moveLocation, resizeSize);\n        h.controller.setElementResizeSize(el, resizeSize, moveLocation);\n        h.controller.invalidate();\n    }\n\n    /**\n     * Handles movement of point container point handle\n     * @param h - Handle being moved\n     * @param args - Handle movement info\n     */\n    public static movePointContainerPoint(h: Handle, args: HandleMovedArgs): void {\n        const el = h.element;\n        const pointIndex = h.handleIndex;\n        if (pointIndex === undefined) {\n            return;\n        }\n        let depth = PointDepth.Simple;\n        if (h.controller.selectedElementCount() === 1) {\n            depth = PointDepth.Full;\n        }\n        const p = el.getPointAt(pointIndex, depth);\n        let newX = p.x + args.deltaX;\n        let newY = p.y + args.deltaY;\n        if (h.controller.snapToGrid) {\n            newX = h.controller.getNearestSnapX(newX);\n            newY = h.controller.getNearestSnapY(newY);\n        }\n        h.controller.movingPointLocation = new Point(newX, newY);\n        const dc: DesignController = h.controller as DesignController;\n        dc.clearElementMoveLocations();\n        dc.clearElementResizeSizes();\n        el.clearBounds();\n        h.controller.invalidate();\n    }\n\n    /**\n     * X coordinate\n     */\n    public x: number;\n\n    /**\n     * Y coordinate\n     */\n    public y: number;\n\n    /**\n     * Can handle be moved horizontally\n     */\n    public canMoveHorizontal: boolean;\n\n    /**\n     * Can handle be moved vertically\n     */\n    public canMoveVertical: boolean;\n\n    /**\n     * CSS handle cursor style\n     */\n    public cursor: string;\n\n    /**\n     * Element associated with handle\n     */\n    public element: ElementBase;\n\n    /**\n     * Design controller\n     */\n    public controller: DesignController;\n\n    /**\n     * Handle region\n     */\n    public region?: Region;\n\n    /**\n     * Associated bar region\n     */\n    public barRegion?: Region;\n\n    /**\n     * Handle ID\n     */\n    public handleId: any;\n\n    /**\n     * Handle index\n     */\n    public handleIndex?: number;\n\n    /**\n     * Rendering scale\n     */\n    public scale: number;\n\n    /**\n     * Handle shape\n     */\n    public shape?: string;\n\n    /**\n     * Handles connected to this handle\n     */\n    public connectedHandles: Handle[] = [];\n\n    /**\n     * Movement handler function\n     */\n    public handleMoved?: HandleMovedHandler;\n\n    /**\n     * Represents an element design control handle\n     * @param x - X coordinate\n     * @param y - Y coordinate\n     */\n    constructor(x: number, y: number, element: ElementBase, controller: DesignController) {\n        this.getBounds = this.getBounds.bind(this);\n        this.draw = this.draw.bind(this);\n\n        this.x = x;\n        this.y = y;\n        this.element = element;\n        this.controller = controller;\n        this.canMoveHorizontal = true;\n        this.canMoveVertical = true;\n        this.cursor = 'crosshair';\n        this.scale = 1.0;\n    }\n\n    /**\n     * Returns handle bounding region\n     */\n    public getBounds(): Region {\n        let width = Handle.Size.width;\n        let height = Handle.Size.height;\n        if (this.scale && this.scale !== 0) {\n            height /= this.scale;\n            width /= this.scale;\n        }\n        return new Region(this.x - width / 2, this.y - height / 2, width, height);\n    }\n\n    /**\n     * Renders handle to 2D canvas context\n     * @param c - Rendering context\n     */\n    public draw(c: CanvasRenderingContext2D): void {\n        const b = this.region;\n        if (!b) {\n            throw new Error(ErrorMessages.BoundsAreUndefined);\n        }\n\n        // Circle\n        if (this.shape === 'circle') {\n            c.beginPath();\n            c.arc(b.x + b.width / 2, b.y + b.height / 2, b.width / 2, 0, 2 * Math.PI, false);\n            c.fillStyle = 'black';\n            c.fill();\n            c.strokeStyle = 'white';\n            c.lineWidth = 0.5 / this.scale;\n            c.stroke();\n        }\n        else {\n            // Rectangle\n            c.fillStyle = 'white';\n            c.fillRect(b.x, b.y, b.width, b.height);\n            c.strokeStyle = 'black';\n            c.lineWidth = 0.5 / this.scale;\n            c.strokeRect(b.x, b.y, b.width, b.height);\n        }\n    }\n}\n\nexport type HandleMovedHandler = (h: Handle, args: HandleMovedArgs) => void;\n","import { Color } from '../core/color';\nimport { Model } from '../core/model';\nimport { ScalingInfo } from '../core/scaling-info';\nimport { ElementBase } from '../elements/element-base';\nimport { GradientFillStop } from './gradient-fill-stop';\nimport { LinearGradientFill } from './linear-gradient-fill';\nimport { RadialGradientFill } from './radial-gradient-fill';\n\n/**\n * Describes element fill\n */\nexport class FillInfo {\n    public static getNoFillInfo() {\n        const fillInfo = new FillInfo('none');\n        return fillInfo;\n    }\n\n    public static getColorFillInfo(fillColor: string, fillOpacity: number) {\n        const fillInfo = new FillInfo('color');\n        fillInfo.color = fillColor;\n        fillInfo.opacity = fillOpacity;\n        return fillInfo;\n    }\n\n    public static getImageFillInfo(fillSource: string, fillOpacity: number, fillScale?: number) {\n        const fillInfo = new FillInfo('image');\n        fillInfo.source = fillSource;\n        fillInfo.opacity = fillOpacity;\n        fillInfo.scale = fillScale;\n        return fillInfo;\n    }\n\n    public static getModelFillInfo(fillSource: string, fillOpacity: number, fillScale?: number) {\n        const fillInfo = new FillInfo('model');\n        fillInfo.source = fillSource;\n        fillInfo.opacity = fillOpacity;\n        fillInfo.scale = fillScale;\n        return fillInfo;\n    }\n\n    public static getLinearGradientFillInfo(start: string, end: string, stops: GradientFillStop[]) {\n        const fillInfo = new FillInfo('linear');\n        fillInfo.start = start;\n        fillInfo.end = end;\n        fillInfo.fillStops = stops.slice();\n        return fillInfo;\n    }\n\n    public static getRadialGradientFillInfo(\n        center: string,\n        focus: string,\n        radiusX: number,\n        radiusY: number,\n        stops: GradientFillStop[]\n    ) {\n        const fillInfo = new FillInfo('radial');\n        fillInfo.center = center;\n        fillInfo.focus = focus;\n        fillInfo.radiusX = radiusX;\n        fillInfo.radiusY = radiusY;\n        fillInfo.fillStops = stops.slice();\n        return fillInfo;\n    }\n\n    public static getFillInfo(el: ElementBase) {\n        if (el.fill) {\n            const fill = el.fill;\n            if (fill instanceof LinearGradientFill) {\n                return FillInfo.getLinearGradientFillInfo(fill.start, fill.end, fill.stops);\n            }\n            else if (fill instanceof RadialGradientFill) {\n                return FillInfo.getRadialGradientFillInfo(\n                    fill.center,\n                    fill.focus,\n                    fill.radiusX,\n                    fill.radiusY,\n                    fill.stops\n                );\n            }\n            else if (typeof fill === 'string') {\n                if (fill.toLowerCase().substring(0, 6) === 'image(') {\n                    let key = fill.substring(6, fill.length - 1);\n                    let opacity = 1;\n                    if (key.indexOf(';') !== -1) {\n                        const parts = key.split(';');\n                        opacity = parseFloat(parts[0]);\n                        key = parts[1];\n                    }\n                    let scaling = new ScalingInfo();\n                    if (el.model) {\n                        scaling = el.model.getFillScale(el);\n                    }\n                    else if (el instanceof Model) {\n                        scaling = el.getFillScale(el);\n                    }\n                    let fillScale = 1.0;\n                    if (scaling.rx !== 1) {\n                        fillScale = scaling.rx;\n                    }\n                    else if (scaling.ry !== 1) {\n                        fillScale = scaling.ry;\n                    }\n                    return FillInfo.getImageFillInfo(key, opacity * 255.0, fillScale);\n                }\n                else if (fill.toLowerCase().substring(0, 6) === 'model(') {\n                    let key = fill.substring(6, fill.length - 1);\n                    let opacity = 1;\n                    if (key.indexOf(';') !== -1) {\n                        const parts = key.split(';');\n                        opacity = parseFloat(parts[0]);\n                        key = parts[1];\n                    }\n                    let scaling = new ScalingInfo();\n                    if (el.model) {\n                        scaling = el.model.getFillScale(el);\n                    }\n                    else if (el instanceof Model) {\n                        scaling = el.getFillScale(el);\n                    }\n                    let fillScale = 1.0;\n                    if (scaling.rx !== 1) {\n                        fillScale = scaling.rx;\n                    }\n                    else if (scaling.ry !== 1) {\n                        fillScale = scaling.ry;\n                    }\n                    return FillInfo.getModelFillInfo(key, opacity * 255.0, fillScale);\n                }\n                else {\n                    const color = Color.parse(fill);\n                    let opacity = 255;\n                    if (color.a !== 255) {\n                        opacity = color.a;\n                        color.a = 255;\n                    }\n                    return FillInfo.getColorFillInfo(color.toHexString(), opacity);\n                }\n            }\n        }\n        else {\n            return FillInfo.getNoFillInfo();\n        }\n    }\n\n    public type: string;\n    public color?: string;\n    public opacity?: number;\n    public source?: string;\n    public scale?: number;\n\n    public start?: string;\n    public end?: string;\n\n    public center?: string;\n    public focus?: string;\n    public radiusX?: number;\n    public radiusY?: number;\n\n    public fillStops?: GradientFillStop[];\n\n    private constructor(fillType: string) {\n        this.type = fillType;\n    }\n}\n","import { ErrorMessages } from '../../core/error-messages';\r\nimport { TransitionRenderer } from '../../transitions/transitions';\r\nimport { Surface } from '../surface';\r\nimport { SurfacePane } from '../surface-pane';\r\nimport { PaneTransition } from './pane-transition';\r\n\r\n/**\r\n * Fade pane transition\r\n */\r\nexport class PaneTransitionFade extends PaneTransition {\r\n    public duration: number;\r\n    public startTime?: number;\r\n    public source?: Surface;\r\n    public timer?: number;\r\n\r\n    constructor(pane: SurfacePane, target: Surface, callback: (pane: SurfacePane) => void, duration: number) {\r\n        super(pane, target, callback);\r\n        this.tick = this.tick.bind(this);\r\n        this.duration = duration;\r\n    }\r\n\r\n    public start() {\r\n        const self = this;\r\n        if (!self.pane || !self.target) {\r\n            return;\r\n        }\r\n        self.source = self.pane.childSurface;\r\n        self.onStart();\r\n        self.target.setOpacity(0);\r\n        self.bind(surface => {\r\n            // Save start time after preparation\r\n            self.startTime = performance.now();\r\n\r\n            // Fade in\r\n            self.timer = setInterval(self.tick, 15);\r\n        }, false);\r\n    }\r\n\r\n    public tick() {\r\n        if (!this.target) {\r\n            return;\r\n        }\r\n        // Get elapsed time since start\r\n        if (!this.startTime) {\r\n            throw new Error(ErrorMessages.StartTimeIsUndefined);\r\n        }\r\n        if (!this.source) {\r\n            throw new Error(ErrorMessages.SourceUndefined);\r\n        }\r\n        const elapsed: number = performance.now() - this.startTime;\r\n\r\n        // Map elapsed time to offset\r\n        let offset: number = elapsed / (this.duration * 1000);\r\n\r\n        if (offset >= 1 || isNaN(offset)) {\r\n            this.target.setOpacity(1);\r\n            if (this.timer) {\r\n                clearInterval(this.timer);\r\n                this.timer = undefined;\r\n            }\r\n            this.source.unbind();\r\n            this.onComplete();\r\n        }\r\n        else {\r\n            // Apply easing\r\n            offset = TransitionRenderer.easeInOutCubic(offset);\r\n\r\n            this.target.setOpacity(offset);\r\n            this.source.setOpacity(1 - offset);\r\n        }\r\n    }\r\n}\r\n","import { Surface } from '../surface';\r\nimport { SurfacePane } from '../surface-pane';\r\nimport { PaneTransition } from './pane-transition';\r\n/**\r\n * Dummy (No) Pane Transition\r\n */\r\nexport class PaneTransitionNone extends PaneTransition {\r\n    constructor(pane: SurfacePane, target: Surface, callback: (pane: SurfacePane) => void) {\r\n        super(pane, target, callback);\r\n    }\r\n\r\n    public start() {\r\n        const self = this;\r\n        if (!self.pane) {\r\n            return;\r\n        }\r\n        const source = self.pane.childSurface;\r\n        self.onStart();\r\n        self.bind(surface => {\r\n            source.unbind();\r\n            self.onComplete();\r\n        }, false);\r\n    }\r\n}\r\n","import { TransitionRenderer } from '../../transitions/transitions';\r\nimport { Surface } from '../surface';\r\nimport { SurfacePane } from '../surface-pane';\r\nimport { PaneTransition } from './pane-transition';\r\nimport { PaneTransitionDirection } from './pane-transition-direction';\r\n\r\n/**\r\n * Push pane transition\r\n */\r\nexport class PaneTransitionPush extends PaneTransition {\r\n    public duration: number;\r\n    public startTime?: number;\r\n    public source?: Surface;\r\n    public timer?: number;\r\n    public direction: PaneTransitionDirection;\r\n\r\n    constructor(\r\n        pane: SurfacePane,\r\n        target: Surface,\r\n        callback: (pane: SurfacePane) => void,\r\n        duration: number,\r\n        direction: PaneTransitionDirection\r\n    ) {\r\n        super(pane, target, callback);\r\n        this.tick = this.tick.bind(this);\r\n        this.duration = duration;\r\n        this.direction = direction;\r\n    }\r\n\r\n    public start() {\r\n        const self = this;\r\n        if (!self.pane || !self.target) {\r\n            return;\r\n        }\r\n        self.source = self.pane.childSurface;\r\n        self.onStart();\r\n\r\n        switch (self.direction) {\r\n            case PaneTransitionDirection.Left:\r\n                self.target.setTranslateX(self.pane.width);\r\n                break;\r\n\r\n            case PaneTransitionDirection.Right:\r\n                self.target.setTranslateX(-self.target.width);\r\n                break;\r\n\r\n            case PaneTransitionDirection.Up:\r\n                self.target.setTranslateY(self.pane.height);\r\n                break;\r\n\r\n            case PaneTransitionDirection.Down:\r\n                self.target.setTranslateY(-self.target.height);\r\n                break;\r\n        }\r\n        self.bind(surface => {\r\n            // Save start time after preparation\r\n            self.startTime = performance.now();\r\n\r\n            // Fade in\r\n            self.timer = setInterval(self.tick, 15);\r\n        }, false);\r\n    }\r\n\r\n    public tick() {\r\n        if (!this.pane || !this.target) {\r\n            return;\r\n        }\r\n\r\n        // Get elapsed time since start\r\n        let elapsed = 0;\r\n        if (!this.source) {\r\n            return;\r\n        }\r\n        if (this.startTime) {\r\n            elapsed = performance.now() - this.startTime;\r\n        }\r\n\r\n        // Map elapsed time to offset\r\n        let offset: number = elapsed / (this.duration * 1000);\r\n\r\n        if (offset >= 1 || isNaN(offset)) {\r\n            this.target.setTranslateX(0);\r\n            this.target.setTranslateY(0);\r\n            if (this.timer) {\r\n                clearInterval(this.timer);\r\n                this.timer = undefined;\r\n            }\r\n            this.source.unbind();\r\n            this.onComplete();\r\n        }\r\n        else {\r\n            // Apply easing\r\n            offset = TransitionRenderer.easeInOutCubic(offset);\r\n\r\n            switch (this.direction) {\r\n                case PaneTransitionDirection.Left:\r\n                    {\r\n                        const offsetX = offset * this.pane.width;\r\n                        this.target.setTranslateX(this.pane.width - offsetX);\r\n                        this.source.setTranslateX(-offsetX);\r\n                    }\r\n                    break;\r\n\r\n                case PaneTransitionDirection.Right:\r\n                    {\r\n                        const offsetX = offset * this.target.width;\r\n                        this.target.setTranslateX(-this.target.width + offsetX);\r\n                        this.source.setTranslateX(offsetX);\r\n                    }\r\n                    break;\r\n\r\n                case PaneTransitionDirection.Up:\r\n                    {\r\n                        const offsetY = offset * this.pane.height;\r\n                        this.target.setTranslateY(this.pane.height - offsetY);\r\n                        this.source.setTranslateY(-offsetY);\r\n                    }\r\n                    break;\r\n\r\n                case PaneTransitionDirection.Down:\r\n                    {\r\n                        const offsetY = offset * this.target.height;\r\n                        this.target.setTranslateY(-this.target.height + offsetY);\r\n                        this.source.setTranslateY(offsetY);\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { ErrorMessages } from '../../core/error-messages';\r\nimport { TransitionRenderer } from '../../transitions/transitions';\r\nimport { Surface } from '../surface';\r\nimport { SurfacePane } from '../surface-pane';\r\nimport { PaneTransition } from './pane-transition';\r\nimport { PaneTransitionDirection } from './pane-transition-direction';\r\n\r\n/**\r\n * Reveal pane transition\r\n */\r\nexport class PaneTransitionReveal extends PaneTransition {\r\n    public duration: number;\r\n    public startTime?: number;\r\n    public source?: Surface;\r\n    public timer?: number;\r\n    public direction: PaneTransitionDirection;\r\n\r\n    constructor(\r\n        pane: SurfacePane,\r\n        target: Surface,\r\n        callback: (pane: SurfacePane) => void,\r\n        duration: number,\r\n        direction: PaneTransitionDirection\r\n    ) {\r\n        super(pane, target, callback);\r\n        this.tick = this.tick.bind(this);\r\n        this.duration = duration;\r\n        this.direction = direction;\r\n    }\r\n\r\n    public start() {\r\n        const self = this;\r\n        if (!self.pane) {\r\n            return;\r\n        }\r\n        self.source = self.pane.childSurface;\r\n        self.onStart();\r\n\r\n        self.bind(surface => {\r\n            // Save start time after preparation\r\n            self.startTime = performance.now();\r\n\r\n            // Fade in\r\n            self.timer = setInterval(self.tick, 15);\r\n        }, true);\r\n    }\r\n\r\n    public tick() {\r\n        if (!this.pane) {\r\n            return;\r\n        }\r\n        if (!this.startTime) {\r\n            throw new Error(ErrorMessages.StartTimeIsUndefined);\r\n        }\r\n        if (!this.source) {\r\n            throw new Error(ErrorMessages.SourceUndefined);\r\n        }\r\n        // Get elapsed time since start\r\n        const elapsed: number = performance.now() - this.startTime;\r\n\r\n        // Map elapsed time to offset\r\n        let offset: number = elapsed / (this.duration * 1000);\r\n\r\n        if (offset >= 1 || isNaN(offset)) {\r\n            if (this.timer) {\r\n                clearInterval(this.timer);\r\n                this.timer = undefined;\r\n            }\r\n            this.source.unbind();\r\n            this.onComplete();\r\n        }\r\n        else {\r\n            // Apply easing\r\n            offset = TransitionRenderer.easeInOutCubic(offset);\r\n\r\n            switch (this.direction) {\r\n                case PaneTransitionDirection.Left:\r\n                    {\r\n                        const offsetX = Math.floor(offset * this.source.width);\r\n                        this.source.setTranslateX(-offsetX);\r\n                    }\r\n                    break;\r\n\r\n                case PaneTransitionDirection.LeftUp:\r\n                    {\r\n                        const offsetX = Math.floor(offset * this.source.width);\r\n                        const offsetY = Math.floor(offset * this.source.height);\r\n                        this.source.setTranslateX(-offsetX);\r\n                        this.source.setTranslateY(-offsetY);\r\n                    }\r\n                    break;\r\n\r\n                case PaneTransitionDirection.LeftDown:\r\n                    {\r\n                        const offsetX = Math.floor(offset * this.source.width);\r\n                        const offsetY = Math.floor(offset * this.source.height);\r\n                        this.source.setTranslateX(-offsetX);\r\n                        this.source.setTranslateY(offsetY);\r\n                    }\r\n                    break;\r\n\r\n                case PaneTransitionDirection.Right:\r\n                    {\r\n                        const offsetX = Math.floor(offset * this.pane.width);\r\n                        this.source.setTranslateX(offsetX);\r\n                    }\r\n                    break;\r\n\r\n                case PaneTransitionDirection.RightUp:\r\n                    {\r\n                        const offsetX = Math.floor(offset * this.pane.width);\r\n                        const offsetY = Math.floor(offset * this.source.height);\r\n                        this.source.setTranslateX(offsetX);\r\n                        this.source.setTranslateY(-offsetY);\r\n                    }\r\n                    break;\r\n\r\n                case PaneTransitionDirection.RightDown:\r\n                    {\r\n                        const offsetX = Math.floor(offset * this.pane.width);\r\n                        const offsetY = Math.floor(offset * this.source.height);\r\n                        this.source.setTranslateX(offsetX);\r\n                        this.source.setTranslateY(offsetY);\r\n                    }\r\n                    break;\r\n\r\n                case PaneTransitionDirection.Up:\r\n                    {\r\n                        const offsetY = Math.floor(offset * this.source.height);\r\n                        this.source.setTranslateY(-offsetY);\r\n                    }\r\n                    break;\r\n\r\n                case PaneTransitionDirection.Down:\r\n                    {\r\n                        const offsetY = Math.floor(offset * this.source.height);\r\n                        this.source.setTranslateY(offsetY);\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { ErrorMessages } from '../../core/error-messages';\r\nimport { TransitionRenderer } from '../../transitions/transitions';\r\nimport { Surface } from '../surface';\r\nimport { SurfacePane } from '../surface-pane';\r\nimport { PaneTransition } from './pane-transition';\r\nimport { PaneTransitionDirection } from './pane-transition-direction';\r\n\r\n/**\r\n * Slide pane transition\r\n */\r\nexport class PaneTransitionSlide extends PaneTransition {\r\n    public duration: number;\r\n    public startTime?: number;\r\n    public source?: Surface;\r\n    public timer?: number;\r\n    public direction: PaneTransitionDirection;\r\n\r\n    constructor(\r\n        pane: SurfacePane,\r\n        target: Surface,\r\n        callback: (pane: SurfacePane) => void,\r\n        duration: number,\r\n        direction: PaneTransitionDirection\r\n    ) {\r\n        super(pane, target, callback);\r\n        this.tick = this.tick.bind(this);\r\n        this.duration = duration;\r\n        this.direction = direction;\r\n    }\r\n\r\n    public start() {\r\n        const self = this;\r\n        if (!self.pane || !self.target) {\r\n            return;\r\n        }\r\n        self.source = self.pane.childSurface;\r\n        self.onStart();\r\n\r\n        self.bind(surface => {\r\n            if (!self.pane || !self.target) {\r\n                return;\r\n            }\r\n            if (!self.source) {\r\n                throw new Error(ErrorMessages.SourceUndefined);\r\n            }\r\n            switch (self.direction) {\r\n                case PaneTransitionDirection.Left:\r\n                    {\r\n                        self.target.setTranslateX(self.pane.width);\r\n                    }\r\n                    break;\r\n\r\n                case PaneTransitionDirection.LeftUp:\r\n                    {\r\n                        self.target.setTranslateX(self.pane.width);\r\n                        self.target.setTranslateY(self.pane.height);\r\n                    }\r\n                    break;\r\n\r\n                case PaneTransitionDirection.LeftDown:\r\n                    {\r\n                        self.target.setTranslateX(self.pane.width);\r\n                        self.target.setTranslateY(-self.target.height);\r\n                    }\r\n                    break;\r\n\r\n                case PaneTransitionDirection.Right:\r\n                    {\r\n                        self.target.setTranslateX(-self.source.width);\r\n                    }\r\n                    break;\r\n\r\n                case PaneTransitionDirection.RightUp:\r\n                    {\r\n                        self.target.setTranslateX(-self.source.width);\r\n                        self.target.setTranslateY(self.pane.height);\r\n                    }\r\n                    break;\r\n\r\n                case PaneTransitionDirection.RightDown:\r\n                    {\r\n                        self.target.setTranslateX(-self.source.width);\r\n                        self.target.setTranslateY(-self.source.height);\r\n                    }\r\n                    break;\r\n\r\n                case PaneTransitionDirection.Up:\r\n                    {\r\n                        self.target.setTranslateY(self.pane.height);\r\n                    }\r\n                    break;\r\n\r\n                case PaneTransitionDirection.Down:\r\n                    {\r\n                        self.target.setTranslateY(-self.source.height);\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            // Save start time after preparation\r\n            self.startTime = performance.now();\r\n\r\n            // Fade in\r\n            self.timer = setInterval(self.tick, 15);\r\n        }, false);\r\n    }\r\n\r\n    public tick() {\r\n        if (!this.pane || !this.target) {\r\n            return;\r\n        }\r\n\r\n        // Get elapsed time since start\r\n        if (!this.startTime) {\r\n            throw new Error(ErrorMessages.StartTimeIsUndefined);\r\n        }\r\n        if (!this.source) {\r\n            throw new Error(ErrorMessages.SourceUndefined);\r\n        }\r\n        const elapsed: number = performance.now() - this.startTime;\r\n\r\n        // Map elapsed time to offset\r\n        let offset: number = elapsed / (this.duration * 1000);\r\n\r\n        if (offset >= 1 || isNaN(offset)) {\r\n            this.target.setTranslateX(0);\r\n            this.target.setTranslateY(0);\r\n            if (this.timer) {\r\n                clearInterval(this.timer);\r\n                this.timer = undefined;\r\n            }\r\n            this.source.unbind();\r\n            this.onComplete();\r\n        }\r\n        else {\r\n            // Apply easing\r\n            offset = TransitionRenderer.easeInOutCubic(offset);\r\n\r\n            switch (this.direction) {\r\n                case PaneTransitionDirection.Left:\r\n                    {\r\n                        const offsetX = Math.floor(offset * this.pane.width);\r\n                        this.target.setTranslateX(this.pane.width - offsetX);\r\n                    }\r\n                    break;\r\n\r\n                case PaneTransitionDirection.LeftUp:\r\n                    {\r\n                        const offsetX = Math.floor(offset * this.pane.width);\r\n                        const offsetY = Math.floor(offset * this.pane.height);\r\n                        this.target.setTranslateX(this.pane.width - offsetX);\r\n                        this.target.setTranslateY(this.pane.height - offsetY);\r\n                    }\r\n                    break;\r\n\r\n                case PaneTransitionDirection.LeftDown:\r\n                    {\r\n                        const offsetX = Math.floor(offset * this.pane.width);\r\n                        const offsetY = Math.floor(offset * this.target.height);\r\n                        this.target.setTranslateX(this.pane.width - offsetX);\r\n                        this.target.setTranslateY(offsetY - this.target.height);\r\n                    }\r\n                    break;\r\n\r\n                case PaneTransitionDirection.Right:\r\n                    {\r\n                        const offsetX = Math.floor(offset * this.source.width);\r\n                        this.target.setTranslateX(offsetX - this.source.width);\r\n                    }\r\n                    break;\r\n\r\n                case PaneTransitionDirection.RightUp:\r\n                    {\r\n                        const offsetX = Math.floor(offset * this.source.width);\r\n                        const offsetY = Math.floor(offset * this.pane.height);\r\n                        this.target.setTranslateX(offsetX - this.source.width);\r\n                        this.target.setTranslateY(this.pane.height - offsetY);\r\n                    }\r\n                    break;\r\n\r\n                case PaneTransitionDirection.RightDown:\r\n                    {\r\n                        const offsetX = Math.floor(offset * this.source.width);\r\n                        const offsetY = Math.floor(offset * this.target.height);\r\n                        this.target.setTranslateX(offsetX - this.source.width);\r\n                        this.target.setTranslateY(offsetY - this.target.height);\r\n                    }\r\n                    break;\r\n\r\n                case PaneTransitionDirection.Up:\r\n                    {\r\n                        const offsetY = Math.floor(offset * this.pane.height);\r\n                        this.target.setTranslateY(this.pane.height - offsetY);\r\n                    }\r\n                    break;\r\n\r\n                case PaneTransitionDirection.Down:\r\n                    {\r\n                        const offsetY = Math.floor(offset * this.target.height);\r\n                        this.target.setTranslateY(offsetY - this.target.height);\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { ErrorMessages } from '../../core/error-messages';\r\nimport { TransitionRenderer } from '../../transitions/transitions';\r\nimport { Surface } from '../surface';\r\nimport { SurfacePane } from '../surface-pane';\r\nimport { PaneTransition } from './pane-transition';\r\nimport { PaneTransitionDirection } from './pane-transition-direction';\r\n\r\n/**\r\n * Wipe pane transition\r\n */\r\nexport class PaneTransitionWipe extends PaneTransition {\r\n    public duration: number;\r\n    public startTime?: number;\r\n    public source?: Surface;\r\n    public timer?: number;\r\n    public direction: PaneTransitionDirection;\r\n\r\n    constructor(\r\n        pane: SurfacePane,\r\n        target: Surface,\r\n        callback: (pane: SurfacePane) => void,\r\n        duration: number,\r\n        direction: PaneTransitionDirection\r\n    ) {\r\n        super(pane, target, callback);\r\n        this.tick = this.tick.bind(this);\r\n        this.duration = duration;\r\n        this.direction = direction;\r\n    }\r\n\r\n    public start() {\r\n        const self = this;\r\n        if (!self.pane) {\r\n            return;\r\n        }\r\n        self.source = self.pane.childSurface;\r\n        self.onStart();\r\n\r\n        let onBottom = true;\r\n\r\n        switch (this.direction) {\r\n            case PaneTransitionDirection.Out:\r\n            case PaneTransitionDirection.OutX:\r\n            case PaneTransitionDirection.OutY:\r\n                onBottom = false;\r\n                break;\r\n        }\r\n\r\n        self.bind(surface => {\r\n            if (!self.pane || !self.target) {\r\n                return;\r\n            }\r\n            if (!self.pane.surface) {\r\n                throw new Error(ErrorMessages.PaneSurfaceIsUndefined);\r\n            }\r\n            if (!self.target.div) {\r\n                throw new Error(ErrorMessages.HostElementUndefined);\r\n            }\r\n\r\n            const scale = self.pane.surface.scale;\r\n\r\n            switch (self.direction) {\r\n                case PaneTransitionDirection.Out:\r\n                    {\r\n                        const halfX = self.pane.width * scale / 2;\r\n                        const halfY = self.pane.height * scale / 2;\r\n                        self.target.div.style.clip =\r\n                            'rect(' + halfY + 'px, ' + halfX + 'px, ' + halfY + 'px, ' + halfX + 'px)';\r\n                    }\r\n                    break;\r\n\r\n                case PaneTransitionDirection.OutX:\r\n                    {\r\n                        const halfX = self.pane.width * scale / 2;\r\n                        self.target.div.style.clip =\r\n                            'rect(' + 0 + 'px, ' + halfX + 'px, ' + self.pane.height * scale + 'px, ' + halfX + 'px)';\r\n                    }\r\n                    break;\r\n\r\n                case PaneTransitionDirection.OutY:\r\n                    {\r\n                        const halfY = self.pane.height * scale / 2;\r\n                        self.target.div.style.clip =\r\n                            'rect(' + halfY + 'px, ' + self.pane.width * scale + 'px, ' + halfY + 'px, ' + 0 + 'px)';\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            // Save start time after preparation\r\n            self.startTime = performance.now();\r\n\r\n            // Fade in\r\n            self.timer = setInterval(self.tick, 15);\r\n        }, onBottom);\r\n    }\r\n\r\n    public tick() {\r\n        if (!this.pane || !this.target) {\r\n            return;\r\n        }\r\n        if (!this.startTime || !this.source) {\r\n            return;\r\n        }\r\n        if (!this.source.div) {\r\n            throw new Error(ErrorMessages.SourceUndefined);\r\n        }\r\n        if (!this.target.div) {\r\n            throw new Error(ErrorMessages.TargetIsUndefined);\r\n        }\r\n        if (!this.pane.surface) {\r\n            throw new Error(ErrorMessages.PaneSurfaceIsUndefined);\r\n        }\r\n\r\n        // Get elapsed time since start\r\n        const elapsed: number = performance.now() - this.startTime;\r\n\r\n        // Map elapsed time to offset\r\n        let offset: number = elapsed / (this.duration * 1000);\r\n\r\n        if (offset >= 1 || isNaN(offset)) {\r\n            switch (this.direction) {\r\n                case PaneTransitionDirection.Out:\r\n                case PaneTransitionDirection.OutX:\r\n                case PaneTransitionDirection.OutY:\r\n                    this.target.div.style.clip = '';\r\n\r\n                    break;\r\n\r\n                default:\r\n                    this.source.div.style.clip = '';\r\n                    break;\r\n            }\r\n\r\n            if (this.timer) {\r\n                clearInterval(this.timer);\r\n                this.timer = undefined;\r\n            }\r\n            this.source.unbind();\r\n            this.onComplete();\r\n        }\r\n        else {\r\n            // Apply easing\r\n            offset = TransitionRenderer.easeInOutCubic(offset);\r\n\r\n            const scale = this.pane.surface.scale;\r\n\r\n            switch (this.direction) {\r\n                case PaneTransitionDirection.Left:\r\n                    {\r\n                        const offsetX = Math.floor(offset * this.pane.width * this.pane.surface.scale);\r\n                        this.source.div.style.clip =\r\n                            'rect(' +\r\n                            0 +\r\n                            'px, ' +\r\n                            (this.pane.width * scale - offsetX) +\r\n                            'px, ' +\r\n                            this.pane.height * scale +\r\n                            'px, ' +\r\n                            0 +\r\n                            'px)';\r\n                    }\r\n                    break;\r\n\r\n                case PaneTransitionDirection.LeftUp:\r\n                    {\r\n                        const offsetX = Math.floor(offset * this.pane.width * this.pane.surface.scale);\r\n                        const offsetY = Math.floor(offset * this.pane.height * this.pane.surface.scale);\r\n                        this.source.div.style.clip =\r\n                            'rect(' +\r\n                            0 +\r\n                            'px, ' +\r\n                            (this.pane.width * scale - offsetX) +\r\n                            'px, ' +\r\n                            (this.pane.height * scale - offsetY) +\r\n                            'px, ' +\r\n                            0 +\r\n                            'px)';\r\n                    }\r\n                    break;\r\n\r\n                case PaneTransitionDirection.LeftDown:\r\n                    {\r\n                        const offsetX = Math.floor(offset * this.pane.width * this.pane.surface.scale);\r\n                        const offsetY = Math.floor(offset * this.pane.height * this.pane.surface.scale);\r\n                        this.source.div.style.clip =\r\n                            'rect(' +\r\n                            offsetY +\r\n                            'px, ' +\r\n                            (this.pane.width * scale - offsetX) +\r\n                            'px, ' +\r\n                            this.pane.height * scale +\r\n                            'px, ' +\r\n                            0 +\r\n                            'px)';\r\n                    }\r\n                    break;\r\n\r\n                case PaneTransitionDirection.Right:\r\n                    {\r\n                        const offsetX = Math.floor(offset * this.pane.width * this.pane.surface.scale);\r\n                        this.source.div.style.clip =\r\n                            'rect(' +\r\n                            0 +\r\n                            'px, ' +\r\n                            this.pane.width * scale +\r\n                            'px, ' +\r\n                            this.pane.height * scale +\r\n                            'px, ' +\r\n                            offsetX +\r\n                            'px)';\r\n                    }\r\n                    break;\r\n\r\n                case PaneTransitionDirection.RightUp:\r\n                    {\r\n                        const offsetX = Math.floor(offset * this.pane.width * this.pane.surface.scale);\r\n                        const offsetY = Math.floor(offset * this.pane.height * this.pane.surface.scale);\r\n                        this.source.div.style.clip =\r\n                            'rect(' +\r\n                            0 +\r\n                            'px, ' +\r\n                            this.pane.width * scale +\r\n                            'px, ' +\r\n                            (this.pane.height * scale - offsetY) +\r\n                            'px, ' +\r\n                            offsetX +\r\n                            'px)';\r\n                    }\r\n                    break;\r\n\r\n                case PaneTransitionDirection.RightDown:\r\n                    {\r\n                        const offsetX = Math.floor(offset * this.pane.width * this.pane.surface.scale);\r\n                        const offsetY = Math.floor(offset * this.pane.height * this.pane.surface.scale);\r\n                        this.source.div.style.clip =\r\n                            'rect(' +\r\n                            offsetY +\r\n                            'px, ' +\r\n                            this.pane.width * scale +\r\n                            'px, ' +\r\n                            this.pane.height * scale +\r\n                            'px, ' +\r\n                            offsetX +\r\n                            'px)';\r\n                    }\r\n                    break;\r\n\r\n                case PaneTransitionDirection.Up:\r\n                    {\r\n                        const offsetY = Math.floor(offset * this.pane.height * this.pane.surface.scale);\r\n                        this.source.div.style.clip =\r\n                            'rect(' +\r\n                            0 +\r\n                            'px, ' +\r\n                            this.pane.width * scale +\r\n                            'px, ' +\r\n                            (this.pane.height * scale - offsetY) +\r\n                            'px, ' +\r\n                            0 +\r\n                            'px)';\r\n                    }\r\n                    break;\r\n\r\n                case PaneTransitionDirection.Down:\r\n                    {\r\n                        const offsetY = Math.floor(offset * this.pane.height * this.pane.surface.scale);\r\n                        this.source.div.style.clip =\r\n                            'rect(' +\r\n                            offsetY +\r\n                            'px, ' +\r\n                            this.pane.width * scale +\r\n                            'px, ' +\r\n                            this.pane.height * scale +\r\n                            'px, ' +\r\n                            0 +\r\n                            'px)';\r\n                    }\r\n                    break;\r\n\r\n                case PaneTransitionDirection.Out:\r\n                    {\r\n                        const halfX = this.pane.width * scale / 2;\r\n                        const halfY = this.pane.height * scale / 2;\r\n                        const offsetX = Math.floor(offset * this.pane.width * this.pane.surface.scale / 2);\r\n                        const offsetY = Math.floor(offset * this.pane.height * this.pane.surface.scale / 2);\r\n                        this.target.div.style.clip =\r\n                            'rect(' +\r\n                            (halfY - offsetY) +\r\n                            'px, ' +\r\n                            (halfX + offsetX) +\r\n                            'px, ' +\r\n                            (halfY + offsetY) +\r\n                            'px, ' +\r\n                            (halfX - offsetX) +\r\n                            'px)';\r\n                    }\r\n                    break;\r\n\r\n                case PaneTransitionDirection.OutX:\r\n                    {\r\n                        const halfX = this.pane.width * scale / 2;\r\n                        const height = this.pane.height * scale;\r\n                        const offsetX = Math.floor(offset * this.pane.width * this.pane.surface.scale / 2);\r\n                        this.target.div.style.clip =\r\n                            'rect(' +\r\n                            0 +\r\n                            'px, ' +\r\n                            (halfX + offsetX) +\r\n                            'px, ' +\r\n                            height +\r\n                            'px, ' +\r\n                            (halfX - offsetX) +\r\n                            'px)';\r\n                    }\r\n                    break;\r\n\r\n                case PaneTransitionDirection.OutY:\r\n                    {\r\n                        const width = this.pane.width * scale;\r\n                        const halfY = this.pane.height * scale / 2;\r\n                        const offsetY = Math.floor(offset * this.pane.height * this.pane.surface.scale / 2);\r\n                        this.target.div.style.clip =\r\n                            'rect(' +\r\n                            (halfY - offsetY) +\r\n                            'px, ' +\r\n                            width +\r\n                            'px, ' +\r\n                            (halfY + offsetY) +\r\n                            'px, ' +\r\n                            0 +\r\n                            'px)';\r\n                    }\r\n                    break;\r\n\r\n                case PaneTransitionDirection.In:\r\n                    {\r\n                        const width = this.pane.width * scale;\r\n                        const height = this.pane.height * scale;\r\n                        const offsetX = Math.floor(offset * this.pane.width * this.pane.surface.scale / 2);\r\n                        const offsetY = Math.floor(offset * this.pane.height * this.pane.surface.scale / 2);\r\n                        this.source.div.style.clip =\r\n                            'rect(' +\r\n                            offsetY +\r\n                            'px, ' +\r\n                            (width - offsetX) +\r\n                            'px, ' +\r\n                            (height - offsetY) +\r\n                            'px, ' +\r\n                            offsetX +\r\n                            'px)';\r\n                    }\r\n                    break;\r\n\r\n                case PaneTransitionDirection.InX:\r\n                    {\r\n                        const width = this.pane.width * scale;\r\n                        const height = this.pane.height * scale;\r\n                        const offsetX = Math.floor(offset * this.pane.width * this.pane.surface.scale / 2);\r\n                        this.source.div.style.clip =\r\n                            'rect(' + 0 + 'px, ' + (width - offsetX) + 'px, ' + height + 'px, ' + offsetX + 'px)';\r\n                    }\r\n                    break;\r\n\r\n                case PaneTransitionDirection.InY:\r\n                    {\r\n                        const width = this.pane.width * scale;\r\n                        const height = this.pane.height * scale;\r\n                        const offsetY = Math.floor(offset * this.pane.height * this.pane.surface.scale / 2);\r\n                        this.source.div.style.clip =\r\n                            'rect(' + offsetY + 'px, ' + width + 'px, ' + (height - offsetY) + 'px, ' + 0 + 'px)';\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { CommonEvent } from '../core/common-event';\nimport { ErrorMessages } from '../core/error-messages';\nimport { Model } from '../core/model';\nimport { SpriteElement } from '../elements/sprite-element';\nimport { SpriteFrame } from '../elements/sprite-frame';\nimport { Surface } from './surface';\nimport { SurfaceElement } from './surface-element';\nimport { SurfaceElementStates } from './surface-element-states';\n\n/**\n * Renders a multistate image button derived from surface images\n */\nexport class SurfaceButtonElement extends SurfaceElement {\n    public static BUTTON_CLICK = 'buttonClick';\n\n    /**\n     * Renders a multistate image button derived from surface page images\n     * @param id - Item id\n     * @param left - Layout area x coordinate\n     * @param top - Layout area y coordinate\n     * @param width - Layout area width\n     * @param height - Layout area height\n     * @param clickListener - Click event listener\n     */\n    public static create(\n        id: string,\n        left: number,\n        top: number,\n        width: number,\n        height: number,\n        clickListener: (button: SurfaceButtonElement | undefined) => void\n    ) {\n        return new SurfaceButtonElement(id, left, top, width, height, clickListener);\n    }\n\n    /**\n     * Renders a multistate image button derived from surface page images\n     * @param id - Item id\n     * @param left - Layout area x coordinate\n     * @param top - Layout area y coordinate\n     * @param width - Layout area width\n     * @param height - Layout area height\n     * @param clickListener - Click event listener\n     */\n    public static createCheckbox(\n        id: string,\n        left: number,\n        top: number,\n        width: number,\n        height: number,\n        clickListener: (button: SurfaceButtonElement | undefined) => void\n    ) {\n        const button = new SurfaceButtonElement(id, left, top, width, height, clickListener);\n        button.isToggle = true;\n        return button;\n    }\n\n    /**\n     * Renders a multistate image button derived from surface page images\n     * @param id - Item id\n     * @param left - Layout area x coordinate\n     * @param top - Layout area y coordinate\n     * @param width - Layout area width\n     * @param height - Layout area height\n     * @param clickListener - Click event listener\n     */\n    public static createRadioButton(\n        groupId: string,\n        id: string,\n        left: number,\n        top: number,\n        width: number,\n        height: number,\n        clickListener: (button: SurfaceButtonElement | undefined) => void\n    ) {\n        const button = new SurfaceButtonElement(id, left, top, width, height, clickListener);\n        button.groupId = groupId;\n        button.isToggle = true;\n        return button;\n    }\n\n    /**\n     * Click event (button: SurfaceButton)\n     */\n    public clicked: CommonEvent<SurfaceButtonElement> = new CommonEvent<SurfaceButtonElement>();\n\n    /**\n     * Normal state sprite index\n     */\n    public normalIndex: number;\n\n    /**\n     * Selected state sprite index\n     */\n    public selectedIndex: number;\n\n    /**\n     * Highlighted state sprite index\n     */\n    public highlightedIndex: number;\n\n    /**\n     * Disabled state sprite index\n     */\n    public disabledIndex: number;\n\n    /**\n     * Button enabled state\n     */\n    public isEnabled: boolean;\n\n    /**\n     * Button toggle button selected state\n     */\n    public isSelected: boolean;\n\n    /**\n     * True if toggle button (checkbox/radio)\n     */\n    public isToggle: boolean;\n\n    /**\n     * Button radio group id\n     */\n    public groupId?: string;\n\n    /**\n     * Internal sprite element\n     */\n    public spriteElement?: SpriteElement;\n\n    /**\n     * @param id - Item id\n     * @param left - Layout area x coordinate\n     * @param top - Layout area y coordinate\n     * @param width - Layout area width\n     * @param height - Layout area height\n     * @param clickListener - Click event listener\n     */\n    constructor(\n        id: string,\n        left: number,\n        top: number,\n        width: number,\n        height: number,\n        clickListener: (button: SurfaceButtonElement | undefined) => void\n    ) {\n        super(id, left, top, width, height);\n        this.setEnabled = this.setEnabled.bind(this);\n        this.addToModel = this.addToModel.bind(this);\n        this.onClicked = this.onClicked.bind(this);\n        this.normalIndex = 0;\n        this.selectedIndex = 0;\n        this.highlightedIndex = 0;\n        this.disabledIndex = 0;\n        this.isEnabled = true;\n        this.isSelected = false;\n        this.isToggle = false;\n        if (clickListener) {\n            this.clicked.add(clickListener);\n        }\n    }\n\n    public addTo(surface: Surface): SurfaceElement {\n        surface.elements.push(this);\n        return this;\n    }\n\n    public setEnabled(isEnabled: boolean) {\n        if (isEnabled === this.isEnabled) {\n            return;\n        }\n        this.isEnabled = isEnabled;\n        if (this.spriteElement && this.surface && this.surface.controller) {\n            if (!this.isEnabled) {\n                this.spriteElement.frameIndex = this.disabledIndex;\n                this.spriteElement.setInteractive(false);\n            }\n            else {\n                if (this.isSelected && this.isToggle) {\n                    this.spriteElement.frameIndex = this.selectedIndex;\n                }\n                else {\n                    this.spriteElement.frameIndex = this.normalIndex;\n                }\n                this.spriteElement.setInteractive(true);\n            }\n            this.surface.controller.draw();\n        }\n    }\n\n    /**\n     * Adds button to surface model\n     * @returns New button\n     */\n    public addToModel(model: Model) {\n        const surface = this.surface;\n        if (!surface) {\n            throw new Error(ErrorMessages.SurfaceIsUndefined);\n        }\n\n        // If no normal image, throw error\n        if (!surface.normalImageSource) {\n            throw new Error(ErrorMessages.NormalImageSourceUndefined);\n        }\n\n        const sprite = SpriteElement.create(this.left, this.top, this.width, this.height);\n        sprite.id = this.id;\n        this.spriteElement = sprite;\n        sprite.frames = [];\n        sprite.frames.push(\n            SpriteFrame.create(SurfaceElementStates.NORMAL, this.left, this.top, this.width, this.height, 0, 'none', 0)\n        );\n\n        if (surface.selectedImageSource) {\n            sprite.frames.push(\n                SpriteFrame.create(\n                    SurfaceElementStates.SELECTED,\n                    this.left,\n                    this.top,\n                    this.width,\n                    this.height,\n                    0,\n                    'none',\n                    0\n                )\n            );\n            this.selectedIndex = sprite.frames.length - 1;\n        }\n\n        if (surface.highlightedImageSource) {\n            sprite.frames.push(\n                SpriteFrame.create(\n                    SurfaceElementStates.HIGHLIGHTED,\n                    this.left,\n                    this.top,\n                    this.width,\n                    this.height,\n                    0,\n                    'none',\n                    0\n                )\n            );\n            this.highlightedIndex = sprite.frames.length - 1;\n            if (!surface.selectedImageSource) {\n                this.selectedIndex = this.highlightedIndex;\n            }\n        }\n\n        if (surface.disabledImageSource) {\n            sprite.frames.push(\n                SpriteFrame.create(\n                    SurfaceElementStates.DISABLED,\n                    this.left,\n                    this.top,\n                    this.width,\n                    this.height,\n                    0,\n                    'none',\n                    0\n                )\n            );\n            this.disabledIndex = sprite.frames.length - 1;\n        }\n\n        if (this.highlightedIndex !== this.normalIndex) {\n            sprite.mouseDown = 'pushFrame(' + this.highlightedIndex + ')';\n            sprite.mouseUp = 'popFrame()';\n        }\n        else if (this.selectedIndex !== this.normalIndex) {\n            sprite.mouseDown = 'pushFrame(' + this.selectedIndex + ')';\n            sprite.mouseUp = 'popFrame()';\n        }\n        sprite.click = SurfaceButtonElement.BUTTON_CLICK;\n\n        if (!this.isEnabled) {\n            sprite.frameIndex = this.disabledIndex;\n        }\n        else {\n            if (this.isSelected && this.isToggle) {\n                sprite.frameIndex = this.selectedIndex;\n            }\n            sprite.setInteractive(true);\n        }\n\n        model.add(sprite);\n\n        return sprite;\n    }\n\n    /**\n     * Click handler called from lower level event handlers\n     */\n    public onClicked() {\n        const self = this;\n        if (!self.surface) {\n            throw new Error(ErrorMessages.SurfaceIsUndefined);\n        }\n        if (self.isToggle) {\n            if (self.groupId !== null) {\n                if (!self.isSelected) {\n                    self.surface.elements.forEach(sel => {\n                        if (sel instanceof SurfaceButtonElement && sel.spriteElement) {\n                            if (sel.id === self.id) {\n                                sel.isSelected = true;\n                                sel.spriteElement.frameIndex = sel.selectedIndex;\n                            }\n                            else if (self.groupId === sel.groupId) {\n                                sel.isSelected = false;\n                                if (sel.isEnabled) {\n                                    sel.spriteElement.frameIndex = sel.normalIndex;\n                                }\n                                else {\n                                    sel.spriteElement.frameIndex = sel.disabledIndex;\n                                }\n                            }\n                        }\n                    });\n                }\n                else {\n                    self.surface.elements.forEach(sel => {\n                        if (sel instanceof SurfaceButtonElement && sel.spriteElement) {\n                            if (self.groupId === sel.groupId) {\n                                sel.isSelected = false;\n                                sel.spriteElement.frameIndex = sel.normalIndex;\n                            }\n                        }\n                    });\n                }\n            }\n            else if (self.spriteElement) {\n                if (!self.isSelected) {\n                    self.isSelected = true;\n                    self.spriteElement.frameIndex = self.selectedIndex;\n                }\n                else {\n                    self.isSelected = false;\n                    self.spriteElement.frameIndex = self.normalIndex;\n                }\n            }\n        }\n        if (self.clicked.hasListeners()) {\n            self.clicked.trigger(self);\n        }\n        if (self.surface.controller) {\n            self.surface.controller.draw();\n        }\n    }\n}\n","import { CommonEvent } from '../core/common-event';\nimport { Model } from '../core/model';\nimport { RectangleElement } from '../elements/rectangle-element';\nimport { TextElement } from '../elements/text-element';\nimport { Surface } from './surface';\nimport { SurfaceElement } from './surface-element';\n\n/**\n * Renders styled text with an optional background fill and border stroke\n */\nexport class SurfaceTextElement extends SurfaceElement {\n    public static TEXT_CLICK = 'textClick';\n\n    /**\n     * Creates a text item\n     * @param id - Item id\n     * @param left - Layout area x coordinate\n     * @param top - Layout area y coordinate\n     * @param width - Layout area width\n     * @param height - Layout area height\n     * @param content - Rendered text content\n     * @param clickListener - Click event listener\n     * @returns New text item\n     */\n    public static create(\n        id: string,\n        left: number,\n        top: number,\n        width: number,\n        height: number,\n        content: string,\n        clickListener: (text: SurfaceTextElement | undefined) => void\n    ) {\n        return new SurfaceTextElement(id, left, top, width, height, content, clickListener);\n    }\n\n    /**\n     * Rendered text content\n     */\n    public content: string;\n\n    /**\n     * Text color as string\n     */\n    public color: string;\n\n    /**\n     * Text alignment directives\n     */\n    public textAlignment: string;\n\n    /**\n     * Font typeface\n     */\n    public typeFace: string;\n\n    /**\n     * Font type size in pixels\n     */\n    public typeSize: number;\n\n    /**\n     * Font type style\n     */\n    public typeStyle: string;\n\n    /**\n     * Background fill color as string\n     */\n    public background?: string;\n\n    /**\n     * Layut area border stroke\n     */\n    public border?: string;\n\n    /**\n     * Layout area padding\n     */\n    public padding: number;\n\n    /**\n     * Click event\n     */\n    public clicked: CommonEvent<SurfaceTextElement> = new CommonEvent<SurfaceTextElement>();\n\n    /**\n     * Internal Elise TextElement\n     */\n    public textElement?: TextElement;\n\n    /**\n     * @param id - Item id\n     * @param left - Layout area x coordinate\n     * @param top - Layout area y coordinate\n     * @param width - Layout area width\n     * @param height - Layout area height\n     * @param content - Rendered text content\n     * @param clickListener - Click event listener\n     */\n    constructor(\n        id: string,\n        left: number,\n        top: number,\n        width: number,\n        height: number,\n        content: string,\n        clickListener: (text: SurfaceTextElement | undefined) => void\n    ) {\n        super(id, left, top, width, height);\n        this.onClicked = this.onClicked.bind(this);\n        this.addToModel = this.addToModel.bind(this);\n        this.color = 'Black';\n        this.textAlignment = 'left,top';\n        this.typeFace = 'sans-serif';\n        this.typeSize = 10;\n        this.typeStyle = '';\n        this.padding = 0;\n        this.content = content;\n        if (clickListener) {\n            this.clicked.add(clickListener);\n        }\n    }\n\n    /**\n     * Creates and adds a text item to target surface\n     * @param surface - Target surface for text element\n     * @returns This text element\n     */\n    public addTo(surface: Surface) {\n        surface.elements.push(this);\n        return this;\n    }\n\n    /**\n     * Adds item to surface model\n     * @param model - Surface model\n     * @returns New text item\n     */\n    public addToModel(model: Model) {\n        if (this.background || this.border) {\n            const rect = RectangleElement.create(this.left, this.top, this.width, this.height);\n            if (this.background) {\n                rect.setFill(this.background);\n            }\n            if (this.border) {\n                rect.setStroke(this.border);\n            }\n            rect.interactive = false;\n            model.add(rect);\n        }\n\n        const text = TextElement.create(\n            this.content,\n            this.left + this.padding,\n            this.top + this.padding,\n            this.width - this.padding * 2,\n            this.height - this.padding * 2\n        );\n        text.setFill(this.color);\n        text.alignment = this.textAlignment;\n        text.typeface = this.typeFace;\n        text.typesize = this.typeSize;\n        text.typestyle = this.typeStyle;\n        text.id = this.id;\n        this.textElement = text;\n        text.click = SurfaceTextElement.TEXT_CLICK;\n        text.setInteractive(true);\n        model.add(text);\n        return text;\n    }\n\n    /**\n     * Click handler called from lower level event handlers\n     */\n    public onClicked() {\n        this.clicked.trigger(this);\n    }\n}\n","import { CommonEvent } from '../core/common-event';\nimport { ErrorMessages } from '../core/error-messages';\nimport { Surface } from './surface';\nimport { SurfaceLayer } from './surface-layer';\n\n/**\n * Renders a video into an HTML video element\n */\nexport class SurfaceVideoLayer extends SurfaceLayer {\n    /**\n     * Renders a video into an HTML video element\n     * @param id - Video id\n     * @param left - Layout area x coordinate\n     * @param top - Layout area y coordinate\n     * @param width - Layout area width\n     * @param height - Layout area height\n     * @param source - Video source URL\n     */\n    public static create(id: string, left: number, top: number, width: number, height: number, source: string) {\n        const video = new SurfaceVideoLayer(id, left, top, width, height, source);\n        return video;\n    }\n\n    /**\n     * Video source\n     */\n    public source: string;\n\n    /**\n     * If true, loop video\n     */\n    public loop: boolean;\n\n    /**\n     * If true, auto play video on load\n     */\n    public autoPlay: boolean;\n\n    /**\n     * If true, display native control strip\n     */\n    public nativeControls: boolean;\n\n    /**\n     * True when video is ready to play\n     */\n    public canPlay: boolean;\n\n    /**\n     * True when surface has been loaded\n     */\n    public isLoaded: boolean = false;\n\n    /**\n     * Video started event (video: Video)\n     */\n    public started: CommonEvent<SurfaceVideoLayer> = new CommonEvent<SurfaceVideoLayer>();\n\n    /**\n     * Video stopped event (video: Video)\n     */\n    public stopped: CommonEvent<SurfaceVideoLayer> = new CommonEvent<SurfaceVideoLayer>();\n\n    /**\n     * HTML video element\n     */\n    public element?: HTMLVideoElement;\n\n    /**\n     * @param id - Video id\n     * @param left - Layout area x coordinate\n     * @param top - Layout area y coordinate\n     * @param width - Layout area width\n     * @param height - Layout area height\n     * @param source - Video source URL\n     */\n    constructor(id: string, left: number, top: number, width: number, height: number, source: string) {\n        super(id, left, top, width, height);\n        this.loop = false;\n        this.autoPlay = false;\n        this.nativeControls = true;\n        this.canPlay = false;\n        this.source = source;\n    }\n\n    /**\n     * Adds video to parent surface\n     * @param surface - Parent surface\n     */\n    public addToSurface(surface: Surface) {\n        this.surface = surface;\n\n        // If no source\n        if (!this.source) {\n            throw new Error(ErrorMessages.SourceUndefined);\n        }\n\n        // Create video element\n        const video = document.createElement('video') as HTMLVideoElement;\n        video.setAttribute('id', this.id + '_video');\n        video.style.position = 'absolute';\n        video.style.left = this.translateX + this.left * surface.scale + 'px';\n        video.style.top = this.translateY + this.top * surface.scale + 'px';\n        video.style.width = this.width * surface.scale + 'px';\n        video.style.height = this.height * surface.scale + 'px';\n        video.style.opacity = (this.surface.opacity * this.opacity).toString();\n        this.element = video;\n    }\n\n    /**\n     * Sets video source and attaches callback for video ready to play\n     * @param callback - Completion callback (success: boolean)\n     */\n    public prepare(callback: (success: boolean) => void) {\n        const self = this;\n        const video = self.element;\n        if (!self.surface) {\n            throw new Error(ErrorMessages.SurfaceIsUndefined);\n        }\n        if (!self.surface.div) {\n            throw new Error(ErrorMessages.SurfaceDivIsUndefined);\n        }\n        if (!self.element) {\n            throw new Error(ErrorMessages.ElementUndefined);\n        }\n        if (!video) {\n            throw new Error(ErrorMessages.VideoIsUndefined);\n        }\n        if (self.loop) {\n            video.setAttributeNode(document.createAttribute('loop'));\n        }\n        if (self.nativeControls) {\n            video.setAttributeNode(document.createAttribute('controls'));\n        }\n\n        self.surface.div.appendChild(video);\n        self.element.src = self.source;\n        video.oncanplay = () => {\n            self.canPlay = true;\n            if (self.isLoaded && self.autoPlay) {\n                video.play();\n            }\n            video.oncanplay = null;\n        };\n        self.isPrepared = true;\n        if (callback) {\n            callback(true);\n        }\n    }\n\n    /**\n     * Unloads video and destroys visual elements\n     */\n    public destroy() {\n        if (this.element && this.element.parentElement) {\n            this.element.parentElement.removeChild(this.element);\n            this.element = undefined;\n        }\n        this.surface = undefined;\n    }\n\n    /**\n     * Onload initialization\n     */\n    public onload() {\n        const video = this.element;\n        this.isLoaded = true;\n        if (video && this.canPlay && this.autoPlay) {\n            video.currentTime = 0;\n            video.play();\n        }\n    }\n\n    /**\n     * Onunload teardown\n     */\n    public onunload() {\n        if (this.element) {\n            const video = this.element;\n            video.pause();\n        }\n    }\n\n    /**\n     * Sets rendering scale\n     */\n    public setScale(scale: number) {\n        if (!this.element) {\n            return this;\n        }\n        const layer = this.element as HTMLVideoElement;\n        layer.style.left = this.translateX + this.left * scale + 'px';\n        layer.style.top = this.translateY + this.top * scale + 'px';\n        layer.style.width = this.width * scale + 'px';\n        layer.style.height = this.height * scale + 'px';\n        return this;\n    }\n\n    /**\n     * Sets rendering opacity\n     */\n    public setOpacity(opacity: number) {\n        this.opacity = opacity;\n        if (this.element && this.surface) {\n            this.element.style.opacity = (this.surface.opacity * this.opacity).toString();\n        }\n        return this;\n    }\n\n    /**\n     * Sets X translation\n     */\n    public setTranslateX(translateX: number) {\n        this.translateX = translateX;\n        if (this.element && this.surface) {\n            this.element.style.left = (this.translateX + this.left) * this.surface.scale + 'px';\n        }\n        return this;\n    }\n\n    /**\n     * Sets Y translation\n     */\n    public setTranslateY(translateY: number) {\n        this.translateY = translateY;\n        if (this.element && this.surface) {\n            this.element.style.top = (this.translateY + this.top) * this.surface.scale + 'px';\n        }\n        return this;\n    }\n\n    public addTo(surface: Surface) {\n        surface.layers.push(this);\n        return this;\n    }\n}\n","import { ErrorMessages } from '../core/error-messages';\nimport { Region } from '../core/region';\nimport { ElementBase } from '../elements/element-base';\nimport { FillFactory } from '../fill/fill-factory';\nimport { ViewController } from './view-controller';\n\n/**\n * Renders model content for viewing\n */\nexport class ViewRenderer {\n    /**\n     * View controller\n     */\n    public controller: ViewController;\n\n    /**\n     * @param controller - Associated view controller\n     */\n    constructor(controller: ViewController) {\n        this.controller = controller;\n    }\n\n    /**\n     * Renders controller model to provided 2d canvas context at specified scale\n     * @param c - Rendering context\n     * @param scale - Optional rendering scale. Default is 1.\n     */\n    public renderToContext(c: CanvasRenderingContext2D, scale?: number): void {\n        const model = this.controller.model;\n        if (!model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        const size = model.getSize();\n        if (!size) {\n            throw new Error(ErrorMessages.SizeUndefined);\n        }\n        const w = size.width;\n        const h = size.height;\n\n        // Begin rendering context and render base model\n        this.beginRender(c, scale);\n\n        // Render elements\n        const modelBounds = new Region(this.controller.offsetX, this.controller.offsetY, w, h);\n        for (const element of model.elements) {\n            if (this.shouldRender(element, modelBounds)) {\n                element.draw(c);\n            }\n        }\n\n        // End rendering context\n        this.endRender(c);\n    }\n\n    public beginRender(c: CanvasRenderingContext2D, scale?: number) {\n        const model = this.controller.model;\n        if (!model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        const size = model.getSize();\n        if (!size) {\n            throw new Error(ErrorMessages.SizeUndefined);\n        }\n\n        // Save context state\n        c.save();\n\n        if (arguments.length > 1 && scale !== undefined && scale !== 1) {\n            c.scale(scale, scale);\n        }\n\n        // If transformed\n        if (model.transform !== undefined) {\n            const location = model.getLocation();\n            if (location) {\n                model.setRenderTransform(c, model.transform, location);\n            }\n        }\n\n        // Fill\n        if (FillFactory.setElementFill(c, model)) {\n            const w = size.width;\n            const h = size.height;\n            c.fillRect(0, 0, w, h);\n        }\n    }\n\n    public renderElement(c: CanvasRenderingContext2D, el: ElementBase) {\n        el.draw(c);\n    }\n\n    public endRender(c: CanvasRenderingContext2D) {\n        const model = this.controller.model;\n\n        // Stroke\n        if (model && model.setElementStroke(c, model)) {\n            const size = model.getSize();\n            if (size) {\n                const w = size.width;\n                const h = size.height;\n                c.strokeRect(0, 0, w, h);\n            }\n        }\n\n        // Restore context state\n        c.restore();\n    }\n\n    /**\n     * Determines if element intersect rendering region and should be rendered or is out of bounds\n     * @param el - Rendered element\n     * @param bounds - Rendering region\n     * @returns True if element should be rendered\n     */\n    public shouldRender(el: ElementBase, bounds: Region): boolean {\n        // If no transform, check bounds\n        if (!el.transform) {\n            const b = el.getBounds();\n            if (b) {\n                return b.intersectsWith(bounds);\n            }\n            return false;\n        }\n        else {\n            // If transform, always render\n            // TODO - Compute transformed bounds\n            return true;\n        }\n    }\n}\n","import { Utility } from '../core/utility';\n\n/**\n * Represents a frame in a timed animation\n */\nexport class SurfaceAnimationFrame {\n    /**\n     * Bitmap source\n     */\n    public source: string;\n\n    /**\n     * Animation frame id\n     */\n    public id: string;\n\n    /**\n     * Bitmap source crop x coordinate\n     */\n    public left: number;\n\n    /**\n     * Bitmap source crop y coordinate\n     */\n    public top: number;\n\n    /**\n     * Bitmap source crop width\n     */\n    public width: number;\n\n    /**\n     * Bitmap source crop height\n     */\n    public height: number;\n\n    /**\n     * Frame duration in seconds\n     */\n    public duration: number;\n\n    /**\n     * Frame \"to\" transition\n     */\n    public transition: string;\n\n    /**\n     * Frame transition duration in seconds\n     */\n    public transitionDuration: number;\n\n    /**\n     * If true, pause frame until tapped\n     */\n    public pauseFrame: boolean;\n\n    /**\n     * @param id - Item id\n     * @param left - Source bitmap crop x coordinate\n     * @param top - Source bitmap crop y coordinate\n     * @param width - Source bitmap crop width\n     * @param height - Source bitmap crop height\n     * @param source - Bitmap source\n     * @param duration - Frame duration in seconds\n     * @param transition - Frame \"to\" transition\n     * @param transitionDuration - Transition duration in seconds\n     * @param pauseFrame - Pause frame until tapped\n     */\n    constructor(\n        id: string,\n        left: number,\n        top: number,\n        width: number,\n        height: number,\n        source: string,\n        duration: number,\n        transition: string,\n        transitionDuration: number,\n        pauseFrame: boolean\n    ) {\n        if (id) {\n            this.id = id;\n        }\n        else {\n            this.id = Utility.guid();\n        }\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.source = source;\n        this.duration = duration;\n        this.transition = transition;\n        this.transitionDuration = transitionDuration;\n        this.pauseFrame = pauseFrame;\n    }\n}\n","import { SurfaceAnimationLayer } from './surface-animation-layer';\nimport { SurfaceViewController } from './surface-view-controller';\n\n/**\n * Extends SurfaceViewController to add animation property\n */\nexport class SurfaceAnimationViewController extends SurfaceViewController {\n    /**\n     * Controlled animation\n     */\n    public animation?: SurfaceAnimationLayer;\n\n    constructor() {\n        super();\n    }\n}\n","import { Point } from '../core/point';\nimport { Size } from '../core/size';\nimport { SpriteElement } from '../elements/sprite-element';\n\n/**\n * Extends [[SpriteElement]] to add strip item groupId and itemId properties\n */\nexport class SurfaceRadioItemSpriteElement extends SpriteElement {\n    /**\n     * Radio strip group ID\n     */\n    public groupId: string;\n\n    /**\n     * Radio strip item ID\n     */\n    public itemId: string;\n\n    /**\n     * @param groupId - Radio item group id\n     * @param itemId - Radio item id\n     * @param left - Radio item x coordinate\n     * @param top - Radio item y coordinate\n     * @param width - Radio item width\n     * @param height - Radio item height\n     */\n    constructor(groupId: string, itemId: string, left: number, top: number, width: number, height: number) {\n        super();\n        this.setSize(new Size(width, height));\n        this.setLocation(new Point(left, top));\n        this.groupId = groupId;\n        this.itemId = itemId;\n    }\n}\n","import { Point } from '../core/point';\nimport { Size } from '../core/size';\nimport { TextElement } from '../elements/text-element';\n\n/**\n * Extends [[TextElement]] to add strip item groupId and itemId properties\n */\nexport class SurfaceRadioItemTextElement extends TextElement {\n    /**\n     * Radio strip group ID\n     */\n    public groupId: string;\n\n    /**\n     * Radio strip item ID\n     */\n    public itemId: string;\n\n    /**\n     * @param groupId - Radio item group id\n     * @param itemId - Radio item id\n     * @param text - Radio item text\n     * @param left - Radio item x coordinate\n     * @param top - Radio item y coordinate\n     * @param width - Radio item width\n     * @param height - Radio item height\n     */\n    constructor(\n        groupId: string,\n        itemId: string,\n        text: string,\n        left: number,\n        top: number,\n        width: number,\n        height: number\n    ) {\n        super();\n        this.setSize(new Size(width, height));\n        this.setLocation(new Point(left, top));\n        this.groupId = groupId;\n        this.itemId = itemId;\n        this.text = text;\n    }\n}\n","import { Utility } from '../core/utility';\nimport { SurfaceRadioItemSpriteElement } from './surface-radio-item-sprite-element';\nimport { SurfaceRadioItemTextElement } from './surface-radio-item-text-element';\n\n/**\n * Represents an item in a radio strip\n */\nexport class SurfaceRadioStripItem {\n    /**\n     * Radio strip item ID\n     */\n    public id: string;\n\n    /**\n     * Radio strip item caption text\n     */\n    public text: string;\n\n    /**\n     * True if item is selected\n     */\n    public isSelected: boolean;\n\n    /**\n     * Radio strip item button sprite element\n     */\n    public spriteElement?: SurfaceRadioItemSpriteElement;\n\n    /**\n     * Radio strip item button text element ID\n     */\n    public textElement?: SurfaceRadioItemTextElement;\n\n    /**\n     * @param id - Strip item id\n     * @param text - Strip item text\n     */\n    constructor(id: string, text: string) {\n        if (id) {\n            this.id = id;\n        }\n        else {\n            this.id = Utility.guid();\n        }\n        this.text = text;\n        this.isSelected = false;\n    }\n}\n","import { SurfaceRadioStrip } from './surface-radio-strip';\r\nimport { SurfaceRadioStripItem } from './surface-radio-strip-item';\r\n\r\n/**\r\n * Contains arguments for radio strip selection event\r\n */\r\nexport class SurfaceRadioStripSelectionArgs {\r\n    /**\r\n     * Radio strip\r\n     */\r\n    public strip: SurfaceRadioStrip;\r\n\r\n    /**\r\n     * Radio strip item\r\n     */\r\n    public item: SurfaceRadioStripItem;\r\n\r\n    /**\r\n     * @param strip - Radio strip\r\n     * @param item - Radio strip item\r\n     */\r\n    constructor(strip: SurfaceRadioStrip, item: SurfaceRadioStripItem) {\r\n        this.strip = strip;\r\n        this.item = item;\r\n    }\r\n}\r\n","import { ViewController } from '../view/view-controller';\nimport { Surface } from './surface';\nimport { SurfaceRadioStrip } from './surface-radio-strip';\n\n/**\n * Extends [[ViewController]] to add radio strip properties\n */\nexport class SurfaceRadioStripViewController extends ViewController {\n    /**\n     * Associated radio strip\n     */\n    public strip?: SurfaceRadioStrip;\n\n    /**\n     * Radio strip surface\n     */\n    public surface?: Surface;\n\n    constructor() {\n        super();\n    }\n}\n","/**\n * Represents a 2D affine transformation matrix\n */\nexport class Matrix2D {\n    public static IDENTITY: Matrix2D = new Matrix2D(1, 0, 0, 1, 0, 0);\n\n    /**\n     * Matrix factory method\n     * @returns New matrix\n     */\n    public static create(\n        m11: number,\n        m12: number,\n        m21: number,\n        m22: number,\n        offsetX: number,\n        offsetY: number\n    ): Matrix2D {\n        return new Matrix2D(m11, m12, m21, m22, offsetX, offsetY);\n    }\n\n    /**\n     * Multiplies two matrices\n     * @param a - Matrix A\n     * @param b - Matrix B\n     * @returns Matrix A x B\n     */\n    public static multiply(a: Matrix2D, b: Matrix2D): Matrix2D {\n        const r = new Matrix2D(1, 0, 0, 1, 0, 0);\n        r.m11 = a.m11 * b.m11 + a.m12 * b.m21;\n        r.m12 = a.m11 * b.m12 + a.m12 * b.m22;\n        r.m21 = a.m21 * b.m11 + a.m22 * b.m21;\n        r.m22 = a.m21 * b.m12 + a.m22 * b.m22;\n        r.offsetX = a.offsetX * b.m11 + a.offsetY * b.m21 + b.offsetX;\n        r.offsetY = a.offsetX * b.m12 + a.offsetY * b.m22 + b.offsetY;\n        return r;\n    }\n\n    /**\n     * Constructs a new matrix\n     */\n    constructor(\n        public m11: number,\n        public m12: number,\n        public m21: number,\n        public m22: number,\n        public offsetX: number,\n        public offsetY: number\n    ) {\n        this.cloneFrom = this.cloneFrom.bind(this);\n        this.translate = this.translate.bind(this);\n        this.scale = this.scale.bind(this);\n        this.rotate = this.rotate.bind(this);\n    }\n\n    /**\n     * Clones values from another matrix into this matrix\n     * @param that - Matrix to clone into this\n     * @returns This matrix\n     */\n    public cloneFrom(that: Matrix2D): Matrix2D {\n        this.m11 = that.m11;\n        this.m12 = that.m12;\n        this.m21 = that.m21;\n        this.m22 = that.m22;\n        this.offsetX = that.offsetX;\n        this.offsetY = that.offsetY;\n        return this;\n    }\n\n    /**\n     * Translates this matrix by a given amount\n     * @param tx - X translation\n     * @param ty - Y translation\n     * @returns This matrix\n     */\n    public translate(tx: number, ty: number): Matrix2D {\n        const r = new Matrix2D(1, 0, 0, 1, tx, ty);\n        this.cloneFrom(Matrix2D.multiply(r, this));\n        return this;\n    }\n\n    /**\n     * Scales this matrix by given x and y scaling factors\n     * @param sx - X scaling factor\n     * @param sy - Y scaling factor\n     * @returns This matrix\n     */\n    public scale(sx: number, sy: number): Matrix2D {\n        const r = new Matrix2D(sx, 0, 0, sy, 0, 0);\n        this.cloneFrom(Matrix2D.multiply(r, this));\n        return this;\n    }\n\n    /**\n     * Rotates this matrix by a given angle\n     * @param angle - Angle of rotation\n     * @returns This matrix\n     */\n    public rotate(angle: number): Matrix2D {\n        const r = new Matrix2D(Math.cos(angle), Math.sin(angle), -Math.sin(angle), Math.cos(angle), 0, 0);\n        this.cloneFrom(Matrix2D.multiply(r, this));\n        return this;\n    }\n}\n","import { ElementBase } from '../elements/element-base';\nimport { Color } from './color';\n\n/**\n * Describes the outline stroke for strokable elements\n */\nexport class StrokeInfo {\n    public static getStrokeInfo(el: ElementBase) {\n        let color: Color;\n        let width = 1;\n        let opacity = 255;\n        if (el.stroke) {\n            const stroke = el.stroke;\n            if (stroke.indexOf(',') !== -1) {\n                const parts = stroke.split(',');\n                color = Color.parse(parts[0]);\n                width = parseFloat(parts[1]);\n            }\n            else {\n                color = Color.parse(stroke);\n            }\n            if (color.a !== 255) {\n                opacity = color.a;\n                color.a = 255;\n            }\n            return new StrokeInfo('color', color.toHexString(), opacity, width);\n        }\n        else {\n            return new StrokeInfo('none');\n        }\n    }\n\n    public strokeType: string;\n    public strokeColor?: string;\n    public strokeOpacity?: number;\n    public strokeWidth?: number;\n\n    constructor(strokeType: string, strokeColor?: string, strokeOpacity?: number, strokeWidth?: number) {\n        this.strokeType = strokeType;\n        this.strokeColor = strokeColor;\n        this.strokeOpacity = strokeOpacity;\n        this.strokeWidth = strokeWidth;\n    }\n}\n","import { Color } from '../../core/color';\r\nimport { ComponentProps } from './component-props';\r\n\r\n/**\r\n * Encapsulates generic component creation properties\r\n */\r\nexport class GenericComponentProps extends ComponentProps {\r\n    constructor() {\r\n        super();\r\n\r\n        this.onSetCreationFill = this.onSetCreationFill.bind(this);\r\n\r\n        this.fill = '#C000ff00'; // Mostly translucent green\r\n        this.stroke = 'Black';\r\n        this.selectedFill = '#8000ff00'; // Less translucent green\r\n        this.selectedStroke = 'Gold,5';\r\n        this.initialized = true;\r\n        this.create = this.defaultCreate;\r\n        this.size.add(this.defaultResize);\r\n        this.select.add(this.defaultSelect);\r\n        this.deselect.add(this.defaultDeselect);\r\n\r\n        this.setCreationFill = this.onSetCreationFill;\r\n    }\r\n\r\n    private onSetCreationFill(c: CanvasRenderingContext2D): void {\r\n        const color = Color.parse(this.selectedFill as string);\r\n        c.fillStyle = color.toStyleString();\r\n    }\r\n}\r\n","import { UploadComponentProps } from './upload-component-props';\r\n\r\n/**\r\n * Encapsulates HTML component creation properties\r\n */\r\nexport class HtmlComponentProps extends UploadComponentProps {\r\n    constructor() {\r\n        super();\r\n        this.imageTag = 'html';\r\n        this.fileExtensions = [ 'zip' ];\r\n    }\r\n}\r\n","import { ImageBasedComponentProps } from './image-based-component-props';\r\n\r\n/**\r\n * Encapsulates navigation component creation properties\r\n */\r\nexport class NavigateComponentProps extends ImageBasedComponentProps {\r\n    constructor() {\r\n        super();\r\n        this.imageTag = 'navigate';\r\n    }\r\n}\r\n","import { MouseLocationArgs } from '../../core/mouse-location-args';\nimport { Point } from '../../core/point';\nimport { Size } from '../../core/size';\nimport { EllipseElement } from '../../elements/ellipse-element';\nimport { DesignTool } from './design-tool';\n\n/**\n * Ellipse creation design tool\n */\nexport class EllipseTool extends DesignTool {\n    public point1?: Point;\n    public point2?: Point;\n    public ellipse?: EllipseElement;\n    public cancelled: boolean = false;\n\n    public mouseDown(args: MouseLocationArgs): void {\n        this.cancelled = false;\n        this.point1 = Point.create(args.location.x, args.location.y);\n        this.ellipse = EllipseElement.create(args.location.x, args.location.y, 0, 0);\n        this.ellipse.setStroke(this.stroke);\n        this.ellipse.setFill(this.fill);\n        if (this.fillScale !== 1) {\n            this.ellipse.setFillScale(this.fillScale);\n        }\n        if (this.model) {\n            this.ellipse.setInteractive(true).addTo(this.model);\n        }\n        if (this.controller) {\n            this.controller.invalidate();\n        }\n        this.isCreating = true;\n    }\n\n    public mouseMove(args: MouseLocationArgs) {\n        if (this.cancelled) {\n            return;\n        }\n        if (this.ellipse === undefined) {\n            return;\n        }\n        if (this.point1 === undefined) {\n            return;\n        }\n        if (args.location.x < this.point1.x || args.location.y < this.point1.y) {\n            return;\n        }\n        this.ellipse.setLocation(this.point1);\n        this.ellipse.setSize(new Size(args.location.x - this.point1.x, args.location.y - this.point1.y));\n        if (this.controller) {\n            this.controller.invalidate();\n        }\n    }\n\n    public mouseUp(args: MouseLocationArgs) {\n        if (this.cancelled) {\n            return;\n        }\n        if (this.ellipse == null) {\n            return;\n        }\n        if (this.point1 === undefined) {\n            return;\n        }\n        if (args.location.x < this.point1.x || args.location.y < this.point1.y) {\n            return;\n        }\n        this.ellipse.setLocation(this.point1);\n        this.ellipse.setSize(new Size(args.location.x - this.point1.x, args.location.y - this.point1.y));\n        if (this.controller) {\n            this.controller.invalidate();\n        }\n        this.ellipse = undefined;\n        this.isCreating = false;\n    }\n\n    public cancel() {\n        this.cancelled = true;\n        if (this.model && this.ellipse) {\n            this.model.remove(this.ellipse);\n        }\n        if (this.controller) {\n            this.controller.invalidate();\n        }\n        this.ellipse = undefined;\n        this.isCreating = false;\n    }\n}\n","import { MouseLocationArgs } from '../../core/mouse-location-args';\nimport { Point } from '../../core/point';\nimport { Size } from '../../core/size';\nimport { ImageElement } from '../../elements/image-element';\nimport { DesignTool } from './design-tool';\n\n/**\n * Image element creation tool\n */\nexport class ImageElementTool extends DesignTool {\n    public point1?: Point;\n    public source?: string;\n    public imageElement?: ImageElement;\n\n    public cancelled: boolean = false;\n\n    constructor() {\n        super();\n        this.setImageSource = this.setImageSource.bind(this);\n    }\n\n    public mouseDown(args: MouseLocationArgs): void {\n        this.cancelled = false;\n        this.point1 = Point.create(args.location.x, args.location.y);\n        this.imageElement = ImageElement.create(this.source, args.location.x, args.location.y, 0, 0);\n        if (this.opacity !== 255) {\n            this.imageElement.setOpacity(this.opacity / 255.0);\n        }\n        if (this.stroke) {\n            this.imageElement.setStroke(this.stroke);\n        }\n        if (this.model) {\n            this.imageElement.setInteractive(true).addTo(this.model);\n        }\n        if (this.controller) {\n            this.controller.invalidate();\n        }\n        this.isCreating = true;\n    }\n\n    public mouseMove(args: MouseLocationArgs) {\n        if (this.cancelled) {\n            return;\n        }\n        if (!this.imageElement) {\n            return;\n        }\n        if (!this.point1) {\n            return;\n        }\n        if (args.location.x < this.point1.x || args.location.y < this.point1.y) {\n            return;\n        }\n        this.imageElement.setSize(new Size(args.location.x - this.point1.x, args.location.y - this.point1.y));\n        if (this.controller) {\n            this.controller.invalidate();\n        }\n    }\n\n    public mouseUp(args: MouseLocationArgs) {\n        if (this.cancelled) {\n            return;\n        }\n        if (!this.imageElement) {\n            return;\n        }\n        if (!this.point1) {\n            return;\n        }\n        if (args.location.x < this.point1.x || args.location.y < this.point1.y) {\n            return;\n        }\n        this.imageElement.setSize(new Size(args.location.x - this.point1.x, args.location.y - this.point1.y));\n        if (this.controller) {\n            this.controller.invalidate();\n        }\n        this.imageElement = undefined;\n        this.isCreating = false;\n    }\n\n    public cancel() {\n        this.cancelled = true;\n        if (this.model && this.imageElement) {\n            this.model.remove(this.imageElement);\n        }\n        if (this.controller) {\n            this.controller.invalidate();\n        }\n        this.imageElement = undefined;\n        this.isCreating = false;\n    }\n\n    public setImageSource(source: string) {\n        this.source = source;\n        if (this.model) {\n            const resource = this.model.resourceManager.get(this.source);\n            if (resource && !resource.available) {\n                this.model.resourceManager.register(this.source);\n                this.model.resourceManager.load();\n            }\n        }\n    }\n}\n","import { MouseLocationArgs } from '../../core/mouse-location-args';\nimport { Point } from '../../core/point';\nimport { LineElement } from '../../elements/line-element';\nimport { DesignTool } from './design-tool';\n/**\n * Line element creation tool\n */\nexport class LineTool extends DesignTool {\n    public point1?: Point;\n    public point2?: Point;\n    public line?: LineElement;\n    public cancelled: boolean = false;\n\n    public mouseDown(args: MouseLocationArgs): void {\n        this.cancelled = false;\n        this.line = LineElement.create(args.location.x, args.location.y, args.location.x, args.location.y);\n        this.line.setStroke(this.stroke);\n        if (this.model) {\n            this.line.setInteractive(true).addTo(this.model);\n        }\n        this.isCreating = true;\n        if (this.controller) {\n            this.controller.invalidate();\n        }\n    }\n\n    public mouseMove(args: MouseLocationArgs) {\n        if (this.cancelled) {\n            return;\n        }\n        if (!this.line) {\n            return;\n        }\n        this.line.setP2(args.location);\n        if (this.controller) {\n            this.controller.invalidate();\n        }\n    }\n\n    public mouseUp(args: MouseLocationArgs) {\n        if (this.cancelled) {\n            return;\n        }\n        if (!this.line) {\n            return;\n        }\n        this.line.setP2(args.location);\n        if (this.controller) {\n            this.controller.invalidate();\n        }\n        this.line = undefined;\n        this.isCreating = false;\n    }\n\n    public cancel() {\n        this.cancelled = true;\n        if (this.model && this.line) {\n            this.model.remove(this.line);\n        }\n        if (this.controller) {\n            this.controller.invalidate();\n        }\n        this.line = undefined;\n        this.isCreating = false;\n    }\n}\n","import { MouseLocationArgs } from '../../core/mouse-location-args';\nimport { Point } from '../../core/point';\nimport { Size } from '../../core/size';\nimport { ModelElement } from '../../elements/model-element';\nimport { DesignTool } from './design-tool';\n/**\n * Model element creation tool\n */\nexport class ModelElementTool extends DesignTool {\n    public point1?: Point;\n    public source?: string;\n    public modelElement?: ModelElement;\n\n    public cancelled: boolean = false;\n\n    constructor() {\n        super();\n        this.setModelSource = this.setModelSource.bind(this);\n    }\n\n    public mouseDown(args: MouseLocationArgs): void {\n        this.cancelled = false;\n        this.point1 = Point.create(args.location.x, args.location.y);\n        this.modelElement = ModelElement.create(this.source, args.location.x, args.location.y, 0, 0);\n        if (this.opacity !== 255) {\n            this.modelElement.setOpacity(this.opacity / 255.0);\n        }\n        if (this.stroke) {\n            this.modelElement.setStroke(this.stroke);\n        }\n        if (this.model) {\n            this.modelElement.setInteractive(true).addTo(this.model);\n        }\n        if (this.controller) {\n            this.controller.invalidate();\n        }\n        this.isCreating = true;\n    }\n\n    public mouseMove(args: MouseLocationArgs) {\n        if (this.cancelled) {\n            return;\n        }\n        if (!this.modelElement) {\n            return;\n        }\n        if (!this.point1) {\n            return;\n        }\n        if (args.location.x < this.point1.x || args.location.y < this.point1.y) {\n            return;\n        }\n        this.modelElement.setSize(new Size(args.location.x - this.point1.x, args.location.y - this.point1.y));\n        if (this.controller) {\n            this.controller.invalidate();\n        }\n    }\n\n    public mouseUp(args: MouseLocationArgs) {\n        if (this.cancelled) {\n            return;\n        }\n        if (!this.modelElement) {\n            return;\n        }\n        if (!this.point1) {\n            return;\n        }\n        if (args.location.x < this.point1.x || args.location.y < this.point1.y) {\n            return;\n        }\n        this.modelElement.setSize(new Size(args.location.x - this.point1.x, args.location.y - this.point1.y));\n        if (this.controller) {\n            this.controller.invalidate();\n        }\n        this.modelElement = undefined;\n        this.isCreating = false;\n    }\n\n    public cancel() {\n        this.cancelled = true;\n        if (this.model && this.modelElement) {\n            this.model.remove(this.modelElement);\n        }\n        if (this.controller) {\n            this.controller.invalidate();\n        }\n        this.modelElement = undefined;\n        this.isCreating = false;\n    }\n\n    public setModelSource(source: string) {\n        this.source = source;\n        if (this.model) {\n            const resource = this.model.resourceManager.get(this.source);\n            if (resource && !resource.available) {\n                this.model.resourceManager.register(this.source);\n                this.model.resourceManager.load();\n            }\n        }\n    }\n}\n","import { MouseLocationArgs } from '../../core/mouse-location-args';\nimport { Point } from '../../core/point';\nimport { LineElement } from '../../elements/line-element';\nimport { PolylineElement } from '../../elements/polyline-element';\nimport { DesignTool } from './design-tool';\n/**\n * Pen (polyline element) drawing tool\n */\nexport class PenTool extends DesignTool {\n    public points?: Point[];\n    public lastPoint?: Point;\n    public polyline?: PolylineElement;\n    public line?: LineElement;\n\n    public mouseDown(args: MouseLocationArgs): void {\n        if (!this.points || this.points.length === 0) {\n            this.points = [];\n            this.points.push(new Point(args.location.x, args.location.y));\n            this.points.push(new Point(args.location.x, args.location.y));\n            this.lastPoint = this.points[this.points.length - 1];\n            this.line = LineElement.create(this.points[0].x, this.points[0].y, this.points[1].x, this.points[1].y);\n            this.line.setStroke(this.stroke);\n            if (this.model) {\n                this.line.setInteractive(true).addTo(this.model);\n            }\n            this.isCreating = true;\n        }\n        if (this.controller) {\n            this.controller.invalidate();\n        }\n    }\n\n    public mouseMove(args: MouseLocationArgs) {\n        if (!this.line && !this.polyline) {\n            return;\n        }\n        if (this.line) {\n            this.line.setP2(args.location);\n        }\n        else if (this.lastPoint) {\n            this.lastPoint.x = args.location.x;\n            this.lastPoint.y = args.location.y;\n        }\n        if (this.points) {\n            if (this.model && this.line) {\n                this.model.remove(this.line);\n                this.line = undefined;\n                this.polyline = PolylineElement.create();\n                this.polyline.smoothPoints = true;\n                this.polyline.setStroke(this.stroke);\n                this.polyline.setInteractive(true).addTo(this.model);\n                this.lastPoint = new Point(args.location.x, args.location.y);\n                for (const pnt of this.points) {\n                    this.polyline.addPoint(pnt.clone());\n                }\n                const point = new Point(args.location.x, args.location.y);\n                this.lastPoint = point;\n                this.polyline.addPoint(this.lastPoint);\n                this.points.push(point);\n            }\n            else if (this.polyline) {\n                const point = new Point(args.location.x, args.location.y);\n                this.points.push(point);\n                this.lastPoint = point;\n                this.polyline.addPoint(this.lastPoint);\n            }\n        }\n        if (this.controller) {\n            this.controller.invalidate();\n        }\n    }\n\n    public mouseUp(args: MouseLocationArgs) {\n        this.line = undefined;\n        this.polyline = undefined;\n        this.points = undefined;\n        this.lastPoint = undefined;\n        if (this.controller) {\n            this.controller.invalidate();\n        }\n        this.isCreating = false;\n    }\n\n    public cancel() {\n        if (this.model && this.line) {\n            this.model.remove(this.line);\n            this.line = undefined;\n        }\n        else if (this.polyline) {\n            if (this.model && this.points) {\n                this.points.splice(this.points.length - 1);\n                if (this.points.length < 3) {\n                    this.model.remove(this.polyline);\n                }\n                else {\n                    this.polyline.setPoints(this.points);\n                }\n            }\n        }\n        this.line = undefined;\n        this.polyline = undefined;\n        this.points = undefined;\n        this.lastPoint = undefined;\n        if (this.controller) {\n            this.controller.invalidate();\n        }\n        this.isCreating = false;\n    }\n}\n","import { MouseLocationArgs } from '../../core/mouse-location-args';\nimport { Point } from '../../core/point';\nimport { LineElement } from '../../elements/line-element';\nimport { PolygonElement } from '../../elements/polygon-element';\nimport { DesignTool } from './design-tool';\n/**\n * Polygon element design creation tool\n */\nexport class PolygonTool extends DesignTool {\n    public points?: Point[];\n    public lastPoint?: Point;\n    public polygon?: PolygonElement;\n    public line?: LineElement;\n\n    public mouseDown(args: MouseLocationArgs): void {\n        if (!this.points || this.points.length === 0) {\n            this.points = [];\n            this.points.push(new Point(args.location.x, args.location.y));\n            this.points.push(new Point(args.location.x, args.location.y));\n            this.lastPoint = this.points[this.points.length - 1];\n            this.line = LineElement.create(this.points[0].x, this.points[0].y, this.points[1].x, this.points[1].y);\n            this.line.setStroke(this.stroke);\n            if (this.model) {\n                this.line.setInteractive(true).addTo(this.model);\n            }\n            this.isCreating = true;\n        }\n        else {\n            if (this.model && this.line) {\n                this.model.remove(this.line);\n                this.line = undefined;\n                this.polygon = PolygonElement.create();\n                this.polygon.setStroke(this.stroke);\n                this.polygon.setFill(this.fill);\n                if (this.fillScale !== 1) {\n                    this.polygon.setFillScale(this.fillScale);\n                }\n                this.polygon.setInteractive(true).addTo(this.model);\n                this.lastPoint = new Point(args.location.x, args.location.y);\n                for (const pnt of this.points) {\n                    this.polygon.addPoint(pnt);\n                }\n                const point = new Point(args.location.x, args.location.y);\n                this.lastPoint = point;\n                this.polygon.addPoint(this.lastPoint);\n                this.points.push(point);\n            }\n            else if (this.polygon) {\n                const point = new Point(args.location.x, args.location.y);\n                this.points.push(point);\n                this.lastPoint = point;\n                this.polygon.addPoint(this.lastPoint);\n            }\n        }\n        if (this.controller) {\n            this.controller.invalidate();\n        }\n    }\n\n    public mouseMove(args: MouseLocationArgs) {\n        if (!this.line && !this.polygon) {\n            return;\n        }\n        if (this.line) {\n            this.line.setP2(args.location);\n        }\n        else if (this.lastPoint) {\n            this.lastPoint.x = args.location.x;\n            this.lastPoint.y = args.location.y;\n        }\n        if (this.controller) {\n            this.controller.invalidate();\n        }\n    }\n\n    public mouseUp(args: MouseLocationArgs) {\n        if (this.controller) {\n            this.controller.invalidate();\n        }\n    }\n\n    public cancel() {\n        if (this.model && this.line) {\n            this.model.remove(this.line);\n            this.line = undefined;\n        }\n        else if (this.polygon && this.points && this.model) {\n            this.points.splice(this.points.length - 1);\n            if (this.points.length < 3) {\n                this.model.remove(this.polygon);\n            }\n            else {\n                this.polygon.setPoints(this.points);\n            }\n        }\n        this.line = undefined;\n        this.polygon = undefined;\n        this.points = undefined;\n        this.lastPoint = undefined;\n        if (this.controller) {\n            this.controller.invalidate();\n        }\n        this.isCreating = false;\n    }\n}\n","import { MouseLocationArgs } from '../../core/mouse-location-args';\nimport { Point } from '../../core/point';\nimport { LineElement } from '../../elements/line-element';\nimport { PolylineElement } from '../../elements/polyline-element';\nimport { DesignTool } from './design-tool';\n\n/**\n * Polyline element design creation tool\n */\nexport class PolylineTool extends DesignTool {\n    public points?: Point[];\n    public lastPoint?: Point;\n    public polyline?: PolylineElement;\n    public line?: LineElement;\n\n    public mouseDown(args: MouseLocationArgs): void {\n        if (!this.points || this.points.length === 0) {\n            this.points = [];\n            this.points.push(new Point(args.location.x, args.location.y));\n            this.points.push(new Point(args.location.x, args.location.y));\n            this.lastPoint = this.points[this.points.length - 1];\n            this.line = LineElement.create(this.points[0].x, this.points[0].y, this.points[1].x, this.points[1].y);\n            this.line.setStroke(this.stroke);\n            if (this.model) {\n                this.line.setInteractive(true).addTo(this.model);\n            }\n            this.isCreating = true;\n        }\n        else {\n            if (this.model && this.line) {\n                this.model.remove(this.line);\n                this.line = undefined;\n                this.polyline = PolylineElement.create();\n                this.polyline.setStroke(this.stroke);\n                this.polyline.setInteractive(true).addTo(this.model);\n                this.lastPoint = new Point(args.location.x, args.location.y);\n                for (const pnt of this.points) {\n                    this.polyline.addPoint(pnt.clone());\n                }\n                const point = new Point(args.location.x, args.location.y);\n                this.lastPoint = point;\n                this.polyline.addPoint(this.lastPoint);\n                this.points.push(point);\n            }\n            else if (this.polyline) {\n                const point = new Point(args.location.x, args.location.y);\n                this.points.push(point);\n                this.lastPoint = point;\n                this.polyline.addPoint(this.lastPoint);\n            }\n        }\n        if (this.controller) {\n            this.controller.invalidate();\n        }\n    }\n\n    public mouseMove(args: MouseLocationArgs) {\n        if (!this.line && !this.polyline) {\n            return;\n        }\n        if (this.line) {\n            this.line.setP2(args.location);\n        }\n        else if (this.lastPoint) {\n            this.lastPoint.x = args.location.x;\n            this.lastPoint.y = args.location.y;\n        }\n        if (this.controller) {\n            this.controller.invalidate();\n        }\n    }\n\n    public mouseUp(args: MouseLocationArgs) {\n        if (this.controller) {\n            this.controller.invalidate();\n        }\n    }\n\n    public cancel() {\n        if (this.model && this.line) {\n            this.model.remove(this.line);\n            this.line = undefined;\n        }\n        else if (this.polyline && this.points) {\n            this.points.splice(this.points.length - 1);\n            if (this.points.length < 3) {\n                if (this.model) {\n                    this.model.remove(this.polyline);\n                }\n            }\n            else {\n                this.polyline.setPoints(this.points);\n            }\n        }\n        this.line = undefined;\n        this.polyline = undefined;\n        this.points = undefined;\n        this.lastPoint = undefined;\n        if (this.controller) {\n            this.controller.invalidate();\n        }\n        this.isCreating = false;\n    }\n}\n","import { MouseLocationArgs } from '../../core/mouse-location-args';\nimport { Point } from '../../core/point';\nimport { Size } from '../../core/size';\nimport { RectangleElement } from '../../elements/rectangle-element';\nimport { DesignTool } from './design-tool';\n\n/**\n * Rectangle element design creation tool\n */\nexport class RectangleTool extends DesignTool {\n    public point1?: Point;\n    public rectangle?: RectangleElement;\n    public cancelled: boolean = false;\n\n    public mouseDown(args: MouseLocationArgs): void {\n        this.cancelled = false;\n        this.point1 = Point.create(args.location.x, args.location.y);\n        this.rectangle = RectangleElement.create(args.location.x, args.location.y, 0, 0);\n        if (this.stroke) {\n            this.rectangle.setStroke(this.stroke);\n        }\n        if (this.fill) {\n            this.rectangle.setFill(this.fill);\n        }\n        if (this.fillScale !== 1) {\n            this.rectangle.setFillScale(this.fillScale);\n        }\n        if (this.model) {\n            this.rectangle.setInteractive(true).addTo(this.model);\n        }\n        if (this.controller) {\n            this.controller.invalidate();\n        }\n        this.isCreating = true;\n    }\n\n    public mouseMove(args: MouseLocationArgs) {\n        if (this.cancelled) {\n            return;\n        }\n        if (!this.rectangle) {\n            return;\n        }\n        if (!this.point1) {\n            return;\n        }\n        if (args.location.x < this.point1.x || args.location.y < this.point1.y) {\n            return;\n        }\n        this.rectangle.setSize(new Size(args.location.x - this.point1.x, args.location.y - this.point1.y));\n        if (this.controller) {\n            this.controller.invalidate();\n        }\n    }\n\n    public mouseUp(args: MouseLocationArgs) {\n        if (this.cancelled) {\n            return;\n        }\n        if (!this.rectangle) {\n            return;\n        }\n        if (!this.point1) {\n            return;\n        }\n        if (args.location.x < this.point1.x || args.location.y < this.point1.y) {\n            return;\n        }\n        this.rectangle.setSize(new Size(args.location.x - this.point1.x, args.location.y - this.point1.y));\n        if (this.controller) {\n            this.controller.invalidate();\n        }\n        this.rectangle = undefined;\n        this.isCreating = false;\n    }\n\n    public cancel() {\n        this.cancelled = true;\n        if (this.model && this.rectangle) {\n            this.model.remove(this.rectangle);\n        }\n        if (this.controller) {\n            this.controller.invalidate();\n        }\n        this.rectangle = undefined;\n        this.isCreating = false;\n    }\n}\n","import { MouseLocationArgs } from '../../core/mouse-location-args';\nimport { Point } from '../../core/point';\nimport { Size } from '../../core/size';\nimport { TextElement } from '../../elements/text-element';\nimport { DesignTool } from './design-tool';\n\n/**\n * Text element design creation tool\n */\nexport class TextTool extends DesignTool {\n    public point1?: Point;\n    public textElement?: TextElement;\n\n    public text?: string;\n    public typeface?: string;\n    public typesize: number;\n    public typestyle?: string;\n    public alignment?: string;\n    public cancelled: boolean = false;\n\n    constructor() {\n        super();\n        this.typesize = 10;\n    }\n\n    public mouseDown(args: MouseLocationArgs): void {\n        this.cancelled = false;\n        this.point1 = Point.create(args.location.x, args.location.y);\n        this.textElement = TextElement.create(this.text, args.location.x, args.location.y, 0, 0);\n        if (this.stroke) {\n            this.textElement.setStroke(this.stroke);\n        }\n        if (this.fill) {\n            this.textElement.setFill(this.fill);\n        }\n        if (this.fillScale !== 1) {\n            this.textElement.setFillScale(this.fillScale);\n        }\n        this.textElement.alignment = this.alignment;\n        this.textElement.typeface = this.typeface;\n        this.textElement.typestyle = this.typestyle;\n        this.textElement.typesize = this.typesize;\n        if (this.model) {\n            this.textElement.setInteractive(true).addTo(this.model);\n        }\n        if (this.controller) {\n            this.controller.invalidate();\n        }\n        this.isCreating = true;\n    }\n\n    public mouseMove(args: MouseLocationArgs) {\n        if (this.cancelled) {\n            return;\n        }\n        if (!this.textElement) {\n            return;\n        }\n        if (!this.point1) {\n            return;\n        }\n        if (args.location.x < this.point1.x || args.location.y < this.point1.y) {\n            return;\n        }\n        this.textElement.setSize(new Size(args.location.x - this.point1.x, args.location.y - this.point1.y));\n        if (this.controller) {\n            this.controller.invalidate();\n        }\n    }\n\n    public mouseUp(args: MouseLocationArgs) {\n        if (this.cancelled) {\n            return;\n        }\n        if (!this.textElement) {\n            return;\n        }\n        if (!this.point1) {\n            return;\n        }\n        if (args.location.x < this.point1.x || args.location.y < this.point1.y) {\n            return;\n        }\n        this.textElement.setSize(new Size(args.location.x - this.point1.x, args.location.y - this.point1.y));\n        if (this.controller) {\n            this.controller.invalidate();\n        }\n        this.textElement = undefined;\n        this.isCreating = false;\n    }\n\n    public cancel() {\n        this.cancelled = true;\n        if (this.model && this.textElement) {\n            this.model.remove(this.textElement);\n        }\n        if (this.controller) {\n            this.controller.invalidate();\n        }\n        this.textElement = undefined;\n        this.isCreating = false;\n    }\n}\n","import { ElementCommandHandler } from '../command/element-command-handler';\nimport { IController } from '../controller/controller';\nimport { ControllerEvent, IControllerEvent } from '../controller/controller-event';\nimport { ControllerEventArgs } from '../controller/controller-event-args';\nimport { Color } from '../core/color';\nimport { ErrorMessages } from '../core/error-messages';\nimport { Logging } from '../core/logging';\nimport { Model } from '../core/model';\nimport { IMouseEvent } from '../core/mouse-event';\nimport { MouseEventArgs } from '../core/mouse-event-args';\nimport { MouseLocationArgs } from '../core/mouse-location-args';\nimport { Point } from '../core/point';\nimport { PointDepth } from '../core/point-depth';\nimport { PointEventParameters } from '../core/point-event-parameters';\nimport { Region } from '../core/region';\nimport { Size } from '../core/size';\nimport { TimerParameters } from '../core/timer-parameters';\nimport { Utility } from '../core/utility';\nimport { ViewDragArgs } from '../core/view-drag-args';\nimport { ElementBase } from '../elements/element-base';\nimport { ElementCreationProps } from '../elements/element-creation-props';\nimport { ElementDragArgs } from '../elements/element-drag-args';\nimport { ElementLocationArgs } from '../elements/element-location-args';\nimport { ElementSizeArgs } from '../elements/element-size-args';\nimport { ElementSizeProps } from '../elements/element-size-props';\nimport { MoveLocation } from '../elements/move-location';\nimport { ResizeSize } from '../elements/resize-size';\nimport { Component } from './component/component';\nimport { ComponentElement } from './component/component-element';\nimport { ComponentRegistry } from './component/component-registry';\nimport { DesignRenderer } from './design-renderer';\nimport { GridType } from './grid-type';\nimport { Handle } from './handle';\nimport { HandleFactory } from './handle-factory';\nimport { DesignTool } from './tools/design-tool';\n\nconst log = Logging.log;\n\nconst EPSILON = 2e-23;\n\n/**\n * Design controller for interactive element creation\n */\nexport class DesignController implements IController {\n    /**\n     * Global captured DesignController when mouse is down\n     */\n    public static captured?: DesignController;\n\n    /**\n     * Determines if a location and size are within the bounds of a model\n     * @param p - Point\n     * @param s - Size\n     * @param model - Model\n     */\n    public static isInBounds(p: Point, s: Size, model: Model): boolean {\n        if (p.x < 0 || p.y < 0) {\n            return false;\n        }\n        const size = model.getSize();\n        if (!size) {\n            return false;\n        }\n        if (p.x + s.width > size.width) {\n            return false;\n        }\n        if (p.y + s.height > size.height) {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * Create a new view controller and canvas and bind to host DIV element\n     * @param hostDiv - Host div element\n     * @param model - Drawing model\n     * @param scale - Rendering scale\n     * @returns New design controller\n     */\n    public static initializeTarget(hostDiv: HTMLDivElement, model: Model, scale?: number): DesignController {\n        log('Initializing view controller target');\n        if (!hostDiv) {\n            throw new Error(ErrorMessages.HostElementUndefined);\n        }\n        hostDiv.innerHTML = '';\n        if (!hostDiv.id) {\n            hostDiv.id = Utility.guid();\n        }\n\n        // Disable arrow/navigation keys to prevent scrolling\n        // and allow handling in contained canvas\n        const ar = [ 37, 38, 39, 40 ];\n\n        // Change to use DOM 0 Style binding to prevent multiples\n        hostDiv.onkeydown = e => {\n            const key = e.which;\n            ar.forEach(k => {\n                if (k === key) {\n                    e.preventDefault();\n                    return false;\n                }\n            });\n            return true;\n        };\n\n        const controller = new DesignController();\n        const designScale = scale === undefined ? 1 : scale;\n        controller.setScale(designScale);\n        controller.setModel(model);\n        const canvas = controller.getCanvas();\n        if (canvas) {\n            hostDiv.appendChild(canvas);\n            canvas.setAttribute('id', hostDiv.id + '_canvas');\n        }\n        const size = model.getSize();\n        if (size) {\n            hostDiv.style.width = size.width * designScale + 'px';\n            hostDiv.style.height = size.height * designScale + 'px';\n        }\n        controller.draw();\n        model.controllerAttached.trigger(model, controller);\n        return controller;\n    }\n\n    /**\n     * Fired when model is updated\n     */\n    public modelUpdated: IControllerEvent<Model> = new ControllerEvent<Model>();\n\n    /**\n     * Fired when enabled state is changed\n     */\n    public enabledChanged: IControllerEvent<boolean> = new ControllerEvent<boolean>();\n\n    /**\n     * Fired when mouse enters view\n     */\n    public mouseEnteredView: IControllerEvent<MouseEventArgs> = new ControllerEvent<MouseEventArgs>();\n\n    /**\n     * Fired when mouse leaves view\n     */\n    public mouseLeftView: IControllerEvent<MouseEventArgs> = new ControllerEvent<MouseEventArgs>();\n\n    /**\n     * Fired when mouse is pressed over view. Captures mouse activity.\n     */\n    public mouseDownView: IControllerEvent<PointEventParameters> = new ControllerEvent<PointEventParameters>();\n\n    /**\n     * Fired when mouse is released and mouse is captured.\n     */\n    public mouseUpView: IControllerEvent<PointEventParameters> = new ControllerEvent<PointEventParameters>();\n\n    /**\n     * Fired when mouse is moved over view\n     */\n    public mouseMovedView: IControllerEvent<PointEventParameters> = new ControllerEvent<PointEventParameters>();\n\n    /**\n     * Fired when mouse enters element bounds\n     */\n    public mouseEnteredElement: IControllerEvent<ElementBase> = new ControllerEvent<ElementBase>();\n\n    /**\n     * Fired when mouse leaves element bounds\n     */\n    public mouseLeftElement: IControllerEvent<ElementBase> = new ControllerEvent<ElementBase>();\n\n    /**\n     * Fired when mouse is pressed over element\n     */\n    public mouseDownElement: IControllerEvent<ElementBase> = new ControllerEvent<ElementBase>();\n\n    /**\n     * Fired when mouse is released over element\n     */\n    public mouseUpElement: IControllerEvent<ElementBase> = new ControllerEvent<ElementBase>();\n\n    /**\n     * Fired when mouse is pressed and released over an element\n     */\n    public elementClicked: IControllerEvent<ElementBase> = new ControllerEvent<ElementBase>();\n\n    /**\n     * Period animation event timer fired when timer is enabled\n     */\n    public timer: ControllerEvent<TimerParameters> = new ControllerEvent<TimerParameters>();\n\n    /**\n     * Fired when elements are selected or deselected\n     */\n    public selectionChanged: IControllerEvent<number> = new ControllerEvent<number>();\n\n    /**\n     * Fired when element is drag created\n     */\n    public elementCreated: IControllerEvent<Region> = new ControllerEvent<Region>();\n\n    /**\n     * Fired when an element is added to the model\n     */\n    public elementAdded: IControllerEvent<ElementBase> = new ControllerEvent<ElementBase>();\n\n    /**\n     * Fired when an element is removed from the model\n     */\n    public elementRemoved: IControllerEvent<ElementBase> = new ControllerEvent<ElementBase>();\n\n    /**\n     * Fired when a delete request is trigger\n     */\n    public onDelete: IControllerEvent<ControllerEventArgs> = new ControllerEvent<ControllerEventArgs>();\n\n    /**\n     * Fired when an element is being moved\n     */\n    public elementMoving: IControllerEvent<ElementLocationArgs> = new ControllerEvent<ElementLocationArgs>();\n\n    /**\n     * Fired when an element has been moved\n     */\n    public elementMoved: IControllerEvent<ElementLocationArgs> = new ControllerEvent<ElementLocationArgs>();\n\n    /**\n     * Fired when an element is being sized\n     */\n    public elementSizing: IControllerEvent<ElementSizeArgs> = new ControllerEvent<ElementSizeArgs>();\n\n    /**\n     * Fired when an element has been sized\n     */\n    public elementSized: IControllerEvent<ElementSizeArgs> = new ControllerEvent<ElementSizeArgs>();\n\n    /**\n     * Fired when a mouse drag has started over the view\n     */\n    public viewDragEnter: IControllerEvent<ViewDragArgs> = new ControllerEvent<ViewDragArgs>();\n\n    /**\n     * Fired while a mouse drag is occurring over the view\n     */\n    public viewDragOver: IControllerEvent<ViewDragArgs> = new ControllerEvent<ViewDragArgs>();\n\n    /**\n     * Fired when a mouse drag has left the view\n     */\n    public viewDragLeave: IControllerEvent<ViewDragArgs> = new ControllerEvent<ViewDragArgs>();\n\n    /**\n     * Fired when a mouse drop has occurred on the view\n     */\n    public viewDrop: IControllerEvent<ViewDragArgs> = new ControllerEvent<ViewDragArgs>();\n\n    /**\n     * Fired when a mouse drag has entered an element\n     */\n    public elementDragEnter: IControllerEvent<ElementDragArgs> = new ControllerEvent<ElementDragArgs>();\n\n    /**\n     * Fired when a mouse drag has left an element\n     */\n    public elementDragLeave: IControllerEvent<ElementDragArgs> = new ControllerEvent<ElementDragArgs>();\n\n    /**\n     * Fired when a mouse drop occurs on an element\n     */\n    public elementDrop: IControllerEvent<ElementDragArgs> = new ControllerEvent<ElementDragArgs>();\n\n    /**\n     * Fired when elements are reordered\n     */\n    public elementsReordered: IControllerEvent<ElementBase[]> = new ControllerEvent<ElementBase[]>();\n\n    /**\n     * Fired when IsDirty state changes\n     */\n    public isDirtyChanged: IControllerEvent<boolean> = new ControllerEvent<boolean>();\n\n    /**\n     * Controlled model\n     */\n    public model?: Model;\n\n    /**\n     * Canvas rendering target\n     */\n    public canvas?: HTMLCanvasElement;\n\n    /**\n     * User interaction enabled flag\n     */\n    public enabled: boolean;\n\n    /**\n     * Unsaved changed (dirty) flag\n     */\n    public isDirty: boolean;\n\n    /**\n     * Current mouse x position\n     */\n    public currentX?: number;\n\n    /**\n     * Current mouse y position\n     */\n    public currentY?: number;\n\n    /**\n     * Current drag rectangle width\n     */\n    public currentWidth?: number;\n\n    /**\n     * Current drag rectangle height\n     */\n    public currentHeight?: number;\n\n    /**\n     * Last mouse client X position\n     */\n    public lastClientX: number;\n\n    /**\n     * Last mouse client Y position\n     */\n    public lastClientY: number;\n\n    /**\n     * True when mouse is down and captured over view\n     */\n    public isMouseDown: boolean;\n\n    /**\n     * True when elements are being moved\n     */\n    public isMoving: boolean;\n\n    /**\n     * True when elements are being resized\n     */\n    public isResizing: boolean;\n\n    /**\n     * True when point container point is being moved\n     */\n    public isMovingPoint: boolean;\n\n    /**\n     * True when drag operation is in effect\n     */\n    public isDragging: boolean;\n\n    /**\n     * Index of point into current element being moved\n     */\n    public movingPointIndex?: number;\n\n    /**\n     * Location at which mouse was pressed\n     */\n    public mouseDownPosition?: Point;\n\n    /**\n     * Topmost element at mouse location\n     */\n    public mouseOverElement?: ElementBase;\n\n    /**\n     * Topmost element over which mouse was pressed\n     */\n    public pressedElement?: ElementBase;\n\n    /**\n     * Topmost element over which mouse drag is occurring\n     */\n    public dragOverElement?: ElementBase;\n\n    /**\n     * Last mouse movement X delta\n     */\n    public lastDeltaX: number;\n\n    /**\n     * Last mouse movement Y delta\n     */\n    public lastDeltaY: number;\n\n    /**\n     * Selected element array\n     */\n    public selectedElements: ElementBase[] = [];\n\n    /**\n     * True when drag selecting\n     */\n    public selecting: boolean;\n\n    /**\n     * Sizing handle array for selected elements\n     */\n    public sizeHandles?: Handle[];\n\n    /**\n     * Location of point container point in motion\n     */\n    public movingPointLocation?: Point;\n\n    /**\n     * Array of tentative sizes for elements being sized\n     */\n    public elementResizeSizes: ResizeSize[] = [];\n\n    /**\n     * Array of tentative locations for elements being sized or moved\n     */\n    public elementMoveLocations: MoveLocation[] = [];\n\n    /**\n     * True when rubber band is active\n     */\n    public rubberBandActive: boolean;\n\n    /**\n     * Rubber band rectangle region\n     */\n    public rubberBandRegion?: Region;\n\n    /**\n     * Snap element move and size actions to grid\n     */\n    public snapToGrid: boolean;\n\n    /**\n     * Design grid spacing\n     */\n    public gridSpacing: number;\n\n    /**\n     * Lock aspect ratio of resized items\n     */\n    public lockAspect: boolean;\n\n    /**\n     * Constrain elements to model bounds\n     */\n    public constrainToBounds: boolean;\n\n    /**\n     * Minimum size to which elements can be sized\n     */\n    public minElementSize: Size = new Size(4, 4);\n\n    /**\n     * Design surface grid type\n     */\n    public gridType: GridType = GridType.Lines;\n\n    /**\n     * Design surface grid color as string\n     */\n    public gridColor: string;\n\n    /**\n     * Design surface disabled state fill\n     */\n    public disabledFill?: string;\n\n    /**\n     * Cancel mouse action flag\n     */\n    public cancelAction: boolean;\n\n    /**\n     * True when selection is enabled\n     */\n    public selectionEnabled: boolean;\n\n    /**\n     * Rendering scale\n     */\n    public scale: number;\n\n    /**\n     * True when redraw is required\n     */\n    public needsRedraw: boolean;\n\n    /**\n     * Design renderer\n     */\n    public renderer?: DesignRenderer;\n\n    /**\n     * Large keyboard nudge amount\n     */\n    public largeJump: number;\n\n    /**\n     * Active element creation component\n     */\n    public activeComponent?: Component;\n\n    /**\n     * Active element creation tool\n     */\n    public activeTool?: DesignTool;\n\n    /**\n     * Element creation fill image\n     */\n    public fillImage?: HTMLImageElement;\n\n    /**\n     * Last frame render time\n     */\n    public lastFrameTime?: number;\n\n    /**\n     * Command handler for handling routed events\n     */\n    public commandHandler?: ElementCommandHandler;\n\n    /**\n     * Manages rendering and interaction with rendered model content\n     */\n    constructor() {\n        this.setModel = this.setModel.bind(this);\n        this.setEnabled = this.setEnabled.bind(this);\n        this.addElement = this.addElement.bind(this);\n        this.removeElement = this.removeElement.bind(this);\n        this.removeSelected = this.removeSelected.bind(this);\n        this.addComponentElement = this.addComponentElement.bind(this);\n        this.getCanvas = this.getCanvas.bind(this);\n        this.drawIfNeeded = this.drawIfNeeded.bind(this);\n        this.createCanvas = this.createCanvas.bind(this);\n        this.detach = this.detach.bind(this);\n        this.setScale = this.setScale.bind(this);\n        this.windowToCanvas = this.windowToCanvas.bind(this);\n        this.windowMouseUp = this.windowMouseUp.bind(this);\n        this.windowMouseMove = this.windowMouseMove.bind(this);\n        this.onCanvasMouseEnter = this.onCanvasMouseEnter.bind(this);\n        this.onCanvasMouseLeave = this.onCanvasMouseLeave.bind(this);\n        this.onCanvasMouseDown = this.onCanvasMouseDown.bind(this);\n        this.onCanvasMouseMove = this.onCanvasMouseMove.bind(this);\n        this.onCanvasMouseUp = this.onCanvasMouseUp.bind(this);\n        this.onCanvasKeyDown = this.onCanvasKeyDown.bind(this);\n        this.onCanvasDragEnter = this.onCanvasDragEnter.bind(this);\n        this.onCanvasDragOver = this.onCanvasDragOver.bind(this);\n        this.onCanvasDragLeave = this.onCanvasDragLeave.bind(this);\n        this.onCanvasDrop = this.onCanvasDrop.bind(this);\n        this.ensureInBounds = this.ensureInBounds.bind(this);\n        this.setMouseDownElement = this.setMouseDownElement.bind(this);\n        this.setMouseOverElement = this.setMouseOverElement.bind(this);\n        this.setDragOverElement = this.setDragOverElement.bind(this);\n        this.onSelectionChanged = this.onSelectionChanged.bind(this);\n        this.onElementAdded = this.onElementAdded.bind(this);\n        this.onElementRemoved = this.onElementRemoved.bind(this);\n        this.onModelUpdated = this.onModelUpdated.bind(this);\n        this.onElementSizing = this.onElementSizing.bind(this);\n        this.onElementSized = this.onElementSized.bind(this);\n        this.setElementLocation = this.setElementLocation.bind(this);\n        this.onElementMoved = this.onElementMoved.bind(this);\n        this.renderGrid = this.renderGrid.bind(this);\n        this.drawDashedLine = this.drawDashedLine.bind(this);\n        this.getElementHandles = this.getElementHandles.bind(this);\n        this.drawRubberBand = this.drawRubberBand.bind(this);\n        this.drawHotspot = this.drawHotspot.bind(this);\n        this.drawDashedHorizontalLine = this.drawDashedHorizontalLine.bind(this);\n        this.drawDashedVerticalLine = this.drawDashedVerticalLine.bind(this);\n        this.drawHorizontalLine = this.drawHorizontalLine.bind(this);\n        this.drawVerticalLine = this.drawVerticalLine.bind(this);\n        this.drawGuidewires = this.drawGuidewires.bind(this);\n        this.draw = this.draw.bind(this);\n        this.calculateFPS = this.calculateFPS.bind(this);\n        this.invalidate = this.invalidate.bind(this);\n        this.selectedElementCount = this.selectedElementCount.bind(this);\n        this.selectedElement = this.selectedElement.bind(this);\n        this.clearSelections = this.clearSelections.bind(this);\n        this.isSelected = this.isSelected.bind(this);\n        this.selectElement = this.selectElement.bind(this);\n        this.deselectElement = this.deselectElement.bind(this);\n        this.toggleSelected = this.toggleSelected.bind(this);\n        this.selectAll = this.selectAll.bind(this);\n        this.selectElements = this.selectElements.bind(this);\n        this.onElementsReordered = this.onElementsReordered.bind(this);\n        this.moveElementToBottom = this.moveElementToBottom.bind(this);\n        this.moveElementToTop = this.moveElementToTop.bind(this);\n        this.moveElementBackward = this.moveElementBackward.bind(this);\n        this.moveElementForward = this.moveElementForward.bind(this);\n        this.movableSelectedElementCount = this.movableSelectedElementCount.bind(this);\n        this.resizeableSelectedElementCount = this.resizeableSelectedElementCount.bind(this);\n        this.nudgeableSelectedElementCount = this.nudgeableSelectedElementCount.bind(this);\n        this.clearElementResizeSizes = this.clearElementResizeSizes.bind(this);\n        this.setElementResizeSize = this.setElementResizeSize.bind(this);\n        this.getElementResizeSize = this.getElementResizeSize.bind(this);\n        this.clearElementMoveLocations = this.clearElementMoveLocations.bind(this);\n        this.setElementMoveLocation = this.setElementMoveLocation.bind(this);\n        this.getElementMoveLocation = this.getElementMoveLocation.bind(this);\n        this.nudgeSize = this.nudgeSize.bind(this);\n        this.nudgeLocation = this.nudgeLocation.bind(this);\n        this.setRubberBandActive = this.setRubberBandActive.bind(this);\n        this.setRubberBandRegion = this.setRubberBandRegion.bind(this);\n        this.setGridType = this.setGridType.bind(this);\n        this.setGridSpacing = this.setGridSpacing.bind(this);\n        this.setGridColor = this.setGridColor.bind(this);\n        this.bindTarget = this.bindTarget.bind(this);\n\n        this.enabled = true;\n        this.scale = 1.0;\n        this.lastDeltaX = -1;\n        this.lastDeltaY = -1;\n        this.isDirty = false;\n        this.isMouseDown = false;\n        this.isMoving = false;\n        this.isResizing = false;\n        this.isMovingPoint = false;\n        this.isDragging = false;\n        this.lastClientX = -1;\n        this.lastClientY = -1;\n        this.selecting = false;\n        this.rubberBandActive = false;\n        this.snapToGrid = false;\n        this.gridSpacing = 8;\n        this.lockAspect = false;\n        this.constrainToBounds = true;\n        this.gridColor = 'Black';\n        this.cancelAction = false;\n        this.selectionEnabled = true;\n        this.needsRedraw = false;\n        this.largeJump = 10;\n    }\n\n    /**\n     * Sets controller model\n     */\n    public setModel(model: Model): void {\n        if (model === this.model) {\n            return;\n        }\n        if (this.model) {\n            this.model.controllerDetached.trigger(this.model, this);\n        }\n        log('Setting design controller model');\n        this.model = model;\n        this.currentX = undefined;\n        this.currentY = undefined;\n        this.currentWidth = undefined;\n        this.currentHeight = undefined;\n\n        this.isMouseDown = false;\n        this.isMoving = false;\n        this.isResizing = false;\n        this.isMovingPoint = false;\n        this.isDragging = false;\n        this.mouseDownPosition = undefined;\n        this.mouseOverElement = undefined;\n        this.pressedElement = undefined;\n        this.dragOverElement = undefined;\n        this.lastDeltaX = -1;\n        this.lastDeltaY = -1;\n\n        this.selectedElements = [];\n        this.selecting = false;\n        this.sizeHandles = undefined;\n        this.movingPointLocation = undefined;\n        this.elementResizeSizes = [];\n        this.elementMoveLocations = [];\n        this.rubberBandActive = false;\n        this.rubberBandRegion = undefined;\n\n        if (!this.canvas) {\n            this.createCanvas();\n        }\n        else {\n            const size = model.getSize();\n            if (!size) {\n                throw new Error(ErrorMessages.SizeUndefined);\n            }\n            const width = size.width * this.scale;\n            const height = size.height * this.scale;\n            this.canvas.width = width;\n            this.canvas.height = height;\n            const element = this.canvas.parentElement;\n            if (element) {\n                element.style.width = width + 'px';\n                element.style.height = height + 'px';\n            }\n        }\n\n        if (this.model.elements) {\n            this.model.elements.forEach(element => {\n                if (element.interactive === undefined) {\n                    element.interactive = true;\n                }\n            });\n        }\n    }\n\n    /**\n     * Sets enabled state with optional disabled state overlay fill\n     * @param enabled - User interactivity enabled state\n     * @param disabledFill - Optional disabled state fill as string\n     */\n    public setEnabled(enabled: boolean, disabledFill?: string): void {\n        if (enabled === this.enabled) {\n            return;\n        }\n        this.enabled = enabled;\n        if (disabledFill !== undefined) {\n            this.disabledFill = disabledFill;\n        }\n        if (!enabled) {\n            if (this.isMouseDown) {\n                this.cancelAction = true;\n                this.onCanvasMouseUp({ clientX: this.lastClientX, clientY: this.lastClientY });\n            }\n            if (this.isDragging) {\n                this.onCanvasDragLeave(undefined);\n            }\n        }\n        this.draw();\n        if (this.enabledChanged) {\n            this.enabledChanged.trigger(this, this.enabled);\n        }\n    }\n\n    public clearActiveTool() {\n        if (this.activeTool) {\n            this.activeTool.cancel();\n            this.activeTool.controller = undefined;\n            this.activeTool.model = undefined;\n            this.activeTool = undefined;\n        }\n    }\n\n    public setActiveTool(tool: DesignTool) {\n        this.clearSelections();\n        if (this.activeTool) {\n            this.activeTool.cancel();\n            this.activeTool.controller = undefined;\n            this.activeTool.model = undefined;\n        }\n        tool.model = this.model;\n        tool.controller = this;\n        this.activeTool = tool;\n    }\n\n    /**\n     * Adds an element to the model\n     * @param el - Element to add\n     */\n    public addElement(el: ElementBase): void {\n        if (el.interactive === undefined) {\n            el.interactive = true;\n        }\n        if (this.model) {\n            this.model.add(el);\n        }\n        if (this.constrainToBounds) {\n            this.ensureInBounds(el);\n        }\n        this.onElementAdded(el);\n        this.onModelUpdated();\n        this.drawIfNeeded();\n    }\n\n    /**\n     * Removed an element from the model\n     * @param el - Element to remove\n     */\n    public removeElement(el: ElementBase): void {\n        if (this.model) {\n            const index = this.model.remove(el);\n            if (index !== -1) {\n                this.onElementRemoved(el);\n                this.deselectElement(el);\n                this.onModelUpdated();\n                this.drawIfNeeded();\n            }\n        }\n    }\n\n    /**\n     * Removes all selected elements\n     */\n    public removeSelected(): void {\n        const self = this;\n        let itemsRemoved = false;\n        self.selectedElements.forEach(el => {\n            if (self.model) {\n                const index = self.model.remove(el);\n                if (index !== -1) {\n                    itemsRemoved = true;\n                    self.onElementRemoved(el);\n                }\n            }\n        });\n        if (itemsRemoved) {\n            self.selectedElements = [];\n            self.onSelectionChanged();\n            self.onModelUpdated();\n            self.drawIfNeeded();\n        }\n    }\n\n    /**\n     * Adds a new component element to the model\n     * @param type - Type of component element to add\n     * @param id - New element id\n     * @param x - X coordinate\n     * @param y - Y coordinate\n     * @param width - Width\n     * @param height - Height\n     * @param props - Element creation props\n     * @param callback - Element created callback (element: Elise.ElementBase)\n     */\n    public addComponentElement(\n        type: string,\n        id: string,\n        x: number,\n        y: number,\n        width: number,\n        height: number,\n        props: ElementCreationProps,\n        callback: (element: ElementBase) => void\n    ) {\n        const self = this;\n        const component = ComponentRegistry.getComponent(type);\n        if (!component) {\n            throw new Error(ErrorMessages.ComponentTypeNotRegistered + ': ' + type);\n        }\n        if (self.model) {\n            const el = component.CreateElement(self.model, id, x, y, width, height, props);\n            el.interactive = true;\n            self.model.prepareResources(undefined, success => {\n                if (success) {\n                    self.onElementAdded(el);\n                    self.onModelUpdated();\n                    self.drawIfNeeded();\n                    if (callback) {\n                        callback(el);\n                    }\n                }\n                else {\n                    throw new Error(ErrorMessages.ResourcesFailedToLoad);\n                }\n            });\n        }\n    }\n\n    /**\n     * Creates if necessary and returns canvas element\n     */\n    public getCanvas(): HTMLCanvasElement | undefined {\n        if (!this.canvas) {\n            this.createCanvas();\n        }\n        return this.canvas;\n    }\n\n    /**\n     * Renders to canvas if needed and clears redraw flag\n     */\n    public drawIfNeeded(): void {\n        if (this.needsRedraw) {\n            this.draw();\n            this.needsRedraw = false;\n        }\n    }\n\n    /**\n     * Creates canvas for model at current scale and attached event handlers\n     */\n    public createCanvas() {\n        log('Creating canvas and attaching event handlers');\n        const self = this;\n        if (!self.model) {\n            return;\n        }\n        const size = self.model.getSize();\n        if (!size) {\n            throw new Error(ErrorMessages.SizeUndefined);\n        }\n        const canvas = document.createElement('canvas');\n        canvas.width = size.width * self.scale;\n        canvas.height = size.height * self.scale;\n        canvas.setAttribute('tabindex', '0');\n\n        canvas.addEventListener('mouseenter', self.onCanvasMouseEnter);\n        canvas.addEventListener('mouseleave', self.onCanvasMouseLeave);\n        canvas.addEventListener('mousedown', self.onCanvasMouseDown);\n        canvas.addEventListener('mousemove', self.onCanvasMouseMove);\n        canvas.addEventListener('keydown', self.onCanvasKeyDown);\n        canvas.addEventListener('dragenter', self.onCanvasDragEnter);\n        canvas.addEventListener('dragleave', self.onCanvasDragLeave);\n        canvas.addEventListener('drop', self.onCanvasDrop);\n\n        self.canvas = canvas;\n        self.renderer = new DesignRenderer(self);\n    }\n\n    /**\n     * Detaches and destroys current canvas\n     */\n    public detach(): void {\n        if (this.model) {\n            this.model.controllerDetached.trigger(this.model, this);\n            this.model.controllerDetached.clear();\n            this.model.controllerAttached.clear();\n        }\n        if (!this.canvas) {\n            return;\n        }\n        log('Detaching event handlers and destroying canvas');\n        this.canvas.addEventListener('mouseenter', this.onCanvasMouseEnter);\n        this.canvas.addEventListener('mouseleave', this.onCanvasMouseLeave);\n        this.canvas.addEventListener('mousedown', this.onCanvasMouseDown);\n        this.canvas.addEventListener('mousemove', this.onCanvasMouseMove);\n        this.canvas.addEventListener('keydown', this.onCanvasKeyDown);\n        this.canvas.addEventListener('dragenter', this.onCanvasDragEnter);\n        this.canvas.addEventListener('dragleave', this.onCanvasDragLeave);\n        this.canvas.addEventListener('drop', this.onCanvasDrop);\n        const element = this.canvas.parentElement;\n        if (element) {\n            element.removeChild(this.canvas);\n        }\n        this.modelUpdated.clear();\n        this.enabledChanged.clear();\n        this.mouseEnteredView.clear();\n        this.mouseLeftView.clear();\n        this.mouseDownView.clear();\n        this.mouseUpView.clear();\n        this.mouseMovedView.clear();\n        this.mouseEnteredElement.clear();\n        this.mouseLeftElement.clear();\n        this.mouseDownElement.clear();\n        this.mouseUpElement.clear();\n        this.elementClicked.clear();\n        this.timer.clear();\n        this.selectionChanged.clear();\n        this.elementCreated.clear();\n        this.elementAdded.clear();\n        this.elementRemoved.clear();\n        this.onDelete.clear();\n        this.elementMoving.clear();\n        this.elementMoved.clear();\n        this.elementSizing.clear();\n        this.elementSized.clear();\n        this.viewDragEnter.clear();\n        this.viewDragOver.clear();\n        this.viewDragLeave.clear();\n        this.viewDrop.clear();\n        this.elementDragEnter.clear();\n        this.elementDragLeave.clear();\n        this.elementDrop.clear();\n        this.elementsReordered.clear();\n        this.isDirtyChanged.clear();\n        this.canvas = undefined;\n    }\n\n    /**\n     * Changes design surface rendering scale\n     * @param scale - New rendering scale\n     */\n    public setScale(scale: number, force?: boolean): void {\n        if (scale === this.scale && !force) {\n            return;\n        }\n        this.scale = scale;\n        if (this.canvas) {\n            if (this.model) {\n                const size = this.model.getSize();\n                if (!size) {\n                    throw new Error(ErrorMessages.SizeUndefined);\n                }\n                const width = size.width * scale;\n                const height = size.height * scale;\n                this.canvas.width = width;\n                this.canvas.height = height;\n                const element = this.canvas.parentElement;\n                if (element) {\n                    element.style.width = width + 'px';\n                    element.style.height = height + 'px';\n                }\n                this.draw();\n            }\n        }\n    }\n\n    public getNearestSnapX(newX: number) {\n        let diff = newX % this.gridSpacing;\n        if (diff > EPSILON) {\n            if (diff < this.gridSpacing / 2) {\n                newX -= diff;\n            }\n            else {\n                diff = this.gridSpacing - diff;\n                newX += diff;\n            }\n            return newX;\n        }\n        else {\n            return newX;\n        }\n    }\n\n    public getNearestSnapY(newY: number) {\n        let diff = newY % this.gridSpacing;\n        if (diff > EPSILON) {\n            if (diff < this.gridSpacing / 2) {\n                newY -= diff;\n            }\n            else {\n                diff = this.gridSpacing - diff;\n                newY += diff;\n            }\n            return newY;\n        }\n        else {\n            return newY;\n        }\n    }\n\n    /**\n     * Translates raw window coordinates to model coordinates\n     * compensating for current scale and origin offset\n     * @param x - Raw x coordinate\n     * @param y - Raw y coordinate\n     */\n    public windowToCanvas(x: number, y: number): Point {\n        if (!this.canvas) {\n            return new Point(x, y);\n        }\n        const bounds = this.canvas.getBoundingClientRect();\n        return new Point(\n            Math.round((x - bounds.left * (this.canvas.width / bounds.width)) / this.scale),\n            Math.round((y - bounds.top * (this.canvas.height / bounds.height)) / this.scale)\n        );\n    }\n\n    /**\n     * Handles captured mouse up event\n     * @param e - Window mouse up event\n     */\n    public windowMouseUp(e: MouseEvent): void {\n        const captured = DesignController.captured;\n        if (captured) {\n            log(`Window mouse up ${e.clientX}:${e.clientY}`);\n            captured.onCanvasMouseUp(e);\n            captured.drawIfNeeded();\n            window.removeEventListener('mousedown', captured.windowMouseUp, true);\n            window.removeEventListener('mousemove', captured.windowMouseMove, true);\n            DesignController.captured = undefined;\n        }\n    }\n\n    /**\n     * Handles captured mouse move event\n     * @param e - Window mouse up event\n     */\n    public windowMouseMove(e: MouseEvent): void {\n        const captured = DesignController.captured;\n        if (captured) {\n            log(`Window mouse move ${e.clientX}:${e.clientY}`);\n            e.preventDefault();\n            e.stopPropagation();\n            captured.onCanvasMouseMove(e);\n            captured.drawIfNeeded();\n        }\n    }\n\n    /**\n     * Handles canvas mouse enter event\n     * @param e - DOM mouse event\n     */\n    public onCanvasMouseEnter(e: MouseEvent): void {\n        log('Canvas mouse enter');\n        if (!this.enabled) {\n            return;\n        }\n        if (this.mouseEnteredView.hasListeners()) {\n            this.mouseEnteredView.trigger(this, new MouseEventArgs(e));\n        }\n        this.drawIfNeeded();\n    }\n\n    /**\n     * Handles canvas mouse leave event\n     * @param e - DOM mouse event\n     */\n    public onCanvasMouseLeave(e: MouseEvent): void {\n        log('Canvas mouse leave');\n        if (!this.enabled) {\n            return;\n        }\n        if (this.mouseLeftView.hasListeners()) {\n            this.mouseLeftView.trigger(this, new MouseEventArgs(e));\n        }\n        this.drawIfNeeded();\n    }\n\n    /**\n     * Handles canvas mouse down event\n     * @param c - Design controller\n     * @param e - Mouse event\n     */\n    public onCanvasMouseDown(e: MouseEvent): void {\n        if (!this.model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        if (!this.canvas) {\n            return;\n        }\n        log(`Canvas mouse down ${e.clientX}:${e.clientY}`);\n        DesignController.captured = this;\n        window.addEventListener('mouseup', this.windowMouseUp, true);\n        window.addEventListener('mousemove', this.windowMouseMove, true);\n        if (!this.enabled) {\n            return;\n        }\n        const p = this.windowToCanvas(e.clientX, e.clientY);\n        const context = this.canvas.getContext('2d');\n        if (!context) {\n            return;\n        }\n\n        // Set current location and empty width/height\n        this.currentX = p.x;\n        this.currentY = p.y;\n        this.currentWidth = 0;\n        this.currentHeight = 0;\n        this.mouseDownPosition = new Point(p.x, p.y);\n        this.isMouseDown = true;\n\n        // Get button clicked (0 = Left)\n        const button = e.button;\n\n        // If we have an active tool\n        if (this.activeTool) {\n            // If it's creating and right button pressed, cancel and return\n            if (this.activeTool.isCreating && button === 2) {\n                this.activeTool.cancel();\n                e.preventDefault();\n                e.stopPropagation();\n                this.isMouseDown = false;\n                this.draw();\n                return;\n            }\n\n            // If not right mouse button, pass to tool\n            if (button !== 2) {\n                this.activeTool.mouseDown(new MouseLocationArgs(e, new Point(p.x, p.y)));\n            }\n\n            // Fire mouse down event\n            if (this.mouseDownView.hasListeners()) {\n                this.mouseDownView.trigger(this, new PointEventParameters(e, new Point(p.x, p.y)));\n            }\n\n            return;\n        }\n\n        // Fire mouse down event\n        if (this.mouseDownView.hasListeners()) {\n            this.mouseDownView.trigger(this, new PointEventParameters(e, new Point(p.x, p.y)));\n        }\n\n        // Set active element if any at location\n        const activeElement = this.model.firstActiveElementAt(context, p.x, p.y);\n        this.setMouseDownElement(activeElement);\n\n        // Clear cancel action flag\n        this.cancelAction = false;\n\n        // Left button\n        if (button === 0 || button === 2) {\n            let foundHandle = false;\n            let selectedHandle: Handle | undefined;\n\n            for (const el of this.selectedElements) {\n                const handles = this.getElementHandles(el);\n\n                // If element is transformed, hit test against transformed rectangles\n                if (el.transform) {\n                    context.save();\n                    const b = el.getBounds();\n                    if (!b) {\n                        continue;\n                    }\n                    let reference = new Point(b.x, b.y);\n                    if (this.isMoving && el.canMove()) {\n                        reference = this.getElementMoveLocation(el);\n                    }\n                    else if (this.isResizing && el.canResize()) {\n                        reference = this.getElementMoveLocation(el);\n                    }\n                    this.model.setRenderTransform(context, el.transform, reference);\n                    for (const h of handles) {\n                        context.beginPath();\n                        if (h.region) {\n                            context.rect(h.region.x, h.region.y, h.region.width, h.region.height);\n                        }\n                        const hit = context.isPointInPath(p.x, p.y);\n                        context.closePath();\n                        if (hit) {\n                            this.canvas.style.cursor = h.cursor;\n                            foundHandle = true;\n                            selectedHandle = h;\n                            break;\n                        }\n                    }\n                    context.restore();\n                }\n                else {\n                    // No element transform, so test handle regions\n                    for (const h of handles) {\n                        const hr = h.region;\n                        if (!hr) {\n                            continue;\n                        }\n                        let hit = hr.containsCoordinate(p.x, p.y);\n                        if (!hit) {\n                            if (h.barRegion && h.barRegion.containsCoordinate(p.x, p.y)) {\n                                hit = true;\n                            }\n                        }\n                        if (hit) {\n                            this.canvas.style.cursor = h.cursor;\n                            selectedHandle = h;\n                            foundHandle = true;\n                            break;\n                        }\n                    }\n                    if (foundHandle) {\n                        break;\n                    }\n                }\n            }\n\n            // If handle found put in resizing mode\n            if (foundHandle && button === 0 && selectedHandle) {\n                // If multiple elements selected\n                this.sizeHandles = [];\n                if (this.resizeableSelectedElementCount() > 0) {\n                    const self = this;\n                    this.selectedElements.forEach(selectedElement => {\n                        if (selectedElement.canResize()) {\n                            const elementHandles = self.getElementHandles(selectedElement);\n                            elementHandles.forEach(handle => {\n                                if (selectedHandle && handle.handleId === selectedHandle.handleId) {\n                                    if (!self.sizeHandles) {\n                                        self.sizeHandles = [];\n                                    }\n                                    self.sizeHandles.push(handle);\n                                }\n                            }, self);\n                        }\n                    }, this);\n                    this.isResizing = true;\n                }\n                else if (this.selectedElementCount() === 1) {\n                    const el = this.selectedElements[0];\n                    if (el.canMovePoint()) {\n                        const pointIndex = selectedHandle.handleIndex;\n                        if (pointIndex !== undefined) {\n                            this.sizeHandles.push(selectedHandle);\n                            this.isMovingPoint = true;\n                            this.movingPointLocation = el.getPointAt(pointIndex, PointDepth.Full);\n                            this.movingPointIndex = pointIndex;\n                        }\n                    }\n                }\n                return;\n            }\n\n            // Select/deselect element\n            if (this.selectionEnabled || e.ctrlKey || e.metaKey || button === 2) {\n                const elementsAtPoint = this.model.elementsAt(context, p.x, p.y);\n                if (elementsAtPoint && elementsAtPoint.length > 0) {\n                    this.rubberBandActive = false;\n                    this.canvas.style.cursor = 'pointer';\n\n                    // If any elements under point are already selected, do nothing\n                    let elementSelected = false;\n                    for (const elementAtPoint of elementsAtPoint) {\n                        if (this.isSelected(elementAtPoint)) {\n                            elementSelected = true;\n                            break;\n                        }\n                    }\n\n                    // Select element\n                    if (e.shiftKey) {\n                        if (button === 0) {\n                            this.toggleSelected(elementsAtPoint[elementsAtPoint.length - 1]);\n                        }\n                        else if (button === 2) {\n                            this.selectElement(elementsAtPoint[elementsAtPoint.length - 1]);\n                        }\n                    }\n                    else if (this.selectionEnabled && (e.ctrlKey || e.metaKey)) {\n                        if (button === 0) {\n                            this.toggleSelected(elementsAtPoint[elementsAtPoint.length - 1]);\n                        }\n                        else if (button === 2) {\n                            this.selectElement(elementsAtPoint[elementsAtPoint.length - 1]);\n                        }\n                    }\n                    else {\n                        // Select current element and clear others\n                        if (!elementSelected) {\n                            this.clearSelections();\n                            this.selectElement(elementsAtPoint[elementsAtPoint.length - 1]);\n                        }\n                        else {\n                            // Toggle edit points mode\n                            if (elementsAtPoint.length === 1) {\n                                if (elementsAtPoint[0].canEditPoints()) {\n                                    if (elementsAtPoint[0].editPoints) {\n                                        elementsAtPoint[0].editPoints = false;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    // Deselect all elements\n                    if (!e.ctrlKey && !e.metaKey && !e.shiftKey) {\n                        this.clearSelections();\n                    }\n\n                    // Enable rubber band\n                    this.rubberBandRegion = new Region(p.x, p.y, 0, 0);\n                    this.rubberBandActive = true;\n\n                    if (this.selectionEnabled) {\n                        this.selecting = true;\n                    }\n                    else {\n                        if (!e.ctrlKey && !e.metaKey && !e.shiftKey) {\n                            this.selecting = false;\n                        }\n                        else {\n                            this.selecting = true;\n                        }\n                    }\n\n                    this.invalidate();\n                }\n            }\n            else {\n                // Enable rubber band\n                this.clearSelections();\n                this.rubberBandRegion = new Region(p.x, p.y, 0, 0);\n                this.rubberBandActive = true;\n                this.selecting = false;\n                this.invalidate();\n            }\n            this.invalidate();\n        }\n        this.drawIfNeeded();\n    }\n\n    /**\n     * Handles canvas mouse move event\n     * @param this - Design controller\n     * @param e - Mouse event\n     */\n    public onCanvasMouseMove(e: MouseEvent): void {\n        if (!this.enabled) {\n            return;\n        }\n        if (!this.model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        if (!this.canvas) {\n            return;\n        }\n        if (e.button === 2) {\n            return;\n        }\n\n        this.lastClientX = e.clientX;\n        this.lastClientY = e.clientY;\n\n        const p = this.windowToCanvas(e.clientX, e.clientY);\n        if (this.isMouseDown && this.currentX !== undefined && this.currentY !== undefined) {\n            this.currentWidth = p.x - this.currentX;\n            this.currentHeight = p.y - this.currentY;\n        }\n        else {\n            this.currentX = p.x;\n            this.currentY = p.y;\n            this.currentWidth = 0;\n            this.currentHeight = 0;\n        }\n\n        // Get distance moved\n        let deltaX = 0;\n        let deltaY = 0;\n        if (this.mouseDownPosition) {\n            const size = this.model.getSize();\n            if (size) {\n                deltaX = p.x - this.mouseDownPosition.x;\n                if (this.mouseDownPosition.x + deltaX < 0) {\n                    deltaX = -this.mouseDownPosition.x;\n                    this.currentX = 0;\n                    this.currentWidth = this.mouseDownPosition.x;\n                }\n                else if (this.mouseDownPosition.x + deltaX >= size.width) {\n                    deltaX = size.width - this.mouseDownPosition.x;\n                    this.currentX = size.width - 1;\n                    this.currentWidth = deltaX;\n                }\n                deltaY = p.y - this.mouseDownPosition.y;\n                if (this.mouseDownPosition.y + deltaY < 0) {\n                    deltaY = -this.mouseDownPosition.y;\n                    this.currentY = 0;\n                    this.currentHeight = this.mouseDownPosition.y;\n                }\n                else if (this.mouseDownPosition.y + deltaY >= size.height) {\n                    deltaY = size.height - this.mouseDownPosition.y;\n                    this.currentY = size.height - 1;\n                    this.currentHeight = deltaY;\n                }\n                if (deltaX === this.lastDeltaX && deltaY === this.lastDeltaY) {\n                    return;\n                }\n            }\n        }\n        this.lastDeltaX = deltaX;\n        this.lastDeltaY = deltaY;\n\n        // Fire view mouse moved event\n        if (this.mouseMovedView.hasListeners()) {\n            this.mouseMovedView.trigger(this, new PointEventParameters(e, new Point(p.x, p.y)));\n        }\n\n        // If we have an active tool, then delegate and return\n        if (this.activeTool) {\n            this.activeTool.mouseMove(new MouseLocationArgs(e, new Point(p.x, p.y)));\n            return;\n        }\n\n        // If resizing\n        if (this.isResizing && this.sizeHandles && this.sizeHandles.length > 0) {\n            this.sizeHandles.forEach(h => {\n                if (h.handleMoved) {\n                    h.handleMoved(h, { deltaX: Math.round(deltaX), deltaY: Math.round(deltaY) });\n                }\n            });\n        }\n        else if (this.isMoving) {\n            // Ensure no moves will result in out of bounds\n            let allOkay = true;\n            if (this.constrainToBounds) {\n                for (const selectedElement of this.selectedElements) {\n                    if (selectedElement.canMove()) {\n                        const b = selectedElement.getBounds();\n                        if (!b) {\n                            continue;\n                        }\n                        const moveLocation = new Point(Math.round(b.x + deltaX), Math.round(b.y + deltaY));\n                        if (!DesignController.isInBounds(moveLocation, b.size, this.model)) {\n                            allOkay = false;\n                            break;\n                        }\n                    }\n                }\n            }\n            if (allOkay) {\n                for (const selectedElement of this.selectedElements) {\n                    if (selectedElement.canMove()) {\n                        const b = selectedElement.getBounds();\n                        if (b) {\n                            const moveLocation = new Point(Math.round(b.x + deltaX), Math.round(b.y + deltaY));\n                            this.setElementMoveLocation(selectedElement, moveLocation, b.size);\n                            this.invalidate();\n                        }\n                    }\n                }\n            }\n            else {\n                // Determine maximum we can move and set new diffX/diffY\n                let x1 = Number.POSITIVE_INFINITY;\n                let x2 = Number.NEGATIVE_INFINITY;\n                let y1 = Number.POSITIVE_INFINITY;\n                let y2 = Number.NEGATIVE_INFINITY;\n                for (const selectedElement of this.selectedElements) {\n                    if (selectedElement.canMove()) {\n                        const b = selectedElement.getBounds();\n                        if (b) {\n                            if (b.x < x1) {\n                                x1 = b.x;\n                            }\n                            if (b.x + b.width > x2) {\n                                x2 = b.x + b.width;\n                            }\n                            if (b.y < y1) {\n                                y1 = b.y;\n                            }\n                            if (b.y + b.height > y2) {\n                                y2 = b.y + b.height;\n                            }\n                        }\n                    }\n                }\n                const size = this.model.getSize();\n                if (size) {\n                    if (deltaX < 0 && x1 + deltaX < 0) {\n                        deltaX = -x1;\n                    }\n                    else if (deltaX > 0 && x2 + deltaX > size.width) {\n                        deltaX = size.width - x2;\n                    }\n                    if (deltaY < 0 && y1 + deltaY < 0) {\n                        deltaY = -y1;\n                    }\n                    else if (deltaY > 0 && y2 + deltaY > size.height) {\n                        deltaY = size.height - y2;\n                    }\n                }\n                for (const selectedElement of this.selectedElements) {\n                    if (selectedElement.canMove()) {\n                        const b = selectedElement.getBounds();\n                        if (b) {\n                            const moveLocation = new Point(Math.round(b.x + deltaX), Math.round(b.y + deltaY));\n                            this.setElementMoveLocation(selectedElement, moveLocation, b.size);\n                            this.invalidate();\n                        }\n                    }\n                }\n            }\n        }\n        else if (this.isMovingPoint && this.movingPointIndex !== undefined) {\n            const pointHolder = this.selectedElements[0];\n            let depth = PointDepth.Simple;\n            if (this.selectedElementCount() === 1) {\n                depth = PointDepth.Full;\n            }\n            const pointLocation = pointHolder.getPointAt(this.movingPointIndex, depth);\n            let newLocation: Point;\n            if (this.snapToGrid) {\n                newLocation = new Point(\n                    this.getNearestSnapX(pointLocation.x + deltaX),\n                    this.getNearestSnapY(pointLocation.y + deltaY)\n                );\n            }\n            else {\n                newLocation = new Point(Math.round(pointLocation.x + deltaX), Math.round(pointLocation.y + deltaY));\n            }\n            this.movingPointLocation = newLocation;\n            this.invalidate();\n        }\n        else if (this.isMouseDown) {\n            if (!this.isMoving) {\n                // Determine if any movable elements selected and if so, initiate move\n                if (this.movableSelectedElementCount() > 0) {\n                    if (deltaX * deltaX + deltaY * deltaY > 8) {\n                        this.isMoving = true;\n                        this.invalidate();\n                    }\n                }\n            }\n\n            // If rubber banding, update\n            if (this.rubberBandActive && this.mouseDownPosition) {\n                let left = Math.min(this.mouseDownPosition.x, this.mouseDownPosition.x + deltaX);\n                let top = Math.min(this.mouseDownPosition.y, this.mouseDownPosition.y + deltaY);\n                let width = Math.abs(deltaX);\n                let height = Math.abs(deltaY);\n\n                // If snapping to grid\n                if (this.snapToGrid) {\n                    const snappedLeft = this.getNearestSnapX(this.mouseDownPosition.x);\n                    left = snappedLeft;\n\n                    const snappedTop = this.getNearestSnapY(this.mouseDownPosition.y);\n                    top = snappedTop;\n                }\n                if (left < 0) {\n                    left = 0;\n                }\n                if (top < 0) {\n                    top = 0;\n                }\n                const size = this.model.getSize();\n                if (size) {\n                    if (left + width > size.width) {\n                        width = size.width - left;\n                    }\n                    if (top + height > size.height) {\n                        height = size.height - top;\n                    }\n                    this.rubberBandRegion = new Region(left, top, width, height);\n                }\n                this.invalidate();\n                if (this.canvas) {\n                    this.canvas.style.cursor = 'none';\n                }\n            }\n        }\n        else {\n            // Determine if over handle\n            let foundHandle = false;\n            const sl = this.selectedElements.length;\n            for (let si = 0; si < sl; si++) {\n                const selectedElement = this.selectedElements[si];\n                const handles = this.getElementHandles(selectedElement);\n\n                // If element is transformed, hit test against transformed rectangles\n                if (selectedElement.transform) {\n                    const context = this.canvas.getContext('2d');\n                    if (context) {\n                        context.save();\n                        const b = selectedElement.getBounds();\n                        if (!b) {\n                            continue;\n                        }\n                        let reference = new Point(b.x, b.y);\n                        if (this.isMoving && selectedElement.canMove()) {\n                            reference = this.getElementMoveLocation(selectedElement);\n                        }\n                        else if (this.isResizing && selectedElement.canResize()) {\n                            reference = this.getElementMoveLocation(selectedElement);\n                        }\n                        this.model.setRenderTransform(context, selectedElement.transform, reference);\n                        for (const h of handles) {\n                            context.beginPath();\n                            if (!h.region) {\n                                return;\n                            }\n                            context.rect(h.region.x, h.region.y, h.region.width, h.region.height);\n                            const hit = context.isPointInPath(p.x, p.y);\n                            context.closePath();\n                            if (hit) {\n                                this.canvas.style.cursor = h.cursor;\n                                foundHandle = true;\n                                break;\n                            }\n                        }\n                        context.restore();\n                    }\n                }\n                else {\n                    // No element transform, so test handle regions\n                    for (const h of handles) {\n                        if (!h.region) {\n                            continue;\n                        }\n                        const hit = h.region.containsCoordinate(p.x, p.y);\n                        if (hit) {\n                            this.canvas.style.cursor = h.cursor;\n                            foundHandle = true;\n                            break;\n                        }\n                    }\n                    if (foundHandle) {\n                        break;\n                    }\n                }\n            }\n            if (!foundHandle) {\n                const context = this.canvas.getContext('2d');\n                if (context) {\n                    const elementsAtPoint = this.model.elementsAt(context, p.x, p.y);\n                    if (elementsAtPoint && elementsAtPoint.length > 0) {\n                        if (e.ctrlKey || e.metaKey) {\n                            this.canvas.style.cursor = 'pointer';\n                        }\n                        else if (this.selectionEnabled) {\n                            this.canvas.style.cursor = 'pointer';\n                        }\n                        else {\n                            this.canvas.style.cursor = 'crosshair';\n                        }\n                        const activeElement = elementsAtPoint[elementsAtPoint.length - 1];\n                        this.setMouseOverElement(activeElement);\n                    }\n                    else {\n                        this.canvas.style.cursor = 'crosshair';\n                        this.setMouseOverElement(undefined);\n                    }\n                }\n            }\n        }\n        this.drawIfNeeded();\n    }\n\n    /**\n     * Handles canvas mouse up\n     * @param this - Design controller\n     * @param e - Mouse event info\n     */\n    public onCanvasMouseUp(e: MouseEvent | IMouseEvent): void {\n        log(`Canvas mouse up ${e.clientX}:${e.clientY}`);\n        if (!this.enabled) {\n            return;\n        }\n        if (!this.mouseDownPosition) {\n            return;\n        }\n        if (!this.model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        if (!this.canvas) {\n            return;\n        }\n\n        const p = this.windowToCanvas(e.clientX, e.clientY);\n        const deltaX = p.x - this.mouseDownPosition.x;\n        const deltaY = p.y - this.mouseDownPosition.y;\n\n        // Clear mouse down state and call any mouse up or click listeners\n        this.isMouseDown = false;\n        if (this.mouseUpView.hasListeners()) {\n            this.mouseUpView.trigger(this, new PointEventParameters(e, new Point(p.x, p.y)));\n        }\n\n        // If we have an active tool, then delegate and return\n        if (this.activeTool) {\n            this.activeTool.mouseUp(new MouseLocationArgs(e, new Point(p.x, p.y)));\n            return;\n        }\n\n        // Left button up\n        const button = e.button;\n        if (button === 0) {\n            this.isMouseDown = false;\n\n            // If rubber banding\n            if (this.rubberBandActive && this.rubberBandRegion) {\n                this.rubberBandActive = false;\n                if (this.selecting) {\n                    let itemsSelected = false;\n                    for (const el of this.model.elements) {\n                        if (el.interactive) {\n                            const b = el.getBounds();\n                            if (!b) {\n                                continue;\n                            }\n\n                            // If DX and DY are both negative, use full select\n                            if (deltaX < 0 && deltaY < 0) {\n                                if (this.rubberBandRegion.containsRegion(b)) {\n                                    if (!this.isSelected(el)) {\n                                        this.selectedElements.push(el);\n                                        itemsSelected = true;\n                                    }\n                                }\n                            }\n                            else {\n                                if (b.intersectsWith(this.rubberBandRegion)) {\n                                    if (!this.isSelected(el)) {\n                                        this.selectedElements.push(el);\n                                        itemsSelected = true;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    if (itemsSelected) {\n                        this.onSelectionChanged();\n                    }\n                    this.selecting = false;\n                }\n                else {\n                    // If action not cancelled\n                    if (!this.cancelAction) {\n                        if (\n                            this.elementCreated.hasListeners() &&\n                            this.rubberBandRegion.width >= this.minElementSize.width &&\n                            this.rubberBandRegion.height >= this.minElementSize.height\n                        ) {\n                            this.elementCreated.trigger(this, this.rubberBandRegion);\n                        }\n                    }\n                }\n            }\n\n            this.invalidate();\n\n            // Exit if action cancelled\n            if (this.cancelAction) {\n                if (this.pressedElement) {\n                    const el = this.pressedElement;\n                    if (this.mouseUpElement.hasListeners()) {\n                        this.mouseUpElement.trigger(this, el);\n                    }\n                    this.pressedElement = undefined;\n                }\n                if (this.isMoving) {\n                    this.clearElementMoveLocations();\n                    this.selectedElements.forEach(el => {\n                        if (el instanceof ComponentElement && el.component) {\n                            if (el.component.size.hasListeners()) {\n                                const size = el.getSize();\n                                if (size) {\n                                    el.component.size.trigger(el.component, new ElementSizeProps(el, size));\n                                }\n                            }\n                        }\n                    });\n                    this.isMoving = false;\n                    this.invalidate();\n                }\n                else if (this.isResizing) {\n                    this.clearElementMoveLocations();\n                    this.clearElementResizeSizes();\n                    this.selectedElements.forEach(el => {\n                        if (el instanceof ComponentElement && el.component) {\n                            if (el.component.size.hasListeners()) {\n                                const size = el.getSize();\n                                if (size) {\n                                    el.component.size.trigger(el.component, new ElementSizeProps(el, size));\n                                }\n                            }\n                        }\n                    });\n                    this.sizeHandles = undefined;\n                    this.isResizing = false;\n                    this.invalidate();\n                    this.canvas.style.cursor = 'crosshair';\n                }\n                else if (this.isMovingPoint) {\n                    this.clearElementMoveLocations();\n                    this.clearElementResizeSizes();\n                    this.selectedElements.forEach(el => {\n                        el.clearBounds();\n                    });\n                    this.sizeHandles = undefined;\n                    this.isMovingPoint = false;\n                    this.movingPointLocation = undefined;\n                    this.invalidate();\n                    this.canvas.style.cursor = 'crosshair';\n                }\n                return;\n            }\n\n            // If elements were being moved, commit move\n            if (this.isMoving) {\n                for (const selectedElement of this.selectedElements) {\n                    if (selectedElement.canMove()) {\n                        const moveLocation = this.getElementMoveLocation(selectedElement);\n                        selectedElement.setLocation(new Point(Math.round(moveLocation.x), Math.round(moveLocation.y)));\n                        const resizeSize = this.getElementResizeSize(selectedElement);\n                        selectedElement.setSize(new Size(Math.round(resizeSize.width), Math.round(resizeSize.height)));\n                        const bounds = selectedElement.getBounds();\n                        if (bounds) {\n                            this.onElementMoved(selectedElement, new Point(bounds.x, bounds.y));\n                            this.onElementSized(selectedElement, new Size(bounds.width, bounds.height));\n                        }\n                        this.invalidate();\n                    }\n                }\n                this.isMoving = false;\n                this.invalidate();\n            }\n            else if (this.isResizing) {\n                for (const selectedElement of this.selectedElements) {\n                    if (selectedElement.canResize()) {\n                        const moveLocation = this.getElementMoveLocation(selectedElement);\n                        selectedElement.setLocation(new Point(Math.round(moveLocation.x), Math.round(moveLocation.y)));\n                        const resizeSize = this.getElementResizeSize(selectedElement);\n                        selectedElement.setSize(new Size(Math.round(resizeSize.width), Math.round(resizeSize.height)));\n                        const bounds = selectedElement.getBounds();\n                        if (bounds) {\n                            this.onElementMoved(selectedElement, new Point(bounds.x, bounds.y));\n                            this.onElementSized(selectedElement, new Size(bounds.width, bounds.height));\n                        }\n                        this.invalidate();\n                    }\n                }\n                this.sizeHandles = undefined;\n                this.isResizing = false;\n                this.invalidate();\n                this.canvas.style.cursor = 'crosshair';\n            }\n            else if (this.isMovingPoint && this.movingPointIndex !== undefined && this.movingPointLocation) {\n                const selectedElement = this.selectedElements[0];\n                const moveLocation = this.movingPointLocation;\n                let depth = PointDepth.Simple;\n                if (this.selectedElementCount() === 1) {\n                    depth = PointDepth.Full;\n                }\n                selectedElement.setPointAt(\n                    this.movingPointIndex,\n                    new Point(Math.round(moveLocation.x), Math.round(moveLocation.y)),\n                    depth\n                );\n                selectedElement.clearBounds();\n                this.clearElementMoveLocations();\n                this.clearElementResizeSizes();\n                this.sizeHandles = undefined;\n                this.isMovingPoint = false;\n                this.movingPointLocation = undefined;\n                this.invalidate();\n                this.canvas.style.cursor = 'crosshair';\n            }\n        }\n\n        if (this.pressedElement) {\n            const el = this.pressedElement;\n            if (this.mouseUpElement.hasListeners()) {\n                this.mouseUpElement.trigger(this, el);\n            }\n            if (el === this.mouseOverElement) {\n                if (this.elementClicked.hasListeners()) {\n                    this.elementClicked.trigger(this, el);\n                }\n            }\n            this.pressedElement = undefined;\n        }\n        this.drawIfNeeded();\n    }\n\n    /**\n     * Handles canvas key down\n     * @param this - Design controller\n     * @param e - DOM Keyboard event\n     */\n    public onCanvasKeyDown(e: KeyboardEvent): boolean {\n        if (!this.enabled) {\n            return false;\n        }\n\n        switch (e.keyCode) {\n            case 37: // Left Arrow\n                if ((e.ctrlKey || e.metaKey) && e.shiftKey) {\n                    this.nudgeSize(-this.largeJump, 0);\n                }\n                else if (e.ctrlKey || e.metaKey) {\n                    this.nudgeSize(-1, 0);\n                }\n                else if (e.shiftKey) {\n                    this.nudgeLocation(-this.largeJump, 0);\n                }\n                else {\n                    this.nudgeLocation(-1, 0);\n                }\n                return true;\n\n            case 39: // Right Arrow\n                if ((e.ctrlKey || e.metaKey) && e.shiftKey) {\n                    this.nudgeSize(this.largeJump, 0);\n                }\n                else if (e.ctrlKey || e.metaKey) {\n                    this.nudgeSize(1, 0);\n                }\n                else if (e.shiftKey) {\n                    this.nudgeLocation(this.largeJump, 0);\n                }\n                else {\n                    this.nudgeLocation(1, 0);\n                }\n                return true;\n\n            case 38: // Up Arrow\n                if ((e.ctrlKey || e.metaKey) && e.shiftKey) {\n                    this.nudgeSize(0, -this.largeJump);\n                }\n                else if (e.ctrlKey || e.metaKey) {\n                    this.nudgeSize(0, -1);\n                }\n                else if (e.shiftKey) {\n                    this.nudgeLocation(0, -this.largeJump);\n                }\n                else {\n                    this.nudgeLocation(0, -1);\n                }\n                return true;\n\n            case 40: // Down Arrow\n                if ((e.ctrlKey || e.metaKey) && e.shiftKey) {\n                    this.nudgeSize(0, this.largeJump);\n                }\n                else if (e.ctrlKey || e.metaKey) {\n                    this.nudgeSize(0, 1);\n                }\n                else if (e.shiftKey) {\n                    this.nudgeLocation(0, this.largeJump);\n                }\n                else {\n                    this.nudgeLocation(0, 1);\n                }\n                return true;\n\n            case 65: // 'A' key\n                if (e.ctrlKey || e.metaKey) {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    this.selectAll();\n                    return true;\n                }\n                return false;\n\n            case 46: // Delete\n            case 8: // Backspace\n                e.preventDefault();\n                if (this.onDelete.hasListeners()) {\n                    this.onDelete.trigger(this, new ControllerEventArgs(e));\n                }\n                else {\n                    this.removeSelected();\n                }\n                return true;\n\n            case 27: // ESC key\n                if (this.activeTool) {\n                    this.activeTool.cancel();\n                }\n                if (this.isMouseDown) {\n                    this.cancelAction = true;\n                    this.selecting = false;\n                    this.onCanvasMouseUp({\n                        button: 0,\n                        clientX: this.lastClientX,\n                        clientY: this.lastClientY\n                    });\n                    return true;\n                }\n                if (this.selectedElementCount() > 0) {\n                    this.clearSelections();\n                    return true;\n                }\n                return false;\n\n            default:\n                // console.log('Key Down Code: ' + e.keyCode);\n                return false;\n        }\n    }\n\n    /**\n     * Fired when drag begins over canvas\n     * @param this - Design controller\n     * @param e - Mouse drag event\n     */\n    public onCanvasDragEnter(e: DragEvent): void {\n        log('Canvas drag enter');\n        e.stopPropagation();\n        e.preventDefault();\n        if (!this.enabled) {\n            return;\n        }\n        this.isDragging = true;\n        if (this.viewDragEnter.hasListeners()) {\n            this.viewDragEnter.trigger(this, new ViewDragArgs(e, undefined));\n        }\n        this.drawIfNeeded();\n    }\n\n    /**\n     * Fired while drag is occurring over canvas\n     * @param this - Design controller\n     * @param e - Mouse drag event\n     */\n    public onCanvasDragOver(e: DragEvent): void {\n        log(`Canvas drag over ${e.clientX}:${e.clientY}`);\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (!this.enabled) {\n            return;\n        }\n        if (!this.canvas) {\n            return;\n        }\n        if (!this.model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        const p = this.windowToCanvas(e.clientX, e.clientY);\n\n        // Fire view drag over event\n        if (this.viewDragOver.hasListeners()) {\n            const evt = {\n                controller: this,\n                event: e,\n                location: new Point(p.x, p.y)\n            };\n            this.viewDragOver.trigger(this, evt);\n        }\n\n        // Determine if over element\n        const context = this.canvas.getContext('2d');\n        if (context) {\n            const elementsAtPoint = this.model.elementsAt(context, p.x, p.y);\n            if (elementsAtPoint && elementsAtPoint.length > 0) {\n                let draggable: ElementBase | undefined;\n                for (let i = elementsAtPoint.length - 1; i >= 0; i--) {\n                    const activeElement = elementsAtPoint[i];\n                    if (activeElement instanceof ComponentElement && activeElement.component) {\n                        if (activeElement.component.acceptsDrag) {\n                            draggable = activeElement;\n                            break;\n                        }\n                    }\n                }\n                this.setDragOverElement(draggable, e);\n            }\n            else {\n                this.setDragOverElement(undefined, e);\n            }\n        }\n        this.drawIfNeeded();\n    }\n\n    /**\n     * Fired when drag had ended over canvas\n     * @param e - Mouse drag event\n     */\n    public onCanvasDragLeave(e: DragEvent | undefined): void {\n        log('Canvas drag leave');\n        if (e) {\n            e.stopPropagation();\n            e.preventDefault();\n        }\n        if (!this.enabled) {\n            return;\n        }\n        this.isDragging = false;\n        this.setDragOverElement(undefined, e);\n        if (this.viewDragLeave.hasListeners()) {\n            this.viewDragLeave.trigger(this, new ViewDragArgs(e, undefined));\n        }\n        this.drawIfNeeded();\n    }\n\n    /**\n     * Fired while drop occurs on canvas\n     * @param e - Mouse drag event\n     */\n    public onCanvasDrop(e: DragEvent): void {\n        log(`Canvas drag over ${e.clientX}:${e.clientY}`);\n        e.stopPropagation();\n        e.preventDefault();\n        if (!this.enabled) {\n            return;\n        }\n        this.isDragging = false;\n        const p = this.windowToCanvas(e.clientX, e.clientY);\n        if (this.dragOverElement) {\n            if (this.dragOverElement instanceof ComponentElement) {\n                const ce = this.dragOverElement as ComponentElement;\n                if (ce.component && ce.component.dragLeave.hasListeners()) {\n                    ce.component.dragLeave.trigger(ce.component, new ElementDragArgs(this.dragOverElement, e));\n                    this.invalidate();\n                }\n            }\n            if (this.elementDrop.hasListeners()) {\n                const evt = {\n                    controller: this,\n                    element: this.dragOverElement,\n                    event: e\n                };\n                this.elementDrop.trigger(this, evt);\n            }\n        }\n        else if (this.viewDrop.hasListeners()) {\n            const evt = {\n                controller: this,\n                event: e,\n                location: new Point(p.x, p.y)\n            };\n            this.viewDrop.trigger(this, evt);\n        }\n        this.drawIfNeeded();\n    }\n\n    /**\n     * Coerces an element into the bounds of its model\n     * @param el - Element\n     */\n    public ensureInBounds(el: ElementBase): void {\n        const model = this.model;\n        if (!model) {\n            return;\n        }\n        const modelSize = model.getSize();\n        if (!modelSize) {\n            throw new Error(ErrorMessages.SizeUndefined);\n        }\n        let b = el.getBounds();\n        if (!b) {\n            return;\n        }\n        if (DesignController.isInBounds(b.location, b.size, model)) {\n            return;\n        }\n        if (!el.canResize()) {\n            return;\n        }\n\n        // If can't fit in bounds, scale down to fit\n        if (b.size.width > modelSize.width || b.size.height > modelSize.height) {\n            let aspect = 1.0;\n            if (b.size.height !== 0) {\n                aspect = b.size.width / b.size.height;\n            }\n            let newWidth = b.size.width;\n            let newHeight = b.size.height;\n            let fits = false;\n            while (!fits) {\n                newWidth--;\n                if (aspect !== 0) {\n                    newHeight = Math.round(newWidth / aspect);\n                }\n                fits = newWidth <= modelSize.width && newHeight <= modelSize.height;\n            }\n            el.setSize(new Size(newWidth, newHeight));\n        }\n\n        // If out of bounds, but big enough to fit, then put back in bounds\n        b = el.getBounds();\n        if (!b) {\n            return;\n        }\n        let newX = b.location.x;\n        let newY = b.location.y;\n        if (b.size.width <= modelSize.width && b.size.height <= modelSize.height) {\n            if (b.location.x < 0) {\n                newX = 0;\n            }\n            if (b.location.x + b.size.width > modelSize.width) {\n                newX = modelSize.width - b.size.width;\n            }\n            if (b.location.y < 0) {\n                newY = 0;\n            }\n            if (b.location.y + b.size.height > modelSize.height) {\n                newY = modelSize.height - b.size.height;\n            }\n            el.setLocation(new Point(newX, newY));\n        }\n    }\n\n    /**\n     * Sets current mouse down element\n     * @param el - Mouse down element\n     */\n    public setMouseDownElement(el?: ElementBase): void {\n        if (el) {\n            this.setMouseOverElement(el);\n        }\n        if (el !== this.pressedElement) {\n            if (this.pressedElement) {\n                if (this.mouseUpElement.hasListeners()) {\n                    this.mouseUpElement.trigger(this, this.pressedElement);\n                }\n            }\n            this.pressedElement = el;\n            if (el) {\n                if (this.mouseDownElement.hasListeners()) {\n                    this.mouseDownElement.trigger(this, el);\n                }\n            }\n        }\n    }\n\n    /**\n     * Sets current mouse over element\n     * @param el - Mouse over element\n     */\n    public setMouseOverElement(el?: ElementBase): void {\n        if (el !== this.mouseOverElement) {\n            if (this.mouseOverElement) {\n                if (this.mouseLeftElement.hasListeners()) {\n                    this.mouseLeftElement.trigger(this, this.mouseOverElement);\n                }\n            }\n            this.mouseOverElement = el;\n            if (el) {\n                if (this.mouseEnteredElement.hasListeners()) {\n                    this.mouseEnteredElement.trigger(this, el);\n                }\n            }\n        }\n    }\n\n    /**\n     * Sets current drag over element\n     * @param el - Drag over element\n     */\n    public setDragOverElement(el?: ElementBase, evt?: DragEvent): void {\n        if (el !== this.dragOverElement) {\n            if (this.dragOverElement) {\n                if (this.dragOverElement instanceof ComponentElement) {\n                    const ce = this.dragOverElement as ComponentElement;\n                    if (ce.component) {\n                        ce.component.dragLeave.trigger(ce.component, new ElementDragArgs(this.dragOverElement, evt));\n                    }\n                }\n                if (this.elementDragLeave.hasListeners()) {\n                    this.elementDragLeave.trigger(this, new ElementDragArgs(this.dragOverElement, evt));\n                }\n            }\n            this.dragOverElement = el;\n            if (el) {\n                if (el instanceof ComponentElement && el.component) {\n                    el.component.dragEnter.trigger(el.component, new ElementDragArgs(el, evt));\n                }\n                if (this.elementDragEnter.hasListeners()) {\n                    this.elementDragEnter.trigger(this, new ElementDragArgs(el, evt));\n                }\n            }\n            this.invalidate();\n        }\n    }\n\n    /**\n     * Called when selected elements are changed\n     */\n    public onSelectionChanged(): void {\n        const self = this;\n        const selected: string[] = [];\n        if (!self.model) {\n            return;\n        }\n        self.model.elements.forEach(el => {\n            if (self.isSelected(el) && el.id) {\n                selected.push(el.id);\n                if (el instanceof ComponentElement && el.component) {\n                    el.component.select.trigger(el.component, el);\n                }\n            }\n            else if (el instanceof ComponentElement && el.component) {\n                el.component.deselect.trigger(el.component, el);\n            }\n        });\n        if (self.selectionChanged.hasListeners()) {\n            self.selectionChanged.trigger(self, selected.length);\n        }\n        self.invalidate();\n    }\n\n    /**\n     * Called when an element is added to the model\n     * @param el - Element added\n     */\n    public onElementAdded(el: ElementBase): void {\n        this.elementAdded.trigger(this, el);\n        this.invalidate();\n    }\n\n    /**\n     * Called when an element is removed from the model\n     * @param el - Element removed\n     */\n    public onElementRemoved(el: ElementBase): void {\n        if (el === this.mouseOverElement) {\n            this.mouseOverElement = undefined;\n        }\n        if (el === this.pressedElement) {\n            this.pressedElement = undefined;\n        }\n        if (el === this.dragOverElement) {\n            this.dragOverElement = undefined;\n        }\n        this.elementRemoved.trigger(this, el);\n        this.invalidate();\n    }\n\n    /**\n     * Called when the model is updated\n     * @param model - Model updated\n     */\n    public onModelUpdated(): void {\n        if (this.model) {\n            this.modelUpdated.trigger(this, this.model);\n        }\n        this.setIsDirty(true);\n        this.invalidate();\n    }\n\n    /**\n     * Called while an element is being resized\n     * @param el - Element being sized\n     * @param size - Tentative size\n     */\n    public onElementSizing(el: ElementBase, size: Size): void {\n        if (el instanceof ComponentElement && el.component) {\n            if (el.component.size.hasListeners()) {\n                el.component.size.trigger(el.component, new ElementSizeArgs(el, size));\n            }\n        }\n        if (this.elementSizing.hasListeners()) {\n            this.elementSizing.trigger(this, new ElementSizeArgs(el, size));\n        }\n    }\n\n    /**\n     * Called while an element is being moved or sized\n     * @param el - Element being moved or sized\n     * @param location - Tentative location\n     */\n    public onElementMoving(el: ElementBase, location: Point): void {\n        if (this.elementMoving.hasListeners()) {\n            this.elementMoving.trigger(this, new ElementLocationArgs(el, location));\n        }\n    }\n\n    /**\n     * Called after and element has been resized\n     * @param el - Resized element\n     * @param size - New size\n     */\n    public onElementSized(el: ElementBase, size: Size): void {\n        if (this.constrainToBounds) {\n            this.ensureInBounds(el);\n        }\n        if (el instanceof ComponentElement && el.component) {\n            if (el.component.size.hasListeners()) {\n                const elsize = el.getSize();\n                if (elsize) {\n                    el.component.size.trigger(el.component, new ElementSizeArgs(el, elsize));\n                }\n            }\n        }\n        if (this.elementSized.hasListeners()) {\n            this.elementSized.trigger(this, new ElementSizeArgs(el, size));\n        }\n        this.setIsDirty(true);\n    }\n\n    /**\n     * Sets a new element location and size\n     * @param el - Element to be moved\n     * @param location - New location\n     * @param size - New size\n     */\n    public setElementLocation(el: ElementBase, location: Point, size: Size): void {\n        el.setLocation(location);\n        el.setSize(size);\n        if (this.isSelected(el)) {\n            this.setElementMoveLocation(el, location, size);\n            this.setElementResizeSize(el, size, location);\n        }\n        const newlocation = el.getLocation();\n        if (newlocation) {\n            this.onElementMoved(el, newlocation);\n        }\n        const newSize = el.getSize();\n        if (newSize) {\n            this.onElementSized(el, newSize);\n        }\n        this.invalidate();\n    }\n\n    /**\n     * Called when an element has been moved or sized\n     * @param el - Element being moved or sized\n     * @param location - New location\n     */\n    public onElementMoved(el: ElementBase, location: Point): void {\n        if (this.constrainToBounds) {\n            this.ensureInBounds(el);\n        }\n        if (this.elementMoved.hasListeners()) {\n            this.elementMoved.trigger(this, new ElementLocationArgs(el, location));\n        }\n        this.setIsDirty(true);\n    }\n\n    /**\n     * Renders design surface grid\n     */\n    public renderGrid(): void {\n        return;\n    }\n\n    /**\n     * Renders dashed line\n     * @param c - Rendering context\n     * @param x1 - Starting x coordinate\n     * @param y1 - Starting y coordinate\n     * @param x2 - Ending x coordinate\n     * @param y2 - Ending x coordinate\n     * @param dashLength - Dash length\n     */\n    public drawDashedLine(\n        c: CanvasRenderingContext2D,\n        x1: number,\n        y1: number,\n        x2: number,\n        y2: number,\n        dashLength: number\n    ): void {\n        c.beginPath();\n        dashLength = dashLength === undefined ? 5 : dashLength;\n        const deltaX = x2 - x1;\n        const deltaY = y2 - y1;\n        const numDashes = Math.floor(Math.sqrt(deltaX * deltaX + deltaY * deltaY) / dashLength);\n        for (let i = 0; i < numDashes; ++i) {\n            c[i % 2 === 0 ? 'moveTo' : 'lineTo'](x1 + deltaX / numDashes * i, y1 + deltaY / numDashes * i);\n        }\n        c.stroke();\n    }\n\n    /**\n     * Retrieves design handled for an element\n     * @param el - Element\n     * @returns Handle array\n     */\n    public getElementHandles(el: ElementBase): Handle[] {\n        const handles = HandleFactory.handlesForElement(el, this, this.scale);\n        /*\n        const hl = handles.length;\n        for (let hi = 0; hi < hl; hi++) {\n            const h = handles[hi];\n            h.controller = this;\n            h.element = el;\n        }*/\n        return handles;\n    }\n\n    /**\n     * Renders current rubber band region\n     * @param c - Rendering context\n     */\n    public drawRubberBand(c: CanvasRenderingContext2D): void {\n        if (!this.selecting || !this.rubberBandRegion) {\n            this.drawHotspot(c);\n            return;\n        }\n\n        const x1 = this.rubberBandRegion.x;\n        const x2 = this.rubberBandRegion.x + this.rubberBandRegion.width;\n        const y1 = this.rubberBandRegion.y;\n        const y2 = this.rubberBandRegion.y + this.rubberBandRegion.height;\n\n        c.strokeStyle = 'black';\n        c.lineWidth = 1.0 / this.scale;\n        c.strokeRect(x1, y1, this.rubberBandRegion.width, this.rubberBandRegion.height);\n\n        c.strokeStyle = 'white';\n        this.drawDashedLine(c, x1, y1, x2, y1, 1);\n        this.drawDashedLine(c, x2, y1, x2, y2, 1);\n        this.drawDashedLine(c, x2, y2, x1, y2, 1);\n        this.drawDashedLine(c, x1, y2, x1, y1, 1);\n    }\n\n    /**\n     * Renders hotspot for rubber band region\n     * @param c - Rendering context\n     */\n    public drawHotspot(c: CanvasRenderingContext2D): void {\n        if (!this.rubberBandRegion) {\n            return;\n        }\n        c.save();\n        c.strokeStyle = 'red';\n        c.lineWidth = 1.0 / this.scale;\n        if (this.activeComponent && this.activeComponent.setCreationFill) {\n            this.activeComponent.setCreationFill(c);\n        }\n        else if (this.fillImage) {\n            const pattern = c.createPattern(this.fillImage, 'repeat');\n            if (pattern) {\n                c.fillStyle = pattern;\n            }\n        }\n        else {\n            c.fillStyle = 'rgba(255,215,0,1.0)';\n        }\n        c.globalAlpha = 0.5;\n        c.fillRect(\n            this.rubberBandRegion.x,\n            this.rubberBandRegion.y,\n            this.rubberBandRegion.width,\n            this.rubberBandRegion.height\n        );\n        c.globalAlpha = 1.0;\n        c.strokeRect(\n            this.rubberBandRegion.x,\n            this.rubberBandRegion.y,\n            this.rubberBandRegion.width,\n            this.rubberBandRegion.height\n        );\n        c.restore();\n    }\n\n    /**\n     * Renders dashed horizontal line\n     * @param c - Rendering context\n     * @param y - Y coordinate\n     */\n    public drawDashedHorizontalLine(c: CanvasRenderingContext2D, y: number) {\n        if (!this.model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        const size = this.model.getSize();\n        if (size) {\n            this.drawDashedLine(c, 0, y, size.width, y, 1);\n        }\n    }\n\n    /**\n     * Renders dashed vertical line\n     * @param c - Rendering context\n     * @param x - X coordinate\n     */\n    public drawDashedVerticalLine(c: CanvasRenderingContext2D, x: number) {\n        if (!this.model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        const size = this.model.getSize();\n        if (size) {\n            this.drawDashedLine(c, x, 0, x, size.height, 1);\n        }\n    }\n\n    /**\n     * Renders horizontal line\n     * @param c - Rendering context\n     * @param y - Y coordinate\n     */\n    public drawHorizontalLine(c: CanvasRenderingContext2D, y: number) {\n        if (!this.model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        const size = this.model.getSize();\n        if (!size) {\n            return;\n        }\n        c.beginPath();\n        c.moveTo(0, y);\n        c.lineTo(size.width, y);\n        c.stroke();\n    }\n\n    /**\n     * Renders vertical line\n     * @param c - Rendering context\n     * @param x - X coordinate\n     */\n    public drawVerticalLine(c: CanvasRenderingContext2D, x: number) {\n        if (!this.model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        const size = this.model.getSize();\n        if (!size) {\n            return;\n        }\n        c.beginPath();\n        c.moveTo(x, 0);\n        c.lineTo(x, size.height);\n        c.stroke();\n    }\n\n    /**\n     * Renders design guide wires\n     * @param c - Rendering context\n     * @param x - X coordinate\n     * @param y - Y coordinate\n     */\n    public drawGuidewires(c: CanvasRenderingContext2D, x: number, y: number) {\n        if (!this.model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        const size = this.model.getSize();\n        if (!size) {\n            return;\n        }\n        const _scale = this.scale;\n        const lw = 1.0 / _scale;\n        const dl = 2 / _scale;\n\n        c.strokeStyle = 'rgba(0,0,0,0.65)';\n        c.lineWidth = lw;\n        this.drawHorizontalLine(c, y);\n        this.drawVerticalLine(c, x);\n\n        c.strokeStyle = 'rgba(255,255,255,0.8)';\n        this.drawDashedLine(c, x, y, 0, y, dl);\n        this.drawDashedLine(c, x, y, size.width, y, dl);\n        this.drawDashedLine(c, x, y, x, 0, dl);\n        this.drawDashedLine(c, x, y, x, size.height, dl);\n\n        c.strokeStyle = 'rgba(0,0,0,0.6)';\n        c.beginPath();\n        c.arc(x, y, 6 / _scale, 0, Math.PI * 2);\n        c.stroke();\n\n        c.strokeStyle = 'rgba(255,255,255,0.75)';\n        c.beginPath();\n        c.arc(x, y, 5 / _scale, 0, Math.PI * 2);\n        c.stroke();\n\n        c.strokeStyle = 'rgba(0,0,0,0.6)';\n        c.beginPath();\n        c.arc(x, y, 4 / _scale, 0, Math.PI * 2);\n        c.stroke();\n\n        c.strokeStyle = 'rgba(0,0,0,0.9)';\n        this.drawDashedLine(c, x - 1 / _scale, y, x - 4 / _scale, y, 2);\n        this.drawDashedLine(c, x + 1 / _scale, y, x + 4 / _scale, y, 2);\n        this.drawDashedLine(c, x, y - 1 / _scale, x, y - 4 / _scale, 2);\n        this.drawDashedLine(c, x, y + 1 / _scale, x, y + 4 / _scale, 2);\n    }\n\n    /**\n     * Renders model and design components\n     */\n    public draw(): void {\n        if (!this.canvas) {\n            return;\n        }\n        if (!this.model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        const size = this.model.getSize();\n        if (!size) {\n            return;\n        }\n\n        const context = this.canvas.getContext('2d');\n        if (!context) {\n            return;\n        }\n        if (!this.renderer) {\n            return;\n        }\n        this.model.context = context;\n        let w = size.width;\n        let h = size.height;\n\n        // Clear context\n        if (this.scale !== 1.0) {\n            context.clearRect(0, 0, w * this.scale, h * this.scale);\n        }\n        else {\n            context.clearRect(0, 0, w, h);\n        }\n\n        if (this.scale !== 1.0) {\n            w *= this.scale;\n            h *= this.scale;\n            context.save();\n            context.scale(this.scale, this.scale);\n        }\n\n        // Render grid\n        this.renderGrid();\n\n        // Render model (already scaled above)\n        this.renderer.renderToContext(context, 1.0);\n\n        // Draw handles for selected elements\n        for (const el of this.selectedElements) {\n            const b = el.getBounds();\n            if (!b) {\n                continue;\n            }\n            let reference = new Point(b.x, b.y);\n            if (this.isMoving && el.canMove()) {\n                reference = this.getElementMoveLocation(el);\n            }\n            else if (this.isResizing && el.canResize()) {\n                reference = this.getElementMoveLocation(el);\n            }\n\n            // Apply element transform\n            context.save();\n            if (el.transform) {\n                this.model.setRenderTransform(context, el.transform, reference);\n            }\n\n            // Get element handles\n            const handles = this.getElementHandles(el);\n\n            // Draw connector lines\n            for (const handle of handles) {\n                if (handle.connectedHandles) {\n                    for (const connected of handle.connectedHandles) {\n                        context.beginPath();\n                        context.moveTo(handle.x, handle.y);\n                        context.lineTo(connected.x, connected.y);\n                        context.strokeStyle = 'white';\n                        context.lineWidth = 1.0 / this.scale;\n                        context.stroke();\n                        context.strokeStyle = 'black';\n                        this.drawDashedLine(context, handle.x, handle.y, connected.x, connected.y, 2);\n                    }\n                }\n                handle.draw(context);\n            }\n\n            // Draw handles\n            for (const handle of handles) {\n                handle.draw(context);\n            }\n\n            context.restore();\n        }\n\n        // Draw rubber band and guidewires\n        if (this.enabled) {\n            if (this.rubberBandActive) {\n                this.drawRubberBand(context);\n                // this.drawGuidewires(context, this.currentX + this.currentWidth, this.currentY + this.currentHeight);\n            }\n            else if (\n                this.isMouseDown &&\n                this.currentX &&\n                this.currentY &&\n                this.currentWidth &&\n                this.currentHeight &&\n                this.selectedElementCount() === 0\n            ) {\n                this.drawGuidewires(context, this.currentX + this.currentWidth, this.currentY + this.currentHeight);\n            }\n            else if ((this.isResizing || this.isMoving) && this.selectedElementCount() === 1) {\n                // If single item being resized, show sizing guides\n                const el = this.selectedElements[0];\n                const s = this.getElementResizeSize(el);\n                const p = this.getElementMoveLocation(el);\n                let transformed = false;\n\n                // If element is transformed, apply transform to guide wires\n                if (el.transform) {\n                    context.save();\n                    transformed = true;\n                    const b = el.getBounds();\n                    if (b) {\n                        let reference = new Point(b.x, b.y);\n                        if (this.isMoving && el.canMove()) {\n                            reference = this.getElementMoveLocation(el);\n                        }\n                        else if (this.isResizing && el.canResize()) {\n                            reference = this.getElementMoveLocation(el);\n                        }\n                        this.model.setRenderTransform(context, el.transform, reference);\n                    }\n                }\n\n                context.strokeStyle = 'rgba(0,0,0,0.65)';\n                context.lineWidth = 1.0 / this.scale;\n                this.drawHorizontalLine(context, p.y);\n                this.drawHorizontalLine(context, p.y + s.height);\n                this.drawVerticalLine(context, p.x);\n                this.drawVerticalLine(context, p.x + s.width);\n\n                context.strokeStyle = 'rgba(255,255,255,0.8)';\n                this.drawDashedHorizontalLine(context, p.y);\n                this.drawDashedHorizontalLine(context, p.y + s.height);\n                this.drawDashedVerticalLine(context, p.x);\n                this.drawDashedVerticalLine(context, p.x + s.width);\n\n                if (transformed) {\n                    context.restore();\n                }\n            }\n        }\n\n        if (this.model.displayFPS) {\n            context.fillStyle = 'cornflowerblue';\n            context.font = '16px monospace';\n            context.fillText(this.calculateFPS().toFixed() + ' fps', 20, 20);\n        }\n\n        // If disabled draw disabled fill\n        if (!this.enabled && this.disabledFill) {\n            context.fillStyle = Color.parse(this.disabledFill).toStyleString();\n            context.fillRect(0, 0, size.width, size.height);\n        }\n\n        if (this.scale !== 1.0) {\n            context.restore();\n        }\n\n        // Clear redraw flag\n        this.needsRedraw = false;\n    }\n\n    /**\n     * Calculates frame rate based on elapsed time since last frame\n     */\n    public calculateFPS(): number {\n        const now = +new Date();\n        let fps: number;\n        if (this.lastFrameTime) {\n            fps = 1000 / (now - this.lastFrameTime);\n        }\n        else {\n            fps = 0;\n        }\n        this.lastFrameTime = now;\n        return fps;\n    }\n\n    /**\n     * Sets redraw flag to induce draw on next draw cycle\n     */\n    public invalidate(): void {\n        this.needsRedraw = true;\n    }\n\n    /**\n     * Retrieves selected element count\n     * @returns Number of selected elements\n     */\n    public selectedElementCount(): number {\n        return this.selectedElements.length;\n    }\n\n    /**\n     * Retrieves selected element\n     * @returns Selected element\n     */\n    public selectedElement(): ElementBase | undefined {\n        if (this.selectedElements.length > 0) {\n            return this.selectedElements[0];\n        }\n        return undefined;\n    }\n\n    /**\n     * Clears selected elements\n     */\n    public clearSelections(): void {\n        if (this.selectedElements.length > 0) {\n            this.selectedElements.forEach(el => {\n                if (el.canEditPoints()) {\n                    el.editPoints = false;\n                }\n            });\n            this.selectedElements = [];\n            this.onSelectionChanged();\n        }\n    }\n\n    /**\n     * Returns true if an element is selected\n     * @param el - Element\n     * @returns True if element is selected\n     */\n    public isSelected(el: ElementBase): boolean {\n        const index = this.selectedElements.indexOf(el);\n        if (index === -1) {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * Selects an element\n     * @param el - Element\n     */\n    public selectElement(el: ElementBase): void {\n        if (!this.isSelected(el)) {\n            this.selectedElements.push(el);\n            this.onSelectionChanged();\n            return;\n        }\n    }\n\n    /**\n     * Deselects an element\n     * @param el - Element\n     */\n    public deselectElement(el: ElementBase): void {\n        const index = this.selectedElements.indexOf(el);\n        if (index !== -1) {\n            this.selectedElements.splice(index, 1);\n            if (el.canEditPoints()) {\n                el.editPoints = false;\n            }\n            this.onSelectionChanged();\n        }\n    }\n\n    /**\n     * Toggles selected state of an element\n     * @param el - Element\n     */\n    public toggleSelected(el: ElementBase): void {\n        const index = this.selectedElements.indexOf(el);\n        if (index !== -1) {\n            if (el.canEditPoints()) {\n                if (!el.editPoints) {\n                    el.editPoints = true;\n                }\n                else {\n                    el.editPoints = false;\n                    this.selectedElements.splice(index, 1);\n                }\n            }\n            else {\n                this.selectedElements.splice(index, 1);\n            }\n        }\n        else {\n            this.selectedElements.push(el);\n        }\n        this.onSelectionChanged();\n    }\n\n    /**\n     * Selects all elements\n     */\n    public selectAll(): void {\n        const c = this;\n        c.selectedElements = [];\n        if (c.model) {\n            c.model.elements.forEach(el => {\n                if (el.interactive) {\n                    c.selectedElements.push(el);\n                }\n            });\n        }\n        this.onSelectionChanged();\n    }\n\n    /**\n     * Selects an array of elements\n     * @param elements - Elements to select\n     */\n    public selectElements(elements: ElementBase[]): void {\n        if (elements) {\n            for (const element of elements) {\n                this.selectElement(element);\n            }\n        }\n    }\n\n    /**\n     * Duplicates selected elements\n     */\n    public duplicateSelected(): void {\n        const self = this;\n        const newSelected: ElementBase[] = [];\n        if (this.selectedElements.length > 0) {\n            this.selectedElements.forEach(el => {\n                const elc = el.clone();\n                elc.setInteractive(true);\n                if (self.model) {\n                    self.model.add(elc);\n                }\n                newSelected.push(elc);\n            });\n            this.selectedElements = newSelected;\n            this.onSelectionChanged();\n        }\n    }\n\n    public onElementsReordered() {\n        this.elementsReordered.trigger(this, this.selectedElements);\n        this.setIsDirty(true);\n    }\n\n    public moveElementToBottom(el: ElementBase) {\n        if (!this.model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        const index = this.model.elements.indexOf(el);\n        if (index > 0) {\n            this.model.elements.splice(index, 1);\n            this.model.elements.splice(0, 0, el);\n            this.onElementsReordered();\n        }\n    }\n\n    public moveElementToTop(el: ElementBase) {\n        if (!this.model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        const index = this.model.elements.indexOf(el);\n        if (index < this.model.elements.length - 1) {\n            this.model.elements.splice(index, 1);\n            this.model.elements.splice(this.model.elements.length, 0, el);\n            this.onElementsReordered();\n        }\n    }\n\n    public moveElementBackward(el: ElementBase) {\n        if (!this.model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        const index = this.model.elements.indexOf(el);\n        if (index > 0) {\n            this.model.elements.splice(index, 1);\n            this.model.elements.splice(index - 1, 0, el);\n            this.onElementsReordered();\n        }\n    }\n\n    public moveElementForward(el: ElementBase) {\n        if (!this.model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        const index = this.model.elements.indexOf(el);\n        if (index < this.model.elements.length - 1) {\n            this.model.elements.splice(index, 1);\n            this.model.elements.splice(index + 1, 0, el);\n            this.onElementsReordered();\n        }\n    }\n\n    public setIsDirty(isDirty: boolean) {\n        if (isDirty !== this.isDirty) {\n            this.isDirty = isDirty;\n            this.isDirtyChanged.trigger(this, isDirty);\n        }\n    }\n\n    /**\n     * Returns number of selected movable elements\n     * @returns Number of selected movable elements\n     */\n    public movableSelectedElementCount(): number {\n        let count = 0;\n        for (const el of this.selectedElements) {\n            if (el.canMove()) {\n                count++;\n            }\n        }\n        return count;\n    }\n\n    /**\n     * Returns number of selected resizable elements\n     * @returns Number of selected resizable elements\n     */\n    public resizeableSelectedElementCount(): number {\n        let count = 0;\n        for (const el of this.selectedElements) {\n            if (el.canResize()) {\n                count++;\n            }\n        }\n        return count;\n    }\n\n    /**\n     * Returns number of selected nudgeable elements\n     * @returns Number of selected nudgeable elements\n     */\n    public nudgeableSelectedElementCount(): number {\n        let count = 0;\n        for (const el of this.selectedElements) {\n            if (el.canNudge()) {\n                count++;\n            }\n        }\n        return count;\n    }\n\n    /**\n     * Clears all element resize sizes\n     */\n    public clearElementResizeSizes(): void {\n        this.elementResizeSizes = [];\n    }\n\n    /**\n     * Sets an element resize size\n     * @param el - Element\n     * @param size - Size\n     * @param location - Optional location\n     */\n    public setElementResizeSize(el: ElementBase, size: Size, location?: Point) {\n        if (location === undefined) {\n            const b = el.getBounds();\n            if (b) {\n                location = b.location;\n            }\n        }\n        if (!location) {\n            throw new Error(ErrorMessages.BoundsAreUndefined);\n        }\n        let newWidth = size.width;\n        let newHeight = size.height;\n        if (!el.model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        const modelSize = el.model.getSize();\n        if (!modelSize) {\n            throw new Error(ErrorMessages.SizeUndefined);\n        }\n        if (this.constrainToBounds) {\n            if (location.x + size.width > modelSize.width) {\n                newWidth = modelSize.width - location.x;\n            }\n            if (location.y + size.height > modelSize.height) {\n                newHeight = modelSize.height - location.y;\n            }\n        }\n        const newSize = new Size(newWidth, newHeight);\n        if (!this.constrainToBounds || DesignController.isInBounds(location, newSize, el.model)) {\n            for (const resizeSize of this.elementResizeSizes) {\n                if (resizeSize.element === el) {\n                    resizeSize.size = newSize;\n                    this.onElementSizing(el, newSize);\n                    return;\n                }\n            }\n            this.elementResizeSizes.push(new ResizeSize(el, newSize));\n            this.onElementSizing(el, newSize);\n        }\n    }\n\n    /**\n     * Gets an element resize size\n     * @param el - Element\n     * @returns Size\n     */\n    public getElementResizeSize(el: ElementBase): Size {\n        for (const resizeSize of this.elementResizeSizes) {\n            if (resizeSize.element === el) {\n                return resizeSize.size;\n            }\n        }\n        const b = el.getBounds();\n        if (b) {\n            return new Size(b.width, b.height);\n        }\n        throw new Error(ErrorMessages.SizeUndefined);\n    }\n\n    /**\n     * Clears all element move locations\n     */\n    public clearElementMoveLocations(): void {\n        this.elementMoveLocations = [];\n    }\n\n    /**\n     * Sets an element move location\n     * @param el - Element\n     * @param location - Location\n     * @param size - Size\n     */\n    public setElementMoveLocation(el: ElementBase, location: Point, size: Size): void {\n        if (!el.model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        let newSize: Size | undefined = size;\n        if (newSize === undefined) {\n            newSize = el.getSize();\n        }\n        if (!newSize) {\n            throw new Error(ErrorMessages.SizeUndefined);\n        }\n        const modelSize = el.model.getSize();\n        if (!modelSize) {\n            throw new Error(ErrorMessages.SizeUndefined);\n        }\n        let newX = location.x;\n        let newY = location.y;\n        if (this.constrainToBounds) {\n            if (newX < 0) {\n                newX = 0;\n            }\n            else if (newX + newSize.width > modelSize.width) {\n                newX = modelSize.width - newSize.width;\n            }\n            if (newY < 0) {\n                newY = 0;\n            }\n            else if (newY + newSize.height > modelSize.height) {\n                newY = modelSize.height - newSize.height;\n            }\n        }\n        const newLocation = new Point(newX, newY);\n        if (!this.constrainToBounds || DesignController.isInBounds(newLocation, newSize, el.model)) {\n            for (const moveLocation of this.elementMoveLocations) {\n                if (moveLocation.element === el) {\n                    moveLocation.location = newLocation;\n                    this.onElementMoving(el, newLocation);\n                    return;\n                }\n            }\n            this.elementMoveLocations.push(new MoveLocation(el, newLocation));\n            this.onElementMoving(el, newLocation);\n        }\n    }\n\n    /**\n     * Gets an element move location\n     * @param el - Element\n     * @returns Location\n     */\n    public getElementMoveLocation(el: ElementBase): Point {\n        for (const moveLocation of this.elementMoveLocations) {\n            if (moveLocation.element === el) {\n                return moveLocation.location;\n            }\n        }\n        const b = el.getBounds();\n        if (!b) {\n            throw new Error(ErrorMessages.BoundsAreUndefined);\n        }\n        return new Point(b.x, b.y);\n    }\n\n    /**\n     * Nudges size of selected elements\n     * @param offsetX - Nudge offset X\n     * @param offsetY - Nudge offset Y\n     */\n    public nudgeSize(offsetX: number, offsetY: number): void {\n        // Validate that all can be nudged to new size\n        for (const e of this.selectedElements) {\n            if (e.canNudge()) {\n                const b = e.getBounds();\n                if (!b) {\n                    return;\n                }\n                const size = new Size(b.width + offsetX, b.height + offsetY);\n                if (size.width <= 0 || size.height <= 0) {\n                    return;\n                }\n                if (this.constrainToBounds && e.model && !DesignController.isInBounds(b.location, size, e.model)) {\n                    return;\n                }\n            }\n        }\n        for (const e of this.selectedElements) {\n            if (e.canNudge()) {\n                e.nudgeSize(offsetX, offsetY);\n                const size = e.getSize();\n                if (size) {\n                    this.onElementSized(e, size);\n                    this.setElementResizeSize(e, size, e.getLocation());\n                }\n            }\n        }\n        this.onModelUpdated();\n        this.drawIfNeeded();\n    }\n\n    /**\n     * Nudges location of selected elements\n     * @param offsetX - Nudge offset X\n     * @param offsetY - Nudge offset Y\n     */\n    public nudgeLocation(offsetX: number, offsetY: number): void {\n        if (!this.model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        const modelSize = this.model.getSize();\n        if (!modelSize) {\n            throw new Error(ErrorMessages.SizeUndefined);\n        }\n        // Validate that all can be nudged to new location\n        let allGood = true;\n        for (const e of this.selectedElements) {\n            if (e.canNudge()) {\n                const b = e.getBounds();\n                if (!b) {\n                    throw new Error(ErrorMessages.BoundsAreUndefined);\n                }\n                const location = new Point(b.x + offsetX, b.y + offsetY);\n                if (this.constrainToBounds && e.model && !DesignController.isInBounds(location, b.size, e.model)) {\n                    allGood = false;\n                    break;\n                }\n            }\n        }\n        if (!allGood) {\n            // Determine maximum we can move and set new offsetX/Y\n            let x1 = Number.POSITIVE_INFINITY;\n            let x2 = Number.NEGATIVE_INFINITY;\n            let y1 = Number.POSITIVE_INFINITY;\n            let y2 = Number.NEGATIVE_INFINITY;\n            for (const selectedElement of this.selectedElements) {\n                if (selectedElement.canNudge()) {\n                    const b = selectedElement.getBounds();\n                    if (!b) {\n                        continue;\n                    }\n                    if (b.x < x1) {\n                        x1 = b.x;\n                    }\n                    if (b.x + b.width > x2) {\n                        x2 = b.x + b.width;\n                    }\n                    if (b.y < y1) {\n                        y1 = b.y;\n                    }\n                    if (b.y + b.height > y2) {\n                        y2 = b.y + b.height;\n                    }\n                }\n            }\n            if (offsetX < 0 && x1 + offsetX < 0) {\n                offsetX = -x1;\n            }\n            else if (offsetX > 0 && x2 + offsetX > modelSize.width) {\n                offsetX = modelSize.width - x2;\n            }\n            if (offsetY < 0 && y1 + offsetY < 0) {\n                offsetY = -y1;\n            }\n            else if (offsetY > 0 && y2 + offsetY > modelSize.height) {\n                offsetY = modelSize.height - y2;\n            }\n            for (const selectedElement of this.selectedElements) {\n                if (selectedElement.canNudge()) {\n                    selectedElement.translate(offsetX, offsetY);\n                    const b = selectedElement.getBounds();\n                    if (b) {\n                        this.onElementMoved(selectedElement, b.location);\n                    }\n                }\n            }\n        }\n        else {\n            // All good move requested amount\n            for (const e of this.selectedElements) {\n                if (e.canNudge()) {\n                    e.translate(offsetX, offsetY);\n                    const b = e.getBounds();\n                    if (b) {\n                        this.onElementMoved(e, b.location);\n                    }\n                }\n            }\n        }\n        this.onModelUpdated();\n        this.drawIfNeeded();\n    }\n\n    /**\n     * Sets rubber band active state\n     * @param value - Rubber band state\n     */\n    public setRubberBandActive(value: boolean): void {\n        if (value !== this.rubberBandActive) {\n            this.rubberBandActive = value;\n            this.invalidate();\n        }\n    }\n\n    /**\n     * Sets rubber band region\n     * @param value - Rubber band region\n     */\n    public setRubberBandRegion(value: Region): void {\n        this.rubberBandRegion = value;\n        this.invalidate();\n    }\n\n    /**\n     * Sets design surface grid type\n     * @param value - Rubber band state\n     */\n    public setGridType(value: GridType): void {\n        if (this.gridType !== value) {\n            this.gridType = value;\n            this.invalidate();\n        }\n    }\n\n    /**\n     * Sets design surface grid spacing\n     * @param value - Grid spacing\n     */\n    public setGridSpacing(value: number): void {\n        if (this.gridSpacing !== value && value >= 1) {\n            this.gridSpacing = value;\n            this.invalidate();\n        }\n    }\n\n    /**\n     * Sets design surface grid color\n     * @param value - Grid color\n     */\n    public setGridColor(value: string): void {\n        if (this.gridColor !== value) {\n            this.gridColor = value;\n            this.invalidate();\n        }\n    }\n\n    /**\n     * Binds existing controller to host DIV element\n     * @param hostDiv - Hosting div element\n     * @returns This design controller\n     */\n    public bindTarget(hostDiv: HTMLDivElement) {\n        if (!hostDiv) {\n            throw new Error(ErrorMessages.HostElementUndefined);\n        }\n        hostDiv.innerHTML = '';\n        if (!hostDiv.id) {\n            hostDiv.id = Utility.guid();\n        }\n\n        // Disable arrow/navigation keys to prevent scrolling\n        // and allow handling in contained canvas\n        const ar = [ 37, 38, 39, 40 ];\n\n        // Change to use DOM 0 Style binding to prevent multiples\n        hostDiv.onkeydown = e => {\n            const key = e.which;\n            ar.forEach(k => {\n                if (k === key) {\n                    e.preventDefault();\n                    return false;\n                }\n            });\n            return true;\n        };\n\n        const canvas = this.getCanvas();\n        if (canvas && this.model) {\n            hostDiv.appendChild(canvas);\n            canvas.setAttribute('id', hostDiv.id + '_canvas');\n            const size = this.model.getSize();\n            if (!size) {\n                throw new Error(ErrorMessages.SizeUndefined);\n            }\n            hostDiv.style.width = size.width * this.scale + 'px';\n            hostDiv.style.height = size.height * this.scale + 'px';\n            this.draw();\n            this.model.controllerAttached.trigger(this.model, this);\n        }\n        return this;\n    }\n}\n","/**\r\n * Describes design handle movement\r\n */\r\nexport class HandleMovedArgs {\r\n    /**\r\n     * Horizontal (x) movement\r\n     */\r\n    public deltaX: number;\r\n\r\n    /**\r\n     * Vertical (y) movement\r\n     */\r\n    public deltaY: number;\r\n\r\n    /**\r\n     * Represents movement of element handle\r\n     * @param deltaX - x movement\r\n     * @param deltaY - Y movement\r\n     */\r\n    constructor(deltaX: number, deltaY: number) {\r\n        this.deltaX = deltaX;\r\n        this.deltaY = deltaY;\r\n    }\r\n}\r\n","import { MouseEventArgs } from '../core/mouse-event-args';\nimport { ElementBase } from './element-base';\n\n/**\n * Encapsulates an element related mouse event\n */\nexport class ElementMouseEventArgs extends MouseEventArgs {\n    /**\n     * Model element\n     */\n    public element: ElementBase;\n\n    /**\n     * Constructs an element mouse event args\n     * @param event - DOM mouse event\n     * @param element - Model element\n     */\n    constructor(event: MouseEvent, element: ElementBase) {\n        super(event);\n        this.element = element;\n    }\n}\n","import { ErrorMessages } from '../core/error-messages';\nimport { Utility } from '../core/utility';\nimport { Resource } from './resource';\nimport { ResourceFactory } from './resource-factory';\n\n/**\n * String text resource\n */\nexport class TextResource extends Resource {\n    /**\n     * Text resource factory function\n     * @returns New text resource\n     */\n    public static create(): TextResource {\n        return new TextResource();\n    }\n\n    /**\n     * Creates text resource from text string\n     * @param key - Resource key\n     * @param text - Resource text\n     * @param locale - Optional resource locale ID (e.g. en-US)\n     * @returns New text resource\n     */\n    public static createFromText(key: string, text: string, locale?: string): TextResource {\n        const tr = new TextResource();\n        if (arguments.length >= 2) {\n            tr.key = key;\n            tr.text = text;\n        }\n        if (arguments.length >= 3) {\n            tr.locale = locale;\n        }\n        return tr;\n    }\n\n    /**\n     * Creates text resource from http(s) source URI\n     * @param key - Resource key\n     * @param uri - Resource URI\n     * @param locale - Optional resource locale ID (e.g. en-US)\n     * @returns New text resource\n     */\n    public static createFromUri(key: string, uri: string, locale?: string): TextResource {\n        const tr = new TextResource();\n        if (arguments.length >= 2) {\n            tr.key = key;\n            tr.uri = uri;\n        }\n        if (arguments.length >= 3) {\n            tr.locale = locale;\n        }\n        return tr;\n    }\n\n    /**\n     * Resource text\n     */\n    public text?: string;\n\n    constructor() {\n        super('text');\n    }\n\n    /**\n     * Clones this resource to a new instance\n     * @returns Cloned text resource\n     */\n    public clone(): TextResource {\n        const o: TextResource = new TextResource();\n        super.cloneTo(o);\n        if (this.text) {\n            o.text = this.text;\n        }\n        return o;\n    }\n\n    /**\n     * Copies properties of another text resource\n     * @param o - Source text resource\n     */\n    public parse(o: any): void {\n        super.parse(o);\n        if (o.text) {\n            this.text = o.text;\n        }\n    }\n\n    /**\n     * Serializes resource to a new instance\n     * @returns Serialized resource instance\n     */\n    public serialize(): any {\n        const o = super.serialize();\n        if (this.text) {\n            o.text = this.text;\n        }\n        return o;\n    }\n\n    /**\n     * Retrieves text resource from an http(s) source\n     * @param url - Text source URL\n     * @param callback - Retrieval callback (result: boolean)\n     */\n    public load(url: string, callback: (result: boolean) => void): void {\n        const self = this;\n        Utility.getRemoteText(url, text => {\n            if (text) {\n                self.text = text;\n                callback(true);\n            }\n            else {\n                callback(false);\n            }\n        });\n    }\n\n    public initialize() {\n        const self = this;\n\n        if (!self.resourceManager) {\n            throw new Error(ErrorMessages.ResourceManagerIsUndefined);\n        }\n\n        // If embedded text, no need to retrieve file\n        if (this.text) {\n            self.resourceManager.unregister(self, true);\n        }\n        else {\n            // Text Resource type\n            const resourcePath = self.uri;\n            if (!resourcePath) {\n                throw new Error(ErrorMessages.ResourceIsInvalid);\n            }\n            const resourcePathLowered = resourcePath.toLowerCase();\n\n            // Local (Server) Image\n            if (resourcePath.charAt(0) === ':') {\n                const url = resourcePath.substring(1, resourcePath.length);\n                self.load(url, success => {\n                    if (self.resourceManager) {\n                        self.resourceManager.unregister(self, success);\n                    }\n                });\n            }\n            else if (resourcePath.charAt(0) === '/') {\n                // Shared Text Resource\n                if (self.resourceManager.model && self.resourceManager.model.basePath) {\n                    self.load(Utility.joinPaths(self.resourceManager.model.basePath, resourcePath), success => {\n                        if (self.resourceManager) {\n                            self.resourceManager.unregister(self, success);\n                        }\n                    });\n                }\n            }\n            else if (resourcePathLowered.indexOf('http://') === 0 || resourcePathLowered.indexOf('https://') === 0) {\n                // Remote / External Image (http:// or https://)\n                self.load(resourcePath, success => {\n                    if (self.resourceManager) {\n                        self.resourceManager.unregister(self, success);\n                    }\n                });\n            }\n            else {\n                // Embedded Text Resource\n                if (self.resourceManager.model && self.resourceManager.localResourcePath) {\n                    self.load(Utility.joinPaths(self.resourceManager.localResourcePath, resourcePath), success => {\n                        if (self.resourceManager) {\n                            self.resourceManager.unregister(self, success);\n                        }\n                    });\n                }\n            }\n        }\n    }\n}\n\n// Register type creator\nResourceFactory.registerCreator('text', TextResource);\n","import { IController } from '../controller/controller';\nimport { Color } from '../core/color';\nimport { CommonEvent } from '../core/common-event';\nimport { ErrorMessages } from '../core/error-messages';\nimport { Model } from '../core/model';\nimport { FillFactory } from '../fill/fill-factory';\nimport { FillInfo } from '../fill/fill-info';\nimport { ViewController } from '../view/view-controller';\n\n/**\n * Implements gradual drawing of models with polygon elements\n */\nexport class Sketcher {\n    public static create(modelUrl: string, scale: number = 1) {\n        return new Sketcher(modelUrl, scale);\n    }\n\n    public sketchDone: CommonEvent<boolean> = new CommonEvent<boolean>();\n\n    public modelUrl?: string;\n    public timerDelay: number;\n    public strokeBatchSize: number;\n    public repeat: boolean;\n    public fillDelay: number;\n    public fillBatchSize: number;\n    public repeatDelay: number;\n    public sketchColor: boolean;\n    public strokeOpacity: number;\n\n    public drawModel?: Model;\n    public sourceModel?: Model;\n    public context?: CanvasRenderingContext2D;\n    public elementIndex: number = 0;\n    public elementCount: number = 0;\n    public passIndex: number = 0;\n    public timerHandle?: number;\n    public controller?: ViewController;\n    public scale: number = 1;\n\n    constructor(model: string | Model, scale: number = 1) {\n        this.addTo = this.addTo.bind(this);\n        this.controllerAttached = this.controllerAttached.bind(this);\n        this.controllerDetached = this.controllerDetached.bind(this);\n        this.clampColor = this.clampColor.bind(this);\n        this.drawNextElement = this.drawNextElement.bind(this);\n        this.onModelSet = this.onModelSet.bind(this);\n\n        if (model instanceof Model) {\n            this.sourceModel = model;\n        }\n        else {\n            this.modelUrl = model;\n        }\n        this.scale = scale;\n        this.timerDelay = 20;\n        this.strokeBatchSize = 128;\n        this.repeat = true;\n        this.fillDelay = 5000;\n        this.fillBatchSize = 1024;\n        this.repeatDelay = 10000;\n        this.sketchColor = false;\n        this.strokeOpacity = 128;\n    }\n\n    public addTo(model: Model) {\n        model.controllerAttached.add(this.controllerAttached);\n        model.controllerDetached.add(this.controllerDetached);\n        return this;\n    }\n\n    public controllerAttached(drawModel: Model, controller?: IController | undefined) {\n        drawModel.controllerAttached.clear();\n        this.drawModel = drawModel;\n        this.controller = controller as ViewController;\n        const self = this;\n\n        // If model not provided, load externally\n        if (!self.sourceModel && this.modelUrl) {\n            Model.load('', this.modelUrl, _sourceModel => {\n                self.sourceModel = _sourceModel;\n                self.onModelSet();\n            });\n        }\n        else {\n            self.onModelSet();\n        }\n    }\n\n    public onModelSet() {\n        const self = this;\n\n        // If we no longer have a canvas, abort\n        if (\n            !self.controller ||\n            !self.controller.canvas ||\n            !self.sourceModel ||\n            !self.controller.model ||\n            !self.controller.renderer\n        ) {\n            return;\n        }\n\n        // Start rendering context\n        const context = self.controller.canvas.getContext('2d');\n        if (!context) {\n            throw new Error(ErrorMessages.CanvasContextIsNull);\n        }\n        self.context = context;\n        self.controller.model.context = self.context;\n        self.controller.renderer.beginRender(self.context, self.controller.scale);\n\n        // Set up timer to add elements from source model to draw model\n        self.elementCount = self.sourceModel.elements.length;\n        self.elementIndex = 0;\n        self.passIndex = 0;\n        self.timerHandle = setTimeout(self.drawNextElement, self.timerDelay, self);\n    }\n\n    public controllerDetached(drawModel: Model, controller?: IController | undefined) {\n        this.controller = undefined;\n        drawModel.controllerDetached.clear();\n        this.drawModel = undefined;\n        if (this.timerHandle) {\n            clearTimeout(this.timerHandle);\n            this.timerHandle = undefined;\n        }\n    }\n\n    public clampColor(value: number) {\n        let rvalue = value;\n        if (rvalue < 0) {\n            rvalue = 0;\n        }\n        else if (rvalue > 255) {\n            rvalue = 255;\n        }\n        return Math.floor(rvalue);\n    }\n\n    public drawNextElement(sketcher: Sketcher) {\n        this.timerHandle = undefined;\n        if (\n            !sketcher.controller ||\n            !sketcher.controller.canvas ||\n            !sketcher.drawModel ||\n            !sketcher.controller.renderer ||\n            !sketcher.context ||\n            !sketcher.controller.model ||\n            !sketcher.sourceModel\n        ) {\n            return;\n        }\n        if (sketcher.elementIndex >= sketcher.elementCount || sketcher.elementIndex < 0) {\n            if (sketcher.passIndex === 1) {\n                if (sketcher.repeat) {\n                    sketcher.drawModel.elements = [];\n                    sketcher.passIndex = 0;\n                    sketcher.elementIndex = 0;\n                    sketcher.timerHandle = setTimeout(this.drawNextElement, sketcher.repeatDelay, sketcher);\n                }\n                else {\n                    sketcher.controller.renderer.endRender(sketcher.context);\n                    sketcher.context = undefined;\n                    if (this.sketchDone.hasListeners()) {\n                        this.sketchDone.trigger(true);\n                    }\n                }\n            }\n            else {\n                sketcher.passIndex += 1;\n                sketcher.elementIndex = 0;\n                sketcher.timerHandle = setTimeout(this.drawNextElement, sketcher.fillDelay, sketcher);\n            }\n        }\n        else {\n            if (sketcher.passIndex === 0 && sketcher.elementIndex === 0) {\n                const size = sketcher.controller.model.getSize();\n                if (size !== undefined) {\n                    const w = size.width;\n                    const h = size.height;\n                    if (FillFactory.setElementFill(sketcher.context, sketcher.controller.model)) {\n                        sketcher.context.fillRect(0, 0, w, h);\n                    }\n                    else {\n                        sketcher.context.clearRect(0, 0, w, h);\n                    }\n                }\n            }\n\n            const els = sketcher.sourceModel.elements;\n            const batchSize = sketcher.passIndex === 0 ? this.strokeBatchSize : this.fillBatchSize;\n            for (let i = 0; i < batchSize; i++) {\n                // Get next element from source model\n                const el = els[sketcher.elementIndex];\n                const isFillable = el.type === 'path' || el.type === 'polygon';\n                if (!el) {\n                    return;\n                }\n\n                // If first pass, draw outline\n                if (sketcher.passIndex === 0) {\n                    const elc = el.clone();\n                    if (isFillable) {\n                        const fillInfo = FillInfo.getFillInfo(el);\n                        if (fillInfo && fillInfo.type === 'color' && fillInfo.color) {\n                            const color = Color.parse(fillInfo.color);\n                            elc.setFill('#FFFFFF');\n                            if (this.sketchColor) {\n                                const strokeColor = new Color(this.strokeOpacity, color.r, color.g, color.b);\n                                elc.setStroke(strokeColor.toHexString());\n                            }\n                            else {\n                                const grayColor = this.clampColor(0.21 * color.r + 0.72 * color.g + 0.07 * color.b);\n                                const strokeColor = new Color(this.strokeOpacity, grayColor, grayColor, grayColor);\n                                elc.setStroke(strokeColor.toHexString());\n                            }\n                        }\n                    }\n                    sketcher.drawModel.add(elc);\n                    sketcher.controller.renderer.renderElement(sketcher.context, elc);\n                }\n                else {\n                    // On second pass, replace fill and erase stroke\n                    const elc = sketcher.drawModel.elements[sketcher.elementIndex];\n                    if (isFillable) {\n                        elc.setFill(el.fill);\n                        elc.setStroke(undefined);\n                    }\n                    sketcher.controller.renderer.renderElement(sketcher.context, elc);\n                }\n\n                sketcher.elementIndex++;\n                if (sketcher.elementIndex >= sketcher.elementCount || sketcher.elementIndex < 0) {\n                    break;\n                }\n            }\n            if (sketcher.controller) {\n                sketcher.timerHandle = setTimeout(this.drawNextElement, sketcher.timerDelay, sketcher);\n            }\n        }\n    }\n}\n","import { ElementCommandHandler } from '../command/element-command-handler';\nimport { IController } from '../controller/controller';\nimport { CommonEvent } from '../core/common-event';\nimport { ErrorMessages } from '../core/error-messages';\nimport { Model } from '../core/model';\nimport { Utility } from '../core/utility';\nimport { ElementBase } from '../elements/element-base';\nimport { ImageElement } from '../elements/image-element';\nimport { SpriteElement } from '../elements/sprite-element';\nimport { BitmapResource } from '../resource/bitmap-resource';\nimport { ResourceManager } from '../resource/resource-manager';\nimport { ResourceManagerEvent } from '../resource/resource-manager-event';\nimport { ResourceState } from '../resource/resource-state';\nimport { SurfaceButtonElement } from './surface-button-element';\nimport { SurfaceElement } from './surface-element';\nimport { SurfaceElementStates } from './surface-element-states';\nimport { SurfaceLayer } from './surface-layer';\nimport { SurfaceTextElement } from './surface-text-element';\nimport { SurfaceVideoLayer } from './surface-video-layer';\nimport { SurfaceViewController } from './surface-view-controller';\n\n/**\n * Renders elements derived from surface images and layered media elements\n */\nexport class Surface {\n    /**\n     * Surface factory function\n     * @param {number} width - Surface width\n     * @param {number} height - Surface height\n     * @param {string} id - Surface id\n     * @param {number} scale - Rendering scale\n     * @returns {Elise.Player.Surface} New surface\n     */\n    public static create(width: number, height: number, id: string, scale: number) {\n        return new Surface(width, height, id, scale);\n    }\n\n    /**\n     * Surface width\n     */\n    public width: number;\n\n    /**\n     * Surface height\n     */\n    public height: number;\n\n    /**\n     * Surface id\n     */\n    public id: string;\n\n    /**\n     * Rendering scale\n     */\n    public scale: number;\n\n    /**\n     * Rendering opacity (0-1)\n     */\n    public opacity: number;\n\n    /**\n     * Error event handler\n     */\n    public error: CommonEvent<string> = new CommonEvent<string>();\n\n    /**\n     * Background color as string\n     */\n    public backgroundColor?: string;\n\n    /**\n     * Normal state image URL\n     */\n    public normalImageSource?: string;\n\n    /**\n     * Selected state image URL\n     */\n    public selectedImageSource?: string;\n\n    /**\n     * Highlighted state image URL\n     */\n    public highlightedImageSource?: string;\n\n    /**\n     * Disabled state image URL\n     */\n    public disabledImageSource?: string;\n\n    /**\n     * Base model layer elements\n     */\n    public elements: SurfaceElement[] = [];\n\n    /**\n     * Base model layer elements\n     */\n    public layers: SurfaceLayer[] = [];\n\n    /**\n     * Loaded event called when all resources have been loaded or have failed\n     */\n    public loaded: CommonEvent<boolean> = new CommonEvent<boolean>();\n\n    /**\n     * Loaded event called after controller has been initialized\n     */\n    public initialized: CommonEvent<SurfaceViewController> = new CommonEvent<SurfaceViewController>();\n\n    /**\n     * Hosting HTML div\n     */\n    public hostDiv?: HTMLDivElement;\n\n    /**\n     * Resource state listener\n     */\n    public resourceListenerEvent: ResourceManagerEvent<ResourceState> = new ResourceManagerEvent<ResourceState>();\n\n    /**\n     * Surface view controller\n     */\n    public controller?: SurfaceViewController;\n\n    /**\n     * Surface div element\n     */\n    public div?: HTMLDivElement;\n\n    /**\n     * Surface drawing model\n     */\n    public model?: Model;\n\n    /**\n     * True if child surface of another surface\n     */\n    public isChild: boolean = false;\n\n    /**\n     * X translation\n     */\n    public translateX: number;\n\n    /**\n     * Y translation\n     */\n    public translateY: number;\n\n    /**\n     * @param {number} width - Surface width\n     * @param {number} height - Surface height\n     * @param {string} id - Surface id\n     * @param {number} scale - Rendering scale\n     */\n    constructor(width: number, height: number, id?: string, scale?: number) {\n        this.width = width;\n        this.height = height;\n        if (id) {\n            this.id = id;\n        }\n        else {\n            this.id = Utility.guid();\n        }\n        if (scale !== undefined && scale > 0) {\n            this.scale = scale;\n        }\n        else {\n            this.scale = 1.0;\n        }\n        this.opacity = 1;\n        this.translateX = 0;\n        this.translateY = 0;\n\n        this.createDiv = this.createDiv.bind(this);\n        this.initializeController = this.initializeController.bind(this);\n        this.elementWithId = this.elementWithId.bind(this);\n        this.layerWithId = this.layerWithId.bind(this);\n        this.bind = this.bind.bind(this);\n        this.unbind = this.unbind.bind(this);\n        this.scaledValue = this.scaledValue.bind(this);\n        this.createModel = this.createModel.bind(this);\n        this.loadResources = this.loadResources.bind(this);\n        this.onErrorInternal = this.onErrorInternal.bind(this);\n        this.addResourceListener = this.addResourceListener.bind(this);\n        this.setOpacity = this.setOpacity.bind(this);\n        this.setTranslateX = this.setTranslateX.bind(this);\n        this.setTranslateY = this.setTranslateY.bind(this);\n        this.startVideos = this.startVideos.bind(this);\n    }\n\n    public createDiv(onBottom?: boolean) {\n        if (!this.hostDiv) {\n            throw new Error('Host div is undefined');\n        }\n        const div = document.createElement('div');\n        div.id = this.id + '_div';\n        this.div = div;\n        if (this.isChild) {\n            div.style.position = 'absolute';\n            div.style.left = this.translateX * this.scale + 'px';\n            div.style.top = this.translateY * this.scale + 'px';\n        }\n        else {\n            div.style.position = 'relative';\n        }\n        div.style.opacity = this.opacity.toString();\n        if (onBottom) {\n            this.hostDiv.insertBefore(this.div, this.hostDiv.firstElementChild);\n        }\n        else {\n            this.hostDiv.appendChild(this.div);\n        }\n    }\n\n    /**\n     * Initializes host HTML div, view controller and command handlers\n     */\n    public initializeController() {\n        const self = this;\n        if (!self.model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        if (!self.div) {\n            throw new Error(ErrorMessages.HostElementUndefined);\n        }\n\n        self.controller = new SurfaceViewController();\n        self.controller.setModel(self.model);\n        self.controller.setScale(self.scale);\n        self.controller.bindTarget(self.div);\n        self.controller.surface = self;\n\n        const ech = new ElementCommandHandler();\n        ech.attachController(self.controller);\n        ech.addHandler('pushFrame', ElementCommandHandler.pushFrame);\n        ech.addHandler('popFrame', ElementCommandHandler.popFrame);\n\n        // Bind command handler event handlers to element event trigger functions\n        ech.addHandler(\n            SurfaceButtonElement.BUTTON_CLICK,\n            (controller: IController, element: ElementBase, command: string, trigger: string, parameters: any) => {\n                const c = controller as SurfaceViewController;\n                if (!c.surface || !element || !element.id) {\n                    return;\n                }\n                const el = c.surface.elementWithId(element.id);\n                if (!el) {\n                    return;\n                }\n                const button = el as SurfaceButtonElement;\n                button.onClicked();\n            }\n        );\n\n        ech.addHandler(\n            SurfaceTextElement.TEXT_CLICK,\n            (controller: IController, element: ElementBase, command: string, trigger: string, parameters: any) => {\n                const c = controller as SurfaceViewController;\n                if (!c.surface || !element || !element.id) {\n                    return;\n                }\n                const el = c.surface.elementWithId(element.id);\n                if (!el) {\n                    return;\n                }\n                const text = el as SurfaceTextElement;\n                text.onClicked();\n            }\n        );\n\n        self.layers.forEach(layer => {\n            if (layer.element && self.div) {\n                self.div.appendChild(layer.element);\n            }\n        });\n\n        self.initialized.trigger(self.controller);\n    }\n\n    /**\n     * Returns first element found with given ID\n     * @returns Element with given ID or undefined if not found\n     */\n    public elementWithId(id: string) {\n        for (const el of this.elements) {\n            if (el.id === id) {\n                return el;\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Returns first layered element found with given ID\n     * @returns Layered element with given ID or undefined if not found\n     */\n    public layerWithId(id: string) {\n        for (const layer of this.layers) {\n            if (layer.id === id) {\n                return layer;\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Creates internal model if necessary, binds to host element and calls completion callback\n     * @param hostDiv - Hosting div element\n     * @callback Completion callback (surface: Surface)\n     */\n    public bind(hostDiv: HTMLDivElement, callback: (surface: Surface) => void, onBottom: boolean) {\n        const self = this;\n        if (self.controller) {\n            self.onErrorInternal(ErrorMessages.SurfaceIsAlreadyBound);\n            return;\n        }\n        self.hostDiv = hostDiv;\n        self.createDiv(onBottom);\n        if (self.model) {\n            self.initializeController();\n            if (callback) {\n                callback(self);\n            }\n        }\n        else {\n            self.createModel(() => {\n                if (self.model) {\n                    self.initializeController();\n                    if (callback) {\n                        callback(self);\n                    }\n                }\n            });\n        }\n    }\n\n    /**\n     * Unbinds from and destroys host element\n     */\n    public unbind() {\n        if (!this.controller) {\n            return;\n        }\n\n        if (this.hostDiv && this.div) {\n            this.hostDiv.removeChild(this.div);\n        }\n\n        // Destroy layer elements\n        this.layers.forEach(layer => {\n            layer.destroy();\n        });\n\n        // Clear event handlers\n        this.resourceListenerEvent.clear();\n        this.controller.mouseEnteredElement.clear();\n        this.controller.mouseLeftElement.clear();\n        this.controller.mouseDownElement.clear();\n        this.controller.mouseUpElement.clear();\n        this.controller.elementClicked.clear();\n        this.controller.commandHandler = undefined;\n        this.controller.timer.clear();\n        this.controller.detach();\n        this.controller = undefined;\n        this.div = undefined;\n        this.hostDiv = undefined;\n    }\n\n    /**\n     * Called after all resources have been loaded to initialize surface elements\n     */\n    public onload() {\n        // Call onload on all layer elements\n        this.layers.forEach(layer => {\n            layer.onload();\n        });\n    }\n\n    /**\n     * Called when surface is being unloaded to unload resources\n     */\n    public onunload() {\n        // Call onunload on all layer elements\n        this.layers.forEach(layer => {\n            layer.onunload();\n        });\n    }\n\n    /**\n     * Sets rendering scale\n     */\n    public setScale(scale: number) {\n        this.scale = scale;\n        if (this.controller) {\n            this.controller.setScale(this.scale);\n        }\n        this.layers.forEach(layer => {\n            layer.setScale(scale);\n        });\n        return this;\n    }\n\n    /**\n     * Sets rendering opacity\n     */\n    public setOpacity(opacity: number) {\n        this.opacity = opacity;\n        if (this.div) {\n            this.div.style.opacity = this.opacity.toString();\n        }\n        this.layers.forEach(layer => {\n            layer.setOpacity(opacity);\n        });\n        return this;\n    }\n\n    /**\n     * Sets X translation\n     */\n    public setTranslateX(translateX: number) {\n        this.translateX = translateX;\n        if (this.div) {\n            this.div.style.left = this.translateX * this.scale + 'px';\n        }\n        return this;\n    }\n\n    /**\n     * Sets Y translation\n     */\n    public setTranslateY(translateY: number) {\n        this.translateY = translateY;\n        if (this.div) {\n            this.div.style.top = this.translateY * this.scale + 'px';\n        }\n        return this;\n    }\n\n    /**\n     * Returns a numeric value scaled by the current scale factor\n     */\n    public scaledValue(value: number) {\n        return value * this.scale;\n    }\n\n    /**\n     * Creates internal drawing model and layered elements, loads resources and calls callback\n     * @param callback - Completion event listener\n     */\n    public createModel(callback: (result: boolean | undefined) => void) {\n        const self = this;\n\n        // Create model and attach resource listeners\n        const model = Model.create(self.width, self.height);\n        self.model = model;\n        if (self.resourceListenerEvent.hasListeners()) {\n            self.resourceListenerEvent.listeners.forEach(listener => {\n                if (self.model) {\n                    self.model.resourceManager.listenerEvent.add(listener);\n                }\n            });\n        }\n\n        // Set color if defined\n        if (self.backgroundColor) {\n            model.setFill(self.backgroundColor);\n        }\n\n        // Add defined image resources\n        if (self.normalImageSource) {\n            BitmapResource.create(SurfaceElementStates.NORMAL, self.normalImageSource).addTo(model);\n            ImageElement.create(SurfaceElementStates.NORMAL, 0, 0, self.width, self.height).addTo(model);\n        }\n        if (self.selectedImageSource) {\n            BitmapResource.create(SurfaceElementStates.SELECTED, self.selectedImageSource).addTo(model);\n        }\n        if (self.highlightedImageSource) {\n            BitmapResource.create(SurfaceElementStates.HIGHLIGHTED, self.highlightedImageSource).addTo(model);\n        }\n        if (self.disabledImageSource) {\n            BitmapResource.create(SurfaceElementStates.DISABLED, self.disabledImageSource).addTo(model);\n        }\n\n        // Add base layer elements\n        for (const el of self.elements) {\n            el.surface = self;\n            el.addToModel(model);\n        }\n\n        // Add layered elements\n        for (const layer of self.layers) {\n            layer.surface = self;\n            layer.addToSurface(self);\n        }\n\n        // Set completion callback and load resources\n        if (callback) {\n            self.loaded.add(callback);\n        }\n        self.loadResources();\n    }\n\n    /**\n     * Loads all required resources and calls completion callback\n     */\n    public loadResources() {\n        const self = this;\n\n        // Find next unprepared layer\n        for (const layer of self.layers) {\n            if (!layer.isPrepared) {\n                layer.prepare(success => {\n                    self.loadResources();\n                });\n                return;\n            }\n        }\n\n        // Prepare resources and return model\n        if (self.model) {\n            self.model.prepareResources(undefined, success => {\n                if (success) {\n                    self.loaded.trigger(true);\n                }\n                else {\n                    self.onErrorInternal(ErrorMessages.ResourcesFailedToLoad);\n                    self.loaded.trigger(false);\n                }\n            });\n        }\n    }\n\n    /**\n     * Internal error handling/logging method\n     * @param {string} message - Error message\n     */\n    public onErrorInternal(message: string) {\n        this.error.trigger(message);\n    }\n\n    /**\n     * Simulates a button click\n     */\n    public clickButton(buttonId: string) {\n        const button = this.elementWithId(buttonId) as SurfaceButtonElement;\n        if (button) {\n            button.onClicked();\n        }\n    }\n\n    public startVideos() {\n        this.layers.forEach(layer => {\n            if (layer instanceof SurfaceVideoLayer) {\n                if (layer.autoPlay && layer.element) {\n                    layer.element.play();\n                }\n            }\n        });\n    }\n\n    /**\n     * Registers a resource listener\n     * @param {function} listener - Resource listener function (rm: ResourceManager, state: ResourceState)\n     */\n    public addResourceListener(listener: (rm: ResourceManager, state: ResourceState | undefined) => void) {\n        this.resourceListenerEvent.add(listener);\n        if (this.model) {\n            this.model.resourceManager.listenerEvent.add(listener);\n        }\n    }\n}\n","import { ElementCommandHandler } from '../command/element-command-handler';\nimport { IController } from '../controller/controller';\nimport { CommonEvent } from '../core/common-event';\nimport { ErrorMessages } from '../core/error-messages';\nimport { Model } from '../core/model';\nimport { ElementBase } from '../elements/element-base';\nimport { SpriteElement } from '../elements/sprite-element';\nimport { SpriteFrame } from '../elements/sprite-frame';\nimport { BitmapResource } from '../resource/bitmap-resource';\nimport { ResourceManager } from '../resource/resource-manager';\nimport { ResourceState } from '../resource/resource-state';\nimport { TransitionRenderer } from '../transitions/transitions';\nimport { Surface } from './surface';\nimport { SurfaceAnimationFrame } from './surface-animation-frame';\nimport { SurfaceAnimationViewController } from './surface-animation-view-controller';\nimport { SurfaceLayer } from './surface-layer';\n\n/**\n * Renders timed image frames with optional transitions\n */\nexport class SurfaceAnimationLayer extends SurfaceLayer {\n    public static ANIMATION_CLICK = 'animationClick';\n    public static ANIMATION_ADVANCE = 'animationAdvance';\n\n    /**\n     * Renders timed image frames with optional transitions\n     * @param id - Animation id\n     * @param left - Layout area x coordinate\n     * @param top - Layout area y coordinate\n     * @param width - Layout area width\n     * @param height - Layout area height\n     * @param loop - Loop animation\n     * @param clickListener - Click event listener\n     * @param initialIndex - Initial frame index\n     * @param frameAdvancedListener - Frame advance event listener\n     */\n    public static create(\n        id: string,\n        left: number,\n        top: number,\n        width: number,\n        height: number,\n        loop: boolean,\n        clickListener: (animation: SurfaceAnimationLayer | undefined) => void,\n        initialIndex: number,\n        frameAdvancedListener: (animation: SurfaceAnimationLayer | undefined) => void\n    ) {\n        const animation = new SurfaceAnimationLayer(\n            id,\n            left,\n            top,\n            width,\n            height,\n            loop,\n            clickListener,\n            initialIndex,\n            frameAdvancedListener\n        );\n        return animation;\n    }\n\n    /**\n     * Starting animation frame\n     */\n    public initialIndex: number;\n\n    /**\n     * If true, loop animation\n     */\n    public loop: boolean;\n\n    /**\n     * Clicked event\n     */\n    public clicked: CommonEvent<SurfaceAnimationLayer> = new CommonEvent<SurfaceAnimationLayer>();\n\n    /**\n     * Frame advance event\n     */\n    public frameAdvanced: CommonEvent<SurfaceAnimationLayer> = new CommonEvent<SurfaceAnimationLayer>();\n\n    /**\n     * Animation frame array\n     */\n    public frames: SurfaceAnimationFrame[] = [];\n\n    /**\n     * Current frame index\n     */\n    public frameIndex: number;\n\n    /**\n     * True when paused\n     */\n    public isPaused: boolean;\n\n    /**\n     * True when stopped\n     */\n    public isStopped: boolean;\n\n    /**\n     * If true, remember frame index\n     */\n    public rememberFrame: boolean;\n\n    /**\n     * Animation drawing model\n     */\n    public model?: Model;\n\n    /**\n     * Animation view controller\n     */\n    public controller?: SurfaceAnimationViewController;\n\n    /**\n     * Animation host canvas element\n     */\n    public element?: HTMLCanvasElement;\n\n    /**\n     * Animation sprite element\n     */\n    public sprite?: SpriteElement;\n\n    /**\n     * @param id - Animation id\n     * @param left - Layout area x coordinate\n     * @param top - Layout area y coordinate\n     * @param width - Layout area width\n     * @param height - Layout area height\n     * @param loop - Loop animation\n     * @param clickListener - Click event listener\n     * @param initialIndex - Initial frame index\n     * @param frameAdvancedListener - Frame advance event listener\n     */\n    constructor(\n        id: string,\n        left: number,\n        top: number,\n        width: number,\n        height: number,\n        loop: boolean,\n        clickListener: (animation: SurfaceAnimationLayer | undefined) => void,\n        initialIndex: number,\n        frameAdvancedListener: (animation: SurfaceAnimationLayer | undefined) => void\n    ) {\n        super(id, left, top, width, height);\n        this.addFrame = this.addFrame.bind(this);\n        this.setResourceListener = this.setResourceListener.bind(this);\n        this.pause = this.pause.bind(this);\n        this.onAnimationClick = this.onAnimationClick.bind(this);\n        this.onAnimationAdvance = this.onAnimationAdvance.bind(this);\n\n        this.frameIndex = 0;\n        this.isPaused = false;\n        this.isStopped = false;\n        this.rememberFrame = false;\n        this.loop = loop;\n        if (clickListener) {\n            this.clicked.add(clickListener);\n        }\n        this.initialIndex = initialIndex;\n        if (frameAdvancedListener) {\n            this.frameAdvanced.add(frameAdvancedListener);\n        }\n    }\n\n    /**\n     * Adds an animation frame\n     * @param id - Animation frame id\n     * @param source - Animation frame bitmap source\n     * @param left - Source bitmap crop x coordinate\n     * @param top - Source bitmap crop y coordinate\n     * @param width - Source bitmap crop width\n     * @param height - Source bitmap crop height\n     * @param duration - Frame duration in seconds\n     * @param transition - Frame \"to\" transition\n     * @param transitionDuration - Transition duration in seconds\n     * @param pauseFrame - Pause frame until tapped\n     * @returns New animation frame\n     */\n    public addFrame(\n        id: string,\n        source: string,\n        left: number,\n        top: number,\n        width: number,\n        height: number,\n        duration: number,\n        transition: string,\n        transitionDuration: number,\n        pauseFrame: boolean\n    ) {\n        const frame = new SurfaceAnimationFrame(\n            id,\n            left,\n            top,\n            width,\n            height,\n            source,\n            duration,\n            transition,\n            transitionDuration,\n            pauseFrame\n        );\n        this.frames.push(frame);\n        return frame;\n    }\n\n    /**\n     * Registers a resource listener\n     * @param listener - Animation resource listener (rm: Elise.ResourceManager, state: Elise.ResourceState)\n     */\n    public setResourceListener(listener: (rm: ResourceManager, state: ResourceState | undefined) => void) {\n        if (this.model) {\n            this.model.resourceManager.listenerEvent.add(listener);\n        }\n    }\n\n    /**\n     * Adds animation to parent surface\n     */\n    public addToSurface(surface: Surface) {\n        this.surface = surface;\n\n        // If no frames, throw error\n        if (this.frames.length < 1) {\n            throw new Error(ErrorMessages.NoAnimationFramesAreDefined);\n        }\n\n        // Create model\n        const model = Model.create(this.width, this.height);\n        this.model = model;\n        if (surface.resourceListenerEvent.hasListeners()) {\n            surface.resourceListenerEvent.listeners.forEach(listener => {\n                model.resourceManager.listenerEvent.add(listener);\n            });\n        }\n\n        // Create bitmap resources for animation frames\n        const registered = [];\n        for (const frame of this.frames) {\n            const source = frame.source;\n            let found = false;\n            for (const item of registered) {\n                if (item.toLowerCase() === source.toLowerCase()) {\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                const key = registered.length.toString();\n                BitmapResource.create(key, frame.source).addTo(model);\n                registered.push(frame.source);\n            }\n        }\n\n        // Create sprite element\n        const sprite = SpriteElement.create(0, 0, this.width, this.height);\n        sprite.id = this.id;\n        sprite.loop = this.loop;\n        sprite.timer = TransitionRenderer.SPRITE_TRANSITION;\n        sprite.click = SurfaceAnimationLayer.ANIMATION_CLICK;\n        sprite.onAdvance = SurfaceAnimationLayer.ANIMATION_ADVANCE;\n        sprite.frames = [];\n        sprite.setInteractive(true);\n\n        // Add frames\n        for (const frame of this.frames) {\n            let key = '';\n            for (let j = 0; j < registered.length; j++) {\n                if (registered[j].toLowerCase() === frame.source.toLowerCase()) {\n                    key = j.toString();\n                    break;\n                }\n            }\n            sprite.frames.push(\n                SpriteFrame.create(\n                    key,\n                    frame.left,\n                    frame.top,\n                    frame.width,\n                    frame.height,\n                    frame.duration,\n                    frame.transition,\n                    frame.transitionDuration\n                )\n            );\n        }\n\n        // Set non-default initial frame\n        if (this.initialIndex) {\n            sprite.frameIndex = this.initialIndex;\n        }\n\n        // Add sprite to model\n        model.add(sprite);\n\n        const controller = new SurfaceAnimationViewController();\n        this.controller = controller;\n        this.controller.surface = this.surface;\n        controller.animation = this;\n        controller.setScale(surface.scale);\n        controller.setModel(this.model);\n        const canvas = controller.getCanvas();\n        canvas.setAttribute('id', this.id + '_canvas');\n        canvas.style.position = 'absolute';\n        canvas.style.left = this.translateX + this.left * surface.scale + 'px';\n        canvas.style.top = this.translateY + this.top * surface.scale + 'px';\n        canvas.style.opacity = (this.surface.opacity * this.opacity).toString();\n        this.element = canvas;\n        this.sprite = sprite;\n    }\n\n    /**\n     * Loads required resource and calls completion callback\n     * @param callback - Completion callback (success: boolean)\n     */\n    public prepare(callback: (result: boolean) => void) {\n        const self = this;\n\n        // let parentElement = document.getElementById(self.surface.hostDivId);\n        // parentElement.appendChild(self.element);\n        if (!self.element) {\n            throw new Error(ErrorMessages.ElementUndefined);\n        }\n        if (!self.controller) {\n            throw new Error(ErrorMessages.ControllerIsUndefined);\n        }\n        if (!self.surface) {\n            throw new Error(ErrorMessages.SurfaceIsUndefined);\n        }\n        if (!self.surface.div) {\n            throw new Error(ErrorMessages.SurfaceDivIsUndefined);\n        }\n        self.surface.div.appendChild(self.element);\n\n        // self.controller.surface = self.surface;\n        const elementCommandHandler = new ElementCommandHandler();\n        elementCommandHandler.attachController(self.controller);\n        elementCommandHandler.addHandler(\n            TransitionRenderer.SPRITE_TRANSITION,\n            TransitionRenderer.spriteTransitionHandler\n        );\n        elementCommandHandler.addHandler(\n            SurfaceAnimationLayer.ANIMATION_CLICK,\n            (controller: IController, element: ElementBase, command: string, trigger: string, parameters: any) => {\n                const animationController = controller as SurfaceAnimationViewController;\n                const animation = animationController.animation;\n                if (animation) {\n                    animation.onAnimationClick();\n                }\n            }\n        );\n        elementCommandHandler.addHandler(\n            SurfaceAnimationLayer.ANIMATION_ADVANCE,\n            (controller: IController, element: ElementBase, command: string, trigger: string, parameters: any) => {\n                const animationController = controller as SurfaceAnimationViewController;\n                const animation = animationController.animation;\n                if (animation && animation.sprite) {\n                    animation.frameIndex = animation.sprite.frameIndex;\n                    animation.onAnimationAdvance();\n                }\n            }\n        );\n        if (self.model) {\n            self.model.prepareResources(undefined, success => {\n                if (success) {\n                    self.isPrepared = true;\n                    if (self.controller) {\n                        self.controller.draw();\n                    }\n                    if (callback) {\n                        callback(true);\n                    }\n                }\n                else {\n                    if (self.surface) {\n                        self.surface.onErrorInternal(ErrorMessages.ResourcesFailedToLoad);\n                    }\n                    if (callback) {\n                        callback(false);\n                    }\n                }\n            });\n        }\n    }\n\n    /**\n     * Unloads animation and destroys visual elements\n     */\n    public destroy() {\n        if (this.controller) {\n            this.controller.detach();\n        }\n        if (this.element) {\n            this.element = undefined;\n        }\n        this.surface = undefined;\n    }\n\n    /**\n     * Pauses animation\n     */\n    public pause() {\n        if (!this.controller || !this.sprite) {\n            return;\n        }\n        if (this.isPaused) {\n            this.controller.resumeTimer();\n            this.isPaused = false;\n        }\n        else {\n            // Only pause if not transitioning\n            const spriteState = this.sprite.getStateForTime(this.controller.elapsedTime());\n            if (!spriteState || !spriteState.transition) {\n                this.controller.pauseTimer();\n                this.isPaused = true;\n            }\n        }\n    }\n\n    /**\n     * Onload initialization\n     */\n    public onload() {\n        if (this.controller && this.sprite) {\n            // If initial frame is specified, set starting time in the past\n            // by an offset equal to the starting time for the frame\n            if (this.initialIndex) {\n                const startTime = this.sprite.getTimeForFrame(this.initialIndex);\n                if (startTime) {\n                    this.controller.startTimer(-startTime);\n                }\n                else {\n                    this.controller.startTimer(0);\n                }\n            }\n            else {\n                this.controller.startTimer(0);\n            }\n        }\n    }\n\n    /**\n     * Onunload teardown\n     */\n    public onunload() {\n        if (this.controller) {\n            this.controller.stopTimer();\n        }\n    }\n\n    /**\n     * Sets rendering scale\n     */\n    public setScale(scale: number) {\n        if (this.controller) {\n            this.controller.setScale(scale);\n        }\n        if (!this.element) {\n            throw new Error(ErrorMessages.ElementUndefined);\n        }\n        const layer = this.element as HTMLCanvasElement;\n        layer.style.left = this.translateX + this.left * scale + 'px';\n        layer.style.top = this.translateY + this.top * scale + 'px';\n        layer.style.width = this.width * scale + 'px';\n        layer.style.height = this.height * scale + 'px';\n        return this;\n    }\n\n    /**\n     * Sets rendering opacity\n     */\n    public setOpacity(opacity: number) {\n        this.opacity = opacity;\n        if (this.element && this.surface) {\n            this.element.style.opacity = (this.surface.opacity * this.opacity).toString();\n        }\n        return this;\n    }\n\n    /**\n     * Sets X translation\n     */\n    public setTranslateX(translateX: number) {\n        this.translateX = translateX;\n        if (this.element && this.surface) {\n            this.element.style.left = (this.translateX + this.left) * this.surface.scale + 'px';\n        }\n        return this;\n    }\n\n    /**\n     * Sets Y translation\n     */\n    public setTranslateY(translateY: number) {\n        this.translateY = translateY;\n        if (this.element && this.surface) {\n            this.element.style.top = (this.translateY + this.top) * this.surface.scale + 'px';\n        }\n        return this;\n    }\n\n    public onAnimationClick() {\n        this.clicked.trigger(this);\n    }\n\n    public onAnimationAdvance() {\n        this.frameAdvanced.trigger(this);\n    }\n\n    public addTo(surface: Surface) {\n        surface.layers.push(this);\n        return this;\n    }\n}\n","import { CommonEvent } from '../core/common-event';\nimport { Surface } from './surface';\nimport { SurfaceLayer } from './surface-layer';\n\n/**\n * Hidden surface layer\n * Renders a transparent HTML div element for capturing click event\n */\nexport class SurfaceHiddenLayer extends SurfaceLayer {\n    /**\n     * Creates a hidden div layer\n     * @param id - Hidden layer id\n     * @param left - Layout area x coordinate\n     * @param top - Layout area y coordinate\n     * @param width - Layout area width\n     * @param height - Layout area height\n     * @param source - Image source URL\n     * @param clickListener - Click event listener\n     * @returns New hidden layer\n     */\n    public static create(\n        id: string,\n        left: number,\n        top: number,\n        width: number,\n        height: number,\n        clickListener: (hiddenLayer: SurfaceHiddenLayer | undefined) => void\n    ) {\n        const layer = new SurfaceHiddenLayer(id, left, top, width, height, clickListener);\n        return layer;\n    }\n\n    /**\n     * Clicked event\n     */\n    public clicked: CommonEvent<SurfaceHiddenLayer> = new CommonEvent<SurfaceHiddenLayer>();\n\n    /**\n     * HTML div element\n     */\n    public element?: HTMLDivElement;\n\n    /**\n     * @param id - Layer id\n     * @param left - Layout area x coordinate\n     * @param top - Layout area y coordinate\n     * @param width - Layout area width\n     * @param height - Layout area height\n     * @param clickListener - Click event listener\n     */\n    constructor(\n        id: string,\n        left: number,\n        top: number,\n        width: number,\n        height: number,\n        clickListener: (hiddenLayer: SurfaceHiddenLayer | undefined) => void\n    ) {\n        super(id, left, top, width, height);\n        if (clickListener) {\n            this.clicked.add(clickListener);\n        }\n    }\n\n    /**\n     * Adds hidden layer to parent surface\n     * @param surface - Parent surface\n     */\n    public addToSurface(surface: Surface) {\n        this.surface = surface;\n\n        // Create div element\n        const hiddenLayer = document.createElement('div');\n        hiddenLayer.setAttribute('id', this.id + '_div');\n        hiddenLayer.style.position = 'absolute';\n        hiddenLayer.style.left = this.translateX + this.left * surface.scale + 'px';\n        hiddenLayer.style.top = this.translateY + this.top * surface.scale + 'px';\n        hiddenLayer.style.width = this.width * surface.scale + 'px';\n        hiddenLayer.style.height = this.height * surface.scale + 'px';\n        this.element = hiddenLayer;\n    }\n\n    /**\n     * Attaches click event handler\n     * @param callback - Completion callback (success: boolean)\n     */\n    public prepare(callback: (success: boolean) => void) {\n        const self = this;\n        if (self.element && self.surface && self.surface.div) {\n            self.surface.div.appendChild(self.element);\n            self.element.onclick = () => {\n                self.clicked.trigger(self);\n            };\n        }\n        self.isPrepared = true;\n        if (callback) {\n            callback(true);\n        }\n    }\n\n    /**\n     * Unloads div element\n     */\n    public destroy() {\n        if (this.element && this.element.parentElement) {\n            this.element.parentElement.removeChild(this.element);\n            this.element = undefined;\n        }\n        this.surface = undefined;\n    }\n\n    /**\n     * Sets rendering scale\n     */\n    public setScale(scale: number | undefined) {\n        if (!this.element || !scale) {\n            return this;\n        }\n        const layer = this.element as HTMLDivElement;\n        layer.style.left = this.translateX + this.left * scale + 'px';\n        layer.style.top = this.translateY + this.top * scale + 'px';\n        layer.style.width = this.width * scale + 'px';\n        layer.style.height = this.height * scale + 'px';\n        return this;\n    }\n\n    /**\n     * Sets X translation\n     */\n    public setTranslateX(translateX: number) {\n        this.translateX = translateX;\n        if (this.element && this.surface) {\n            this.element.style.left = (this.translateX + this.left) * this.surface.scale + 'px';\n        }\n        return this;\n    }\n\n    /**\n     * Sets Y translation\n     */\n    public setTranslateY(translateY: number) {\n        this.translateY = translateY;\n        if (this.element && this.surface) {\n            this.element.style.top = (this.translateY + this.top) * this.surface.scale + 'px';\n        }\n        return this;\n    }\n\n    public addTo(surface: Surface) {\n        surface.layers.push(this);\n        return this;\n    }\n\n    public onload() {}\n\n    public onunload() {}\n}\n","import { ErrorMessages } from '../core/error-messages';\nimport { Surface } from './surface';\nimport { SurfaceLayer } from './surface-layer';\n\n/**\n * Renders HTML content into an IFrame element\n */\nexport class SurfaceHtmlLayer extends SurfaceLayer {\n    /**\n     * Creates an HTML item\n     * @param id - Hidden layer id\n     * @param left - Layout area x coordinate\n     * @param top - Layout area y coordinate\n     * @param width - Layout area width\n     * @param height - Layout area height\n     * @param source - HTML source URL\n     * @returns New HTML layer\n     */\n    public static create(id: string, left: number, top: number, width: number, height: number, source: string) {\n        const layer = new SurfaceHtmlLayer(id, left, top, width, height, source);\n        return layer;\n    }\n\n    /**\n     * HTML IFrame source\n     */\n    public source: string;\n\n    /**\n     * HTML IFrame scrolling attribute\n     */\n    public scrolling: string;\n\n    /**\n     * If true HTML IFrame sandbox is enabled\n     */\n    public sandbox: boolean;\n\n    /**\n     * If true HTML IFrame contents is scaled to parent surface scale factor\n     */\n    public scaleContent: boolean;\n\n    /**\n     * Host HTML IFrame element\n     */\n    public element?: HTMLIFrameElement;\n\n    /**\n     * @param id - HTML layer id\n     * @param left - Layout area x coordinate\n     * @param top - Layout area y coordinate\n     * @param width - Layout area width\n     * @param height - Layout area height\n     * @param source - HTML source URL\n     */\n    constructor(id: string, left: number, top: number, width: number, height: number, source: string) {\n        super(id, left, top, width, height);\n        this.scrolling = 'auto';\n        this.sandbox = true;\n        this.source = source;\n        this.scaleContent = true;\n    }\n\n    /**\n     * Adds HTML layer to parent surface\n     * @param surface - Parent surface\n     */\n    public addToSurface(surface: Surface) {\n        this.surface = surface;\n\n        // If no source\n        if (!this.source) {\n            throw new Error(ErrorMessages.SourceUndefined);\n        }\n\n        // Create iFrame for content\n        const iframe = document.createElement('iframe');\n        iframe.setAttribute('id', this.id + '_iframe');\n        if (this.sandbox) {\n            iframe.setAttribute('sandbox', 'allow-forms allow-popups allow-same-origin allow-scripts');\n        }\n        iframe.style.position = 'absolute';\n        iframe.style.left = this.translateX + this.left * surface.scale + 'px';\n        iframe.style.top = this.translateY + this.top * surface.scale + 'px';\n        if (this.scaleContent) {\n            iframe.style.width = this.width + 'px';\n            iframe.style.height = this.height + 'px';\n        }\n        else {\n            iframe.style.width = this.width * surface.scale + 'px';\n            iframe.style.height = this.height * surface.scale + 'px';\n        }\n        iframe.style.border = '0px';\n\n        if (this.scaleContent) {\n            iframe.style.transform = 'scale(' + surface.scale + ')';\n            iframe.style.transformOrigin = '0 0';\n        }\n        iframe.style.opacity = (this.surface.opacity * this.opacity).toString();\n        iframe.scrolling = this.scrolling;\n        this.element = iframe;\n    }\n\n    /**\n     * Sets HTML source and adds element to DOM\n     * @param callback - Completion callback (success: boolean)\n     */\n    public prepare(callback: (success: boolean) => void) {\n        if (!this.element) {\n            throw new Error(ErrorMessages.ElementUndefined);\n        }\n        if (!this.surface) {\n            throw new Error(ErrorMessages.SurfaceIsUndefined);\n        }\n        if (!this.surface.div) {\n            throw new Error(ErrorMessages.SurfaceDivIsUndefined);\n        }\n        this.surface.div.appendChild(this.element);\n        this.element.src = this.source;\n        this.isPrepared = true;\n        if (callback) {\n            callback(true);\n        }\n    }\n\n    /**\n     * Unloads HTML layer and destroys visual elements\n     */\n    public destroy() {\n        if (this.element && this.element.parentElement) {\n            this.element.parentElement.removeChild(this.element);\n            this.element = undefined;\n        }\n        this.surface = undefined;\n    }\n\n    /**\n     * Onload initialization. Sets IFrame source\n     */\n    public onload() {\n        if (this.element) {\n            this.element.src = this.source;\n        }\n    }\n\n    /**\n     * Onunload teardown\n     */\n    public onunload() {\n        if (this.element) {\n            this.element.src = 'about:blank';\n        }\n    }\n\n    /**\n     * Sets rendering scale\n     */\n    public setScale(scale: number | undefined) {\n        if (!this.element || !scale) {\n            return this;\n        }\n        const iframe = this.element as HTMLIFrameElement;\n        iframe.style.left = this.translateX + this.left * scale + 'px';\n        iframe.style.top = this.translateY + this.top * scale + 'px';\n        if (this.scaleContent) {\n            iframe.style.width = this.width + 'px';\n            iframe.style.height = this.height + 'px';\n        }\n        else {\n            iframe.style.width = this.width * scale + 'px';\n            iframe.style.height = this.height * scale + 'px';\n        }\n        iframe.style.border = '0px';\n\n        if (this.scaleContent) {\n            iframe.style.transform = 'scale(' + scale + ')';\n            iframe.style.transformOrigin = '0 0';\n        }\n        return this;\n    }\n\n    /**\n     * Sets rendering opacity\n     */\n    public setOpacity(opacity: number) {\n        this.opacity = opacity;\n        if (this.element && this.surface) {\n            this.element.style.opacity = (this.surface.opacity * this.opacity).toString();\n        }\n        return this;\n    }\n\n    /**\n     * Sets X translation\n     */\n    public setTranslateX(translateX: number) {\n        this.translateX = translateX;\n        if (this.element && this.surface) {\n            this.element.style.left = (this.translateX + this.left) * this.surface.scale + 'px';\n        }\n        return this;\n    }\n\n    /**\n     * Sets Y translation\n     */\n    public setTranslateY(translateY: number) {\n        this.translateY = translateY;\n        if (this.element && this.surface) {\n            this.element.style.top = (this.translateY + this.top) * this.surface.scale + 'px';\n        }\n        return this;\n    }\n\n    public addTo(surface: Surface) {\n        surface.layers.push(this);\n        return this;\n    }\n}\n","import { CommonEvent } from '../core/common-event';\nimport { ErrorMessages } from '../core/error-messages';\nimport { Surface } from './surface';\nimport { SurfaceLayer } from './surface-layer';\n\n/**\n * Renders a bitmap image into an HTML image element\n */\nexport class SurfaceImageLayer extends SurfaceLayer {\n    /**\n     * Creates an image layer\n     * @param id - Image id\n     * @param left - Layout area x coordinate\n     * @param top - Layout area y coordinate\n     * @param width - Layout area width\n     * @param height - Layout area height\n     * @param source - Image source URL\n     * @param clickListener - Click event listener\n     * @returns New image layer\n     */\n    public static create(\n        id: string,\n        left: number,\n        top: number,\n        width: number,\n        height: number,\n        source: string,\n        clickListener: (image: SurfaceImageLayer | undefined) => void\n    ) {\n        const layer = new SurfaceImageLayer(id, left, top, width, height, source, clickListener);\n        return layer;\n    }\n\n    /**\n     * Image source\n     */\n    public source: string;\n\n    /**\n     * Clicked event\n     */\n    public clicked: CommonEvent<SurfaceImageLayer> = new CommonEvent<SurfaceImageLayer>();\n\n    /**\n     * HTML image element\n     */\n    public element?: HTMLImageElement;\n\n    /**\n     * @param id - Image layer id\n     * @param left - Layout area x coordinate\n     * @param top - Layout area y coordinate\n     * @param width - Layout area width\n     * @param height - Layout area height\n     * @param source - Image source URL\n     * @param clickListener - Click event listener\n     */\n    constructor(\n        id: string,\n        left: number,\n        top: number,\n        width: number,\n        height: number,\n        source: string,\n        clickListener: (image: SurfaceImageLayer | undefined) => void\n    ) {\n        super(id, left, top, width, height);\n        this.source = source;\n        if (clickListener) {\n            this.clicked.add(clickListener);\n        }\n    }\n\n    /**\n     * Adds image layer to parent surface\n     * @param surface - Parent surface\n     */\n    public addToSurface(surface: Surface) {\n        this.surface = surface;\n\n        // If no source\n        if (!this.source) {\n            throw new Error(ErrorMessages.SourceUndefined);\n        }\n\n        // Create Image element\n        const imageLayer = document.createElement('img');\n        imageLayer.setAttribute('id', this.id + '_image');\n        imageLayer.style.position = 'absolute';\n        imageLayer.style.left = this.translateX + this.left * surface.scale + 'px';\n        imageLayer.style.top = this.translateY + this.top * surface.scale + 'px';\n        imageLayer.style.width = this.width * surface.scale + 'px';\n        imageLayer.style.height = this.height * surface.scale + 'px';\n        imageLayer.style.opacity = (this.surface.opacity * this.opacity).toString();\n        this.element = imageLayer;\n    }\n\n    /**\n     * Sets image source and attaches click event handler\n     * @param callback - Completion callback (success: boolean)\n     */\n    public prepare(callback: (success: boolean) => void) {\n        const self = this;\n        if (!self.element) {\n            throw new Error(ErrorMessages.ElementUndefined);\n        }\n        if (!self.surface) {\n            throw new Error(ErrorMessages.SurfaceIsUndefined);\n        }\n        if (!self.surface.div) {\n            throw new Error(ErrorMessages.SurfaceDivIsUndefined);\n        }\n        const imageLayer = self.element;\n        self.surface.div.appendChild(self.element);\n        self.element.src = self.source;\n        imageLayer.onclick = () => {\n            self.clicked.trigger(self);\n        };\n        self.isPrepared = true;\n        if (callback) {\n            callback(true);\n        }\n    }\n\n    /**\n     * Unloads image layer and destroys visual elements\n     */\n    public destroy() {\n        if (this.element && this.element.parentElement) {\n            this.element.parentElement.removeChild(this.element);\n            this.element = undefined;\n        }\n        this.surface = undefined;\n    }\n\n    /**\n     * Sets rendering scale\n     */\n    public setScale(scale: number | undefined) {\n        if (!this.element || !scale) {\n            return this;\n        }\n        const layer = this.element as HTMLImageElement;\n        layer.style.left = this.translateX + this.left * scale + 'px';\n        layer.style.top = this.translateY + this.top * scale + 'px';\n        layer.style.width = this.width * scale + 'px';\n        layer.style.height = this.height * scale + 'px';\n        return this;\n    }\n\n    /**\n     * Sets rendering opacity\n     */\n    public setOpacity(opacity: number) {\n        this.opacity = opacity;\n        if (this.element && this.surface) {\n            this.element.style.opacity = (this.surface.opacity * this.opacity).toString();\n        }\n        return this;\n    }\n\n    /**\n     * Sets X translation\n     */\n    public setTranslateX(translateX: number) {\n        this.translateX = translateX;\n        if (this.element && this.surface) {\n            this.element.style.left = (this.translateX + this.left) * this.surface.scale + 'px';\n        }\n        return this;\n    }\n\n    /**\n     * Sets Y translation\n     */\n    public setTranslateY(translateY: number) {\n        this.translateY = translateY;\n        if (this.element && this.surface) {\n            this.element.style.top = (this.translateY + this.top) * this.surface.scale + 'px';\n        }\n        return this;\n    }\n\n    public addTo(surface: Surface) {\n        surface.layers.push(this);\n        return this;\n    }\n\n    public onload(): void {}\n\n    public onunload(): void {}\n}\n","import { ErrorMessages } from '../core/error-messages';\nimport { Utility } from '../core/utility';\nimport { PaneTransitionDirection } from './pane-transitions/pane-transition-direction';\nimport { PaneTransitionFade } from './pane-transitions/pane-transition-fade';\nimport { PaneTransitionNone } from './pane-transitions/pane-transition-none';\nimport { PaneTransitionPush } from './pane-transitions/pane-transition-push';\nimport { PaneTransitionReveal } from './pane-transitions/pane-transition-reveal';\nimport { PaneTransitionSlide } from './pane-transitions/pane-transition-slide';\nimport { PaneTransitionWipe } from './pane-transitions/pane-transition-wipe';\nimport { Surface } from './surface';\nimport { SurfaceLayer } from './surface-layer';\n\n/**\n * Hosts a child surface in a parent surface layer\n */\nexport class SurfacePane extends SurfaceLayer {\n    /**\n     * Creates a surface pane layer\n     * @param id - Pane layer id\n     * @param left - Layout area x coordinate\n     * @param top - Layout area y coordinate\n     * @param width - Layout area width\n     * @param height - Layout area height\n     * @param surface - Pane surface\n     * @returns New HTML layer\n     */\n    public static create(id: string, left: number, top: number, width: number, height: number, surface: Surface) {\n        const layer = new SurfacePane(id, left, top, width, height, surface);\n        return layer;\n    }\n\n    /**\n     * Hosted pane surface\n     */\n    public childSurface: Surface;\n\n    /**\n     * Host HTML div element\n     */\n    public element?: HTMLDivElement;\n\n    /**\n     * @param id - Pane id\n     * @param left - Layout area x coordinate\n     * @param top - Layout area y coordinate\n     * @param width - Layout area width\n     * @param height - Layout area height\n     * @param childSurface - Hosted child surface\n     */\n    constructor(id: string, left: number, top: number, width: number, height: number, childSurface: Surface) {\n        super(id, left, top, width, height);\n        this.replaceSurface = this.replaceSurface.bind(this);\n        this.setHostDivScrolling = this.setHostDivScrolling.bind(this);\n        this.childSurface = childSurface;\n        this.childSurface.isChild = true;\n    }\n\n    // tslint:disable-next-line:no-empty\n    public onload(): void {}\n\n    // tslint:disable-next-line:no-empty\n    public onunload(): void {}\n\n    /**\n     * Adds pane to parent surface\n     */\n    public addToSurface(surface: Surface) {\n        this.surface = surface;\n\n        // If no child surface, throw error\n        if (!this.childSurface) {\n            throw new Error(ErrorMessages.SurfaceDivIsUndefined);\n        }\n\n        // Create div to host child surface\n        const hostDiv = document.createElement('div');\n        const id = Utility.guid() + '_div';\n        hostDiv.setAttribute('id', id);\n        hostDiv.style.position = 'absolute';\n        hostDiv.style.left = this.translateX + this.left * surface.scale + 'px';\n        hostDiv.style.top = this.translateY + this.top * surface.scale + 'px';\n        hostDiv.style.width = this.width * surface.scale + 'px';\n        hostDiv.style.height = this.height * surface.scale + 'px';\n        hostDiv.style.opacity = (this.surface.opacity * this.opacity).toString();\n        this.childSurface.scale = this.surface.scale;\n        this.element = hostDiv;\n        this.setHostDivScrolling();\n    }\n\n    /**\n     * Prepares child surface resources and call completion callback\n     */\n    public prepare(callback: (success: boolean) => void) {\n        const self = this;\n        if (!self.element) {\n            throw new Error(ErrorMessages.ElementUndefined);\n        }\n        if (!self.surface) {\n            throw new Error(ErrorMessages.SurfaceIsUndefined);\n        }\n        if (!self.surface.div) {\n            throw new Error(ErrorMessages.SurfaceDivIsUndefined);\n        }\n        self.surface.div.appendChild(self.element);\n        if (self.surface.resourceListenerEvent.hasListeners()) {\n            self.surface.resourceListenerEvent.listeners.forEach(listener => {\n                self.childSurface.resourceListenerEvent.add(listener);\n            });\n        }\n        self.childSurface.bind(\n            self.element,\n            surface => {\n                self.isPrepared = true;\n                callback(true);\n            },\n            false\n        );\n    }\n\n    public setHostDivScrolling() {\n        const self = this;\n        if (!self.element) {\n            return;\n        }\n        const hostDiv = self.element;\n        if (self.childSurface.width > self.width) {\n            hostDiv.style.overflowX = 'scroll';\n        }\n        else {\n            hostDiv.style.overflowX = 'hidden';\n        }\n        if (self.childSurface.height > self.height) {\n            hostDiv.style.overflowY = 'scroll';\n        }\n        else {\n            hostDiv.style.overflowY = 'hidden';\n        }\n    }\n\n    /**\n     * Swaps existing child surface with a new child surface, prepares its resources\n     * and calls completion callback\n     * @param newChild - New child surface\n     * @param callback - Callback (pane: Pane)\n     */\n    public replaceSurface(\n        newChild: Surface,\n        callback: (pane: SurfacePane) => void,\n        transition?: string,\n        duration?: number\n    ) {\n        if (transition !== undefined && duration !== undefined) {\n            switch (transition.toLowerCase()) {\n                case 'fade':\n                    {\n                        const t = new PaneTransitionFade(this, newChild, callback, duration);\n                        t.start();\n                    }\n                    break;\n\n                case 'pushleft':\n                    {\n                        const t = new PaneTransitionPush(\n                            this,\n                            newChild,\n                            callback,\n                            duration,\n                            PaneTransitionDirection.Left\n                        );\n                        t.start();\n                    }\n                    break;\n\n                case 'pushright':\n                    {\n                        const t = new PaneTransitionPush(\n                            this,\n                            newChild,\n                            callback,\n                            duration,\n                            PaneTransitionDirection.Right\n                        );\n                        t.start();\n                    }\n                    break;\n\n                case 'pushup':\n                    {\n                        const t = new PaneTransitionPush(\n                            this,\n                            newChild,\n                            callback,\n                            duration,\n                            PaneTransitionDirection.Up\n                        );\n                        t.start();\n                    }\n                    break;\n\n                case 'pushdown':\n                    {\n                        const t = new PaneTransitionPush(\n                            this,\n                            newChild,\n                            callback,\n                            duration,\n                            PaneTransitionDirection.Down\n                        );\n                        t.start();\n                    }\n                    break;\n\n                case 'wipeleft':\n                    {\n                        const t = new PaneTransitionWipe(\n                            this,\n                            newChild,\n                            callback,\n                            duration,\n                            PaneTransitionDirection.Left\n                        );\n                        t.start();\n                    }\n                    break;\n\n                case 'wipeleftup':\n                    {\n                        const t = new PaneTransitionWipe(\n                            this,\n                            newChild,\n                            callback,\n                            duration,\n                            PaneTransitionDirection.LeftUp\n                        );\n                        t.start();\n                    }\n                    break;\n\n                case 'wipeleftdown':\n                    {\n                        const t = new PaneTransitionWipe(\n                            this,\n                            newChild,\n                            callback,\n                            duration,\n                            PaneTransitionDirection.LeftDown\n                        );\n                        t.start();\n                    }\n                    break;\n\n                case 'wiperight':\n                    {\n                        const t = new PaneTransitionWipe(\n                            this,\n                            newChild,\n                            callback,\n                            duration,\n                            PaneTransitionDirection.Right\n                        );\n                        t.start();\n                    }\n                    break;\n\n                case 'wiperightup':\n                    {\n                        const t = new PaneTransitionWipe(\n                            this,\n                            newChild,\n                            callback,\n                            duration,\n                            PaneTransitionDirection.RightUp\n                        );\n                        t.start();\n                    }\n                    break;\n\n                case 'wiperightdown':\n                    {\n                        const t = new PaneTransitionWipe(\n                            this,\n                            newChild,\n                            callback,\n                            duration,\n                            PaneTransitionDirection.RightDown\n                        );\n                        t.start();\n                    }\n                    break;\n\n                case 'wipeup':\n                    {\n                        const t = new PaneTransitionWipe(\n                            this,\n                            newChild,\n                            callback,\n                            duration,\n                            PaneTransitionDirection.Up\n                        );\n                        t.start();\n                    }\n                    break;\n\n                case 'wipedown':\n                    {\n                        const t = new PaneTransitionWipe(\n                            this,\n                            newChild,\n                            callback,\n                            duration,\n                            PaneTransitionDirection.Down\n                        );\n                        t.start();\n                    }\n                    break;\n\n                case 'wipein':\n                    {\n                        const t = new PaneTransitionWipe(\n                            this,\n                            newChild,\n                            callback,\n                            duration,\n                            PaneTransitionDirection.In\n                        );\n                        t.start();\n                    }\n                    break;\n\n                case 'wipeinx':\n                    {\n                        const t = new PaneTransitionWipe(\n                            this,\n                            newChild,\n                            callback,\n                            duration,\n                            PaneTransitionDirection.InX\n                        );\n                        t.start();\n                    }\n                    break;\n\n                case 'wipeiny':\n                    {\n                        const t = new PaneTransitionWipe(\n                            this,\n                            newChild,\n                            callback,\n                            duration,\n                            PaneTransitionDirection.InY\n                        );\n                        t.start();\n                    }\n                    break;\n\n                case 'wipeout':\n                    {\n                        const t = new PaneTransitionWipe(\n                            this,\n                            newChild,\n                            callback,\n                            duration,\n                            PaneTransitionDirection.Out\n                        );\n                        t.start();\n                    }\n                    break;\n\n                case 'wipeoutx':\n                    {\n                        const t = new PaneTransitionWipe(\n                            this,\n                            newChild,\n                            callback,\n                            duration,\n                            PaneTransitionDirection.OutX\n                        );\n                        t.start();\n                    }\n                    break;\n\n                case 'wipeouty':\n                    {\n                        const t = new PaneTransitionWipe(\n                            this,\n                            newChild,\n                            callback,\n                            duration,\n                            PaneTransitionDirection.OutY\n                        );\n                        t.start();\n                    }\n                    break;\n\n                case 'revealleft':\n                    {\n                        const t = new PaneTransitionReveal(\n                            this,\n                            newChild,\n                            callback,\n                            duration,\n                            PaneTransitionDirection.Left\n                        );\n                        t.start();\n                    }\n                    break;\n\n                case 'revealleftup':\n                    {\n                        const t = new PaneTransitionReveal(\n                            this,\n                            newChild,\n                            callback,\n                            duration,\n                            PaneTransitionDirection.LeftUp\n                        );\n                        t.start();\n                    }\n                    break;\n\n                case 'revealleftdown':\n                    {\n                        const t = new PaneTransitionReveal(\n                            this,\n                            newChild,\n                            callback,\n                            duration,\n                            PaneTransitionDirection.LeftDown\n                        );\n                        t.start();\n                    }\n                    break;\n\n                case 'revealright':\n                    {\n                        const t = new PaneTransitionReveal(\n                            this,\n                            newChild,\n                            callback,\n                            duration,\n                            PaneTransitionDirection.Right\n                        );\n                        t.start();\n                    }\n                    break;\n\n                case 'revealrightup':\n                    {\n                        const t = new PaneTransitionReveal(\n                            this,\n                            newChild,\n                            callback,\n                            duration,\n                            PaneTransitionDirection.RightUp\n                        );\n                        t.start();\n                    }\n                    break;\n\n                case 'revealrightdown':\n                    {\n                        const t = new PaneTransitionReveal(\n                            this,\n                            newChild,\n                            callback,\n                            duration,\n                            PaneTransitionDirection.RightDown\n                        );\n                        t.start();\n                    }\n                    break;\n\n                case 'revealup':\n                    {\n                        const t = new PaneTransitionReveal(\n                            this,\n                            newChild,\n                            callback,\n                            duration,\n                            PaneTransitionDirection.Up\n                        );\n                        t.start();\n                    }\n                    break;\n\n                case 'revealdown':\n                    {\n                        const t = new PaneTransitionReveal(\n                            this,\n                            newChild,\n                            callback,\n                            duration,\n                            PaneTransitionDirection.Down\n                        );\n                        t.start();\n                    }\n                    break;\n\n                case 'slideleft':\n                    {\n                        const t = new PaneTransitionSlide(\n                            this,\n                            newChild,\n                            callback,\n                            duration,\n                            PaneTransitionDirection.Left\n                        );\n                        t.start();\n                    }\n                    break;\n\n                case 'slideleftup':\n                    {\n                        const t = new PaneTransitionSlide(\n                            this,\n                            newChild,\n                            callback,\n                            duration,\n                            PaneTransitionDirection.LeftUp\n                        );\n                        t.start();\n                    }\n                    break;\n\n                case 'slideleftdown':\n                    {\n                        const t = new PaneTransitionSlide(\n                            this,\n                            newChild,\n                            callback,\n                            duration,\n                            PaneTransitionDirection.LeftDown\n                        );\n                        t.start();\n                    }\n                    break;\n\n                case 'slideright':\n                    {\n                        const t = new PaneTransitionSlide(\n                            this,\n                            newChild,\n                            callback,\n                            duration,\n                            PaneTransitionDirection.Right\n                        );\n                        t.start();\n                    }\n                    break;\n\n                case 'sliderightup':\n                    {\n                        const t = new PaneTransitionSlide(\n                            this,\n                            newChild,\n                            callback,\n                            duration,\n                            PaneTransitionDirection.RightUp\n                        );\n                        t.start();\n                    }\n                    break;\n\n                case 'sliderightdown':\n                    {\n                        const t = new PaneTransitionSlide(\n                            this,\n                            newChild,\n                            callback,\n                            duration,\n                            PaneTransitionDirection.RightDown\n                        );\n                        t.start();\n                    }\n                    break;\n\n                case 'slideup':\n                    {\n                        const t = new PaneTransitionSlide(\n                            this,\n                            newChild,\n                            callback,\n                            duration,\n                            PaneTransitionDirection.Up\n                        );\n                        t.start();\n                    }\n                    break;\n\n                case 'slidedown':\n                    {\n                        const t = new PaneTransitionSlide(\n                            this,\n                            newChild,\n                            callback,\n                            duration,\n                            PaneTransitionDirection.Down\n                        );\n                        t.start();\n                    }\n                    break;\n\n                default:\n                    {\n                        const t = new PaneTransitionNone(this, newChild, callback);\n                        t.start();\n                    }\n                    break;\n            }\n        }\n        else {\n            const t = new PaneTransitionNone(this, newChild, callback);\n            t.start();\n        }\n\n        /*\n        let self = this;\n        let oldChild = self.childSurface;\n        oldChild.resourceListenerEvent.clear();\n        self.childSurface = newChild;\n        newChild.scale = self.surface.scale;\n        newChild.isChild = true;\n        self.childSurface.bind(self.element, function (model) {\n            oldChild.unbind();\n            self.isPrepared = true;\n            self.setHostDivScrolling();\n            if (callback) {\n                callback(self);\n            }\n        });\n        */\n    }\n\n    /**\n     * Unloads child surface element\n     */\n    public destroy() {\n        if (this.childSurface) {\n            this.childSurface.unbind();\n        }\n        if (this.element && this.element.parentElement) {\n            this.element.parentElement.removeChild(this.element);\n            this.element = undefined;\n        }\n        this.surface = undefined;\n    }\n\n    /**\n     * Sets rendering scale\n     */\n    public setScale(scale: number | undefined) {\n        if (!this.element || !scale) {\n            return this;\n        }\n        const hostDiv = this.element as HTMLDivElement;\n        hostDiv.style.left = this.translateX + this.left * scale + 'px';\n        hostDiv.style.top = this.translateY + this.top * scale + 'px';\n        hostDiv.style.width = this.width * scale + 'px';\n        hostDiv.style.height = this.height * scale + 'px';\n        if (this.childSurface) {\n            this.childSurface.scale = scale;\n        }\n        return this;\n    }\n\n    /**\n     * Sets rendering opacity\n     */\n    public setOpacity(opacity: number) {\n        this.opacity = opacity;\n        if (this.element && this.surface) {\n            this.element.style.opacity = (this.surface.opacity * this.opacity).toString();\n        }\n        return this;\n    }\n\n    /**\n     * Sets X translation\n     */\n    public setTranslateX(translateX: number) {\n        this.translateX = translateX;\n        if (this.element && this.surface) {\n            this.element.style.left = (this.translateX + this.left) * this.surface.scale + 'px';\n        }\n        return this;\n    }\n\n    /**\n     * Sets Y translation\n     */\n    public setTranslateY(translateY: number) {\n        this.translateY = translateY;\n        if (this.element && this.surface) {\n            this.element.style.top = (this.translateY + this.top) * this.surface.scale + 'px';\n        }\n        return this;\n    }\n\n    public addTo(surface: Surface) {\n        surface.layers.push(this);\n        return this;\n    }\n}\n","import { ElementCommandHandler } from '../command/element-command-handler';\nimport { IController } from '../controller/controller';\nimport { CommonEvent } from '../core/common-event';\nimport { ErrorMessages } from '../core/error-messages';\nimport { Model } from '../core/model';\nimport { PointEventParameters } from '../core/point-event-parameters';\nimport { ElementBase } from '../elements/element-base';\nimport { SpriteElement } from '../elements/sprite-element';\nimport { SpriteFrame } from '../elements/sprite-frame';\nimport { BitmapResource } from '../resource/bitmap-resource';\nimport { Surface } from './surface';\nimport { SurfaceElementStates } from './surface-element-states';\nimport { SurfaceLayer } from './surface-layer';\nimport { SurfaceRadioItemSpriteElement } from './surface-radio-item-sprite-element';\nimport { SurfaceRadioItemTextElement } from './surface-radio-item-text-element';\nimport { SurfaceRadioStripItem } from './surface-radio-strip-item';\nimport { SurfaceRadioStripSelectionArgs } from './surface-radio-strip-selection-args';\nimport { SurfaceRadioStripViewController } from './surface-radio-strip-view-controller';\n\n/**\n * Orientation of radio strip\n */\nexport enum RadioStripOrientation {\n    Horizontal = 0,\n    Vertical = 1\n}\n\n/**\n * Scrollable list of radio button items derived from surface image templates\n */\nexport class SurfaceRadioStrip extends SurfaceLayer {\n    public static RADIO_BUTTON_DOWN = 'radioButtonDown';\n    public static RADIO_BUTTON_UP = 'radioButtonUp';\n    public static RADIO_BUTTON_CLICK = 'radioButtonClick';\n\n    /**\n     * Creates a radio button strip\n     * @param id - Radio strip id\n     * @param arealeft - Strip area x coordinate\n     * @param areaTop - Strip area y coordinate\n     * @param areaWidth - Strip area width\n     * @param areaHeight - Strip area height\n     * @param buttonLeft - Button template area x coordinate\n     * @param buttonTop - Button template area y coordinate\n     * @param buttonWidth - Button template area width\n     * @param buttonHeight - Button template area height\n     * @param itemSelectedListener - Item selected listener\n     * @returns New radio strip layer\n     */\n    public static create(\n        id: string,\n        areaLeft: number,\n        areaTop: number,\n        areaWidth: number,\n        areaHeight: number,\n        buttonLeft: number,\n        buttonTop: number,\n        buttonWidth: number,\n        buttonHeight: number,\n        itemSelectedListener: (args: SurfaceRadioStripSelectionArgs | undefined) => void\n    ) {\n        const layer = new SurfaceRadioStrip(\n            id,\n            areaLeft,\n            areaTop,\n            areaWidth,\n            areaHeight,\n            buttonLeft,\n            buttonTop,\n            buttonWidth,\n            buttonHeight,\n            itemSelectedListener\n        );\n        return layer;\n    }\n\n    /**\n     * Strip orientation - Default = horizontal\n     */\n    public orientation: RadioStripOrientation = RadioStripOrientation.Horizontal;\n\n    /**\n     * Button template area X coordinate\n     */\n    public buttonLeft: number;\n\n    /**\n     * Button template area Y coordinate\n     */\n    public buttonTop: number;\n\n    /**\n     * Button template area width\n     */\n    public buttonWidth: number;\n\n    /**\n     * Button template area height\n     */\n    public buttonHeight: number;\n\n    /**\n     * Strip item selection event (strip: RadioStrip, item: RadioStripItem)\n     */\n    public itemSelected: CommonEvent<SurfaceRadioStripSelectionArgs> = new CommonEvent<\n        SurfaceRadioStripSelectionArgs\n    >();\n\n    /**\n     * Strip item normal state sprite index\n     */\n    public normalIndex: number;\n\n    /**\n     * Strip item selected state sprite index\n     */\n    public selectedIndex: number;\n\n    /**\n     * Strip item highlighted state sprite index\n     */\n    public highlightedIndex: number;\n\n    /**\n     * Strip item normal state text color as string\n     */\n    public normalColor: string;\n\n    /**\n     * Strip item highlighted state text color as string\n     */\n    public highlightedColor: string;\n\n    /**\n     * Strip item selected state text color as string\n     */\n    public selectedColor: string;\n\n    /**\n     * Strip item text alignment\n     */\n    public textAlignment: string;\n\n    /**\n     * Strip item text font typeface\n     */\n    public typeFace: string;\n\n    /**\n     * Strip item text font size\n     */\n    public typeSize: number;\n\n    /**\n     * Strip item text font style\n     */\n    public typeStyle: string;\n\n    /**\n     * Strip item text layout padding\n     */\n    public padding: number;\n\n    /**\n     * Maximum scrolling offset\n     */\n    public maxOffset?: number;\n\n    /**\n     * Strip touch down position\n     */\n    public downPosition?: number;\n\n    /**\n     * Strip touch down scroll offset\n     */\n    public downOffset?: number;\n\n    /**\n     * Array of radio strip items\n     */\n    public items: SurfaceRadioStripItem[] = [];\n\n    /**\n     * Radio strip view controller\n     */\n    public controller?: SurfaceRadioStripViewController;\n\n    /**\n     * Radio strip drawing model\n     */\n    public model?: Model;\n\n    /**\n     * Radio strip host canvas element\n     */\n    public element?: HTMLCanvasElement;\n\n    public scrollTimer?: number;\n\n    /**\n     * @param id - Radio strip id\n     * @param arealeft - Strip area x coordinate\n     * @param areaTop - Strip area y coordinate\n     * @param areaWidth - Strip area width\n     * @param areaHeight - Strip area height\n     * @param buttonLeft - Button template area x coordinate\n     * @param buttonTop - Button template area y coordinate\n     * @param buttonWidth - Button template area width\n     * @param buttonHeight - Button template area height\n     * @param itemSelectedListener - Item selected listener\n     */\n    constructor(\n        id: string,\n        areaLeft: number,\n        areaTop: number,\n        areaWidth: number,\n        areaHeight: number,\n        buttonLeft: number,\n        buttonTop: number,\n        buttonWidth: number,\n        buttonHeight: number,\n        itemSelectedListener: (args: SurfaceRadioStripSelectionArgs | undefined) => void\n    ) {\n        super(id, areaLeft, areaTop, areaWidth, areaHeight);\n\n        this.addItem = this.addItem.bind(this);\n        this.removeItem = this.removeItem.bind(this);\n        this.itemWithId = this.itemWithId.bind(this);\n        this.selectItem = this.selectItem.bind(this);\n        this.selectedItemIndex = this.selectedItemIndex.bind(this);\n        this.scrollTo = this.scrollTo.bind(this);\n        this.refreshModel = this.refreshModel.bind(this);\n        this.stripDown = this.stripDown.bind(this);\n        this.stripMoved = this.stripMoved.bind(this);\n        this.setOffset = this.setOffset.bind(this);\n        this.moveStart = this.moveStart.bind(this);\n        this.moveEnd = this.moveEnd.bind(this);\n        this.moveBack = this.moveBack.bind(this);\n        this.moveForward = this.moveForward.bind(this);\n        this.onRadioButtonDown = this.onRadioButtonDown.bind(this);\n        this.onRadioButtonUp = this.onRadioButtonUp.bind(this);\n        this.onRadioButtonClicked = this.onRadioButtonClicked.bind(this);\n\n        this.normalIndex = 0;\n        this.selectedIndex = 0;\n        this.highlightedIndex = 0;\n        this.normalColor = 'Black';\n        this.highlightedColor = 'Black';\n        this.selectedColor = 'Black';\n        this.textAlignment = 'center,middle';\n        this.typeFace = 'sans-serif';\n        this.typeSize = 12;\n        this.typeStyle = '';\n        this.padding = 0;\n\n        this.buttonLeft = buttonLeft;\n        this.buttonTop = buttonTop;\n        this.buttonWidth = buttonWidth;\n        this.buttonHeight = buttonHeight;\n        if (itemSelectedListener) {\n            this.itemSelected.add(itemSelectedListener);\n        }\n    }\n\n    /**\n     * Adds a new strip item\n     * @param id - Item id\n     * @param text - Item text\n     */\n    public addItem(id: string, text: string) {\n        const item = new SurfaceRadioStripItem(id, text);\n        this.items.push(item);\n        if (this.controller) {\n            this.refreshModel();\n        }\n    }\n\n    /**\n     * Removes a strip item\n     * @param id - Item id\n     */\n    public removeItem(id: string) {\n        const item = this.itemWithId(id);\n        let index;\n        if (item !== undefined) {\n            index = this.items.indexOf(item);\n            this.items.splice(index, 1);\n            if (this.controller) {\n                this.refreshModel();\n            }\n        }\n    }\n\n    /**\n     * Retrieves a strip item by its id\n     * @param id - Item id\n     * @returns Radio strip item with id or undefined if not found\n     */\n    public itemWithId(id: string) {\n        for (const item of this.items) {\n            if (item.id === id) {\n                return item;\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Selects a strip item by its id\n     * @param id - Item id to select\n     * @param inhibitEvent - True to inhibit select event\n     */\n    public selectItem(id: string, inhibitEvent: boolean) {\n        const self = this;\n        const item = self.itemWithId(id);\n        if (!item) {\n            return;\n        }\n        if (!item.isSelected) {\n            self.items.forEach(radioItem => {\n                if (radioItem.id === item.id) {\n                    radioItem.isSelected = true;\n                    if (radioItem.spriteElement) {\n                        radioItem.spriteElement.frameIndex = self.selectedIndex;\n                    }\n                    if (radioItem.textElement) {\n                        radioItem.textElement.setFill(self.selectedColor);\n                    }\n                }\n                else {\n                    radioItem.isSelected = false;\n                    if (radioItem.spriteElement) {\n                        radioItem.spriteElement.frameIndex = self.normalIndex;\n                    }\n                    if (radioItem.textElement) {\n                        radioItem.textElement.setFill(self.normalColor);\n                    }\n                }\n            });\n        }\n        if (arguments.length === 1 || !inhibitEvent) {\n            if (self.itemSelected.hasListeners()) {\n                self.itemSelected.trigger(new SurfaceRadioStripSelectionArgs(self, item));\n            }\n        }\n        if (self.controller) {\n            self.controller.draw();\n        }\n    }\n\n    /**\n     * Retrieves index of selected item or -1 if no item selected\n     * @returns Zero based index of selected item or -1 if no item selected\n     */\n    public selectedItemIndex() {\n        for (let i = 0; i < this.items.length; i++) {\n            if (this.items[i].isSelected) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * Scrolls strip to specified offset\n     * @param offset - Target scroll offset\n     */\n    public scrollTo(offset: number) {\n        const self = this;\n        let currentOffset: number;\n        if (!self.controller) {\n            return;\n        }\n        if (self.orientation === RadioStripOrientation.Horizontal) {\n            currentOffset = self.controller.offsetX;\n        }\n        else {\n            currentOffset = self.controller.offsetY;\n        }\n\n        if (currentOffset === offset) {\n            return;\n        }\n        if (offset < 0) {\n            offset = 0;\n        }\n        if (self.maxOffset !== undefined && offset > self.maxOffset) {\n            offset = self.maxOffset;\n        }\n        const increment = (offset - currentOffset) / 15;\n        if (self.scrollTimer) {\n            clearInterval(self.scrollTimer);\n        }\n        self.scrollTimer = setInterval(() => {\n            if (!self.controller) {\n                return;\n            }\n            if (self.orientation === RadioStripOrientation.Horizontal) {\n                self.controller.offsetX = self.controller.offsetX + increment;\n                if (increment < 0 && self.controller.offsetX <= offset) {\n                    self.controller.offsetX = offset;\n                    if (self.scrollTimer) {\n                        clearInterval(self.scrollTimer);\n                        self.scrollTimer = undefined;\n                    }\n                }\n                else if (increment > 0 && self.controller.offsetX >= offset) {\n                    self.controller.offsetX = offset;\n                    if (self.scrollTimer) {\n                        clearInterval(self.scrollTimer);\n                        self.scrollTimer = undefined;\n                    }\n                }\n            }\n            else {\n                self.controller.offsetY = self.controller.offsetY + increment;\n                if (increment < 0 && self.controller.offsetY <= offset) {\n                    self.controller.offsetY = offset;\n                    if (self.scrollTimer) {\n                        clearInterval(self.scrollTimer);\n                        self.scrollTimer = undefined;\n                    }\n                }\n                else if (increment > 0 && self.controller.offsetY >= offset) {\n                    self.controller.offsetY = offset;\n                    if (self.scrollTimer) {\n                        clearInterval(self.scrollTimer);\n                        self.scrollTimer = undefined;\n                    }\n                }\n            }\n            self.controller.draw();\n        }, 15);\n    }\n\n    /**\n     * Ensures item with a given id is scrolled into view\n     * @param id - Item id to ensure visible\n     */\n    public ensureVisible(id: string) {\n        const item = this.itemWithId(id);\n        if (!item || !this.controller) {\n            return;\n        }\n        const index = this.items.indexOf(item);\n        if (this.orientation === RadioStripOrientation.Horizontal) {\n            let buttonLeft = index * this.buttonWidth;\n            let buttonRight = buttonLeft + this.buttonWidth;\n            if (index < this.items.length - 1 && this.width >= this.buttonWidth * 2) {\n                buttonRight += this.buttonWidth;\n            }\n            if (index > 0 && this.width >= this.buttonWidth * 3) {\n                buttonLeft -= this.buttonWidth;\n            }\n            let offset = this.controller.offsetX;\n            const viewPortLeft = offset;\n            const viewPortRight = offset + this.width;\n            if (buttonLeft >= viewPortLeft && buttonRight <= viewPortRight) {\n                return;\n            }\n            if (buttonLeft < viewPortLeft) {\n                offset = buttonLeft;\n            }\n            else if (buttonRight > viewPortRight) {\n                offset = buttonRight - this.width;\n            }\n            this.scrollTo(offset);\n        }\n        else {\n            let buttonTop = index * this.buttonHeight;\n            let buttonBottom = buttonTop + this.buttonHeight;\n            if (index < this.items.length - 1 && this.height >= this.buttonHeight * 2) {\n                buttonBottom += this.buttonHeight;\n            }\n            if (index > 0 && this.height >= this.buttonHeight * 3) {\n                buttonTop -= this.buttonHeight;\n            }\n            let offset = this.controller.offsetY;\n            const viewPortTop = offset;\n            const viewPortBottom = offset + this.height;\n            if (buttonTop >= viewPortTop && buttonBottom <= viewPortBottom) {\n                return;\n            }\n            if (buttonTop < viewPortTop) {\n                offset = buttonTop;\n            }\n            else if (buttonBottom > viewPortBottom) {\n                offset = buttonBottom - this.height;\n            }\n            this.scrollTo(offset);\n        }\n    }\n\n    /**\n     * Adds radio strip to parent surface\n     * @param surface - Parent surface\n     */\n    public addToSurface(surface: Surface) {\n        this.surface = surface;\n\n        // If no normal image, throw error\n        if (!surface.normalImageSource) {\n            throw new Error(ErrorMessages.NormalImageSourceUndefined);\n        }\n\n        // Create model\n        const model = Model.create(this.width, this.height);\n        this.model = model;\n\n        // Add defined image resources\n        let frameCount = 0;\n        if (surface.normalImageSource) {\n            BitmapResource.create(SurfaceElementStates.NORMAL, surface.normalImageSource).addTo(model);\n            frameCount++;\n        }\n        if (surface.selectedImageSource) {\n            this.selectedIndex = frameCount;\n            frameCount++;\n            BitmapResource.create(SurfaceElementStates.SELECTED, surface.selectedImageSource).addTo(model);\n        }\n        if (surface.highlightedImageSource) {\n            this.highlightedIndex = frameCount;\n            if (this.selectedIndex === this.normalIndex) {\n                this.selectedIndex = this.highlightedIndex;\n            }\n            frameCount++;\n            BitmapResource.create(SurfaceElementStates.HIGHLIGHTED, surface.highlightedImageSource).addTo(model);\n        }\n\n        // Add static image from background area\n        const background = SpriteElement.create(0, 0, this.width, this.height);\n        background.interactive = false;\n        background.frames = [];\n        background.frames.push(\n            SpriteFrame.create(SurfaceElementStates.NORMAL, this.left, this.top, this.width, this.height, 0, 'none', 0)\n        );\n        if (surface.selectedImageSource) {\n            background.frames.push(\n                SpriteFrame.create(\n                    SurfaceElementStates.SELECTED,\n                    this.left,\n                    this.top,\n                    this.width,\n                    this.height,\n                    0,\n                    'none',\n                    0\n                )\n            );\n        }\n        if (surface.highlightedImageSource) {\n            background.frames.push(\n                SpriteFrame.create(\n                    SurfaceElementStates.HIGHLIGHTED,\n                    this.left,\n                    this.top,\n                    this.width,\n                    this.height,\n                    0,\n                    'none',\n                    0\n                )\n            );\n        }\n        model.add(background);\n\n        // Add button items\n        for (let i = 0; i < this.items.length; i++) {\n            const item = this.items[i];\n            let sprite: SurfaceRadioItemSpriteElement;\n            if (this.orientation === RadioStripOrientation.Horizontal) {\n                sprite = new SurfaceRadioItemSpriteElement(\n                    this.id,\n                    item.id,\n                    i * this.buttonWidth,\n                    0,\n                    this.buttonWidth,\n                    this.buttonHeight\n                );\n            }\n            else {\n                sprite = new SurfaceRadioItemSpriteElement(\n                    this.id,\n                    item.id,\n                    0,\n                    i * this.buttonHeight,\n                    this.buttonWidth,\n                    this.buttonHeight\n                );\n            }\n            sprite.frames = [];\n            sprite.id = item.id + '_sprite';\n            item.spriteElement = sprite;\n            sprite.frames.push(\n                SpriteFrame.create(\n                    SurfaceElementStates.NORMAL,\n                    this.buttonLeft,\n                    this.buttonTop,\n                    this.buttonWidth,\n                    this.buttonHeight,\n                    0,\n                    'none',\n                    0\n                )\n            );\n            if (surface.selectedImageSource) {\n                sprite.frames.push(\n                    SpriteFrame.create(\n                        SurfaceElementStates.SELECTED,\n                        this.buttonLeft,\n                        this.buttonTop,\n                        this.buttonWidth,\n                        this.buttonHeight,\n                        0,\n                        'none',\n                        0\n                    )\n                );\n            }\n            if (surface.highlightedImageSource) {\n                sprite.frames.push(\n                    SpriteFrame.create(\n                        SurfaceElementStates.HIGHLIGHTED,\n                        this.buttonLeft,\n                        this.buttonTop,\n                        this.buttonWidth,\n                        this.buttonHeight,\n                        0,\n                        'none',\n                        0\n                    )\n                );\n            }\n            if (this.highlightedIndex !== this.normalIndex) {\n                sprite.mouseDown = 'radioButtonDown(' + this.highlightedIndex + ')';\n                sprite.mouseUp = 'radioButtonUp()';\n            }\n            else if (this.selectedIndex !== this.normalIndex) {\n                sprite.mouseDown = 'radioButtonDown(' + this.selectedIndex + ')';\n                sprite.mouseUp = 'radioButtonUp()';\n            }\n            else {\n                sprite.mouseDown = 'radioButtonDown(' + this.normalIndex + ')';\n                sprite.mouseUp = 'radioButtonUp()';\n            }\n            sprite.click = 'radioButtonClick';\n            sprite.interactive = true;\n            model.add(sprite);\n\n            let text: SurfaceRadioItemTextElement;\n            if (this.orientation === RadioStripOrientation.Horizontal) {\n                text = new SurfaceRadioItemTextElement(\n                    this.id,\n                    item.id,\n                    item.text,\n                    i * this.buttonWidth,\n                    0,\n                    this.buttonWidth,\n                    this.buttonHeight\n                ).setFill(this.normalColor);\n            }\n            else {\n                text = new SurfaceRadioItemTextElement(\n                    this.id,\n                    item.id,\n                    item.text,\n                    0,\n                    i * this.buttonHeight,\n                    this.buttonWidth,\n                    this.buttonHeight\n                ).setFill(this.normalColor);\n            }\n            text.id = item.id + '_text';\n\n            text.alignment = this.textAlignment;\n            text.typeface = this.typeFace;\n            text.typestyle = this.typeStyle;\n            text.typesize = this.typeSize;\n\n            text.interactive = false;\n            item.textElement = text;\n            model.add(text);\n        }\n\n        const controller = new SurfaceRadioStripViewController();\n        controller.eventDelay = 150;\n        controller.mouseDownView.add(this.stripDown);\n        controller.mouseMovedView.add(this.stripMoved);\n        this.controller = controller;\n        controller.strip = this;\n        controller.setScale(surface.scale);\n        controller.setModel(this.model);\n\n        const canvas = controller.getCanvas();\n        canvas.setAttribute('id', this.id + '_canvas');\n        canvas.style.position = 'absolute';\n        canvas.style.left = this.translateX + this.left * surface.scale + 'px';\n        canvas.style.top = this.translateY + this.top * surface.scale + 'px';\n        canvas.style.opacity = (this.surface.opacity * this.opacity).toString();\n\n        let maxOffset: number;\n        if (this.orientation === RadioStripOrientation.Horizontal) {\n            maxOffset = this.items.length * this.buttonWidth - this.width;\n        }\n        else {\n            maxOffset = this.items.length * this.buttonHeight - this.height;\n        }\n        if (maxOffset < 0) {\n            maxOffset = 0;\n        }\n        this.maxOffset = maxOffset;\n        this.element = canvas;\n    }\n\n    /**\n     * Refreshes the drawing model for updated items\n     */\n    public refreshModel() {\n        const model = this.model;\n        if (!model) {\n            throw new Error(ErrorMessages.ModelUndefined);\n        }\n        if (!this.controller) {\n            throw new Error(ErrorMessages.ControllerIsUndefined);\n        }\n        const surface = this.surface;\n        if (!surface) {\n            return;\n        }\n\n        // Remove elements for items\n        for (const el of model.elements) {\n            if (el instanceof SurfaceRadioItemSpriteElement || el instanceof SurfaceRadioItemTextElement) {\n                if (el.itemId) {\n                    model.remove(el);\n                }\n            }\n        }\n\n        // Add button items\n        for (let i = 0; i < this.items.length; i++) {\n            const item = this.items[i];\n            let sprite: SurfaceRadioItemSpriteElement;\n            if (this.orientation === RadioStripOrientation.Horizontal) {\n                sprite = new SurfaceRadioItemSpriteElement(\n                    this.id,\n                    item.id,\n                    i * this.buttonWidth,\n                    0,\n                    this.buttonWidth,\n                    this.buttonHeight\n                );\n            }\n            else {\n                sprite = new SurfaceRadioItemSpriteElement(\n                    this.id,\n                    item.id,\n                    0,\n                    i * this.buttonHeight,\n                    this.buttonWidth,\n                    this.buttonHeight\n                );\n            }\n            item.spriteElement = sprite;\n            sprite.interactive = true;\n            sprite.id = item.id + '_sprite';\n            sprite.groupId = this.id;\n            sprite.itemId = item.id;\n            sprite.frames = [];\n            sprite.frames.push(\n                SpriteFrame.create(\n                    SurfaceElementStates.NORMAL,\n                    this.buttonLeft,\n                    this.buttonTop,\n                    this.buttonWidth,\n                    this.buttonHeight,\n                    0,\n                    'none',\n                    0\n                )\n            );\n            if (surface.selectedImageSource) {\n                sprite.frames.push(\n                    SpriteFrame.create(\n                        SurfaceElementStates.SELECTED,\n                        this.buttonLeft,\n                        this.buttonTop,\n                        this.buttonWidth,\n                        this.buttonHeight,\n                        0,\n                        'none',\n                        0\n                    )\n                );\n            }\n            if (surface.highlightedImageSource) {\n                sprite.frames.push(\n                    SpriteFrame.create(\n                        SurfaceElementStates.HIGHLIGHTED,\n                        this.buttonLeft,\n                        this.buttonTop,\n                        this.buttonWidth,\n                        this.buttonHeight,\n                        0,\n                        'none',\n                        0\n                    )\n                );\n            }\n            if (this.highlightedIndex !== this.normalIndex) {\n                sprite.mouseDown = 'radioButtonDown(' + this.highlightedIndex + ')';\n                sprite.mouseUp = 'radioButtonUp()';\n            }\n            else if (this.selectedIndex !== this.normalIndex) {\n                sprite.mouseDown = 'radioButtonDown(' + this.selectedIndex + ')';\n                sprite.mouseUp = 'radioButtonUp()';\n            }\n            else {\n                sprite.mouseDown = 'radioButtonDown(' + this.normalIndex + ')';\n                sprite.mouseUp = 'radioButtonUp()';\n            }\n            sprite.click = 'radioButtonClick';\n            sprite.interactive = true;\n            model.add(sprite);\n            let text: SurfaceRadioItemTextElement;\n            if (this.orientation === RadioStripOrientation.Horizontal) {\n                text = new SurfaceRadioItemTextElement(\n                    this.id,\n                    item.id,\n                    item.text,\n                    i * this.buttonWidth,\n                    0,\n                    this.buttonWidth,\n                    this.buttonHeight\n                );\n            }\n            else {\n                text = new SurfaceRadioItemTextElement(\n                    this.id,\n                    item.id,\n                    item.text,\n                    0,\n                    i * this.buttonHeight,\n                    this.buttonWidth,\n                    this.buttonHeight\n                );\n            }\n            text.setFill(this.normalColor);\n            item.textElement = text;\n            text.interactive = false;\n            text.id = item.id + '_text';\n            text.itemId = item.id;\n            text.alignment = this.textAlignment;\n            text.typeface = this.typeFace;\n            text.typesize = this.typeSize;\n            model.add(text);\n        }\n\n        let maxOffset: number;\n        if (this.orientation === RadioStripOrientation.Horizontal) {\n            maxOffset = this.items.length * this.buttonWidth - this.width;\n        }\n        else {\n            maxOffset = this.items.length * this.buttonHeight - this.height;\n        }\n        if (maxOffset < 0) {\n            maxOffset = 0;\n        }\n        this.maxOffset = maxOffset;\n        if (this.orientation === RadioStripOrientation.Horizontal) {\n            if (this.controller.offsetX > this.maxOffset) {\n                this.controller.offsetX = this.maxOffset;\n            }\n        }\n        else {\n            if (this.controller.offsetY > this.maxOffset) {\n                this.controller.offsetY = this.maxOffset;\n            }\n        }\n        this.controller.draw();\n    }\n\n    /**\n     * Handles radio strip mouse down event\n     * @param c - Strip view controller\n     * @param args - Strip mouse down point info\n     */\n    public stripDown(controller: IController, args: PointEventParameters) {\n        const c = controller as SurfaceRadioStripViewController;\n        if (!c.strip || !args.point) {\n            return;\n        }\n        if (c.strip.orientation === RadioStripOrientation.Horizontal) {\n            c.strip.downOffset = c.offsetX;\n            c.strip.downPosition = args.point.x;\n        }\n        else {\n            c.strip.downOffset = c.offsetY;\n            c.strip.downPosition = args.point.y;\n        }\n    }\n\n    /**\n     * Handles radio strip mouse move event\n     * @param c - Strip view controller\n     * @param args - Strip mouse move point info\n     */\n    public stripMoved(controller: IController, args: PointEventParameters) {\n        const c = controller as SurfaceRadioStripViewController;\n        if (!c.strip || !args.point || !c.strip.downPosition || !c.strip.downOffset || !c.strip.maxOffset) {\n            return;\n        }\n        if (c.isMouseDown) {\n            if (c.strip.orientation === RadioStripOrientation.Horizontal) {\n                let deltaX = args.point.x - c.strip.downPosition;\n                deltaX /= c.scale;\n                const offset = c.strip.downOffset - deltaX;\n                if (offset < 0) {\n                    c.strip.scrollTo(0);\n                }\n                else if (offset <= c.strip.maxOffset) {\n                    c.strip.scrollTo(offset);\n                }\n            }\n            else {\n                let deltaY = args.point.y - c.strip.downPosition;\n                deltaY /= c.scale;\n                const offset = c.strip.downOffset - deltaY;\n                if (offset < 0) {\n                    c.strip.scrollTo(0);\n                }\n                else if (offset <= c.strip.maxOffset) {\n                    c.strip.scrollTo(offset);\n                }\n            }\n        }\n    }\n\n    /**\n     * Sets scroll offset\n     * @param offset - Scroll offset\n     */\n    public setOffset(offset: number) {\n        if (!this.controller || !this.controller.offsetX || !this.maxOffset) {\n            return;\n        }\n        if (this.orientation === RadioStripOrientation.Horizontal) {\n            if (offset === this.controller.offsetX) {\n                return;\n            }\n            if (offset > this.maxOffset) {\n                this.controller.offsetX = this.maxOffset;\n            }\n            else if (offset >= 0) {\n                this.controller.offsetX = offset;\n            }\n        }\n        else {\n            if (offset === this.controller.offsetY) {\n                return;\n            }\n            if (offset > this.maxOffset) {\n                this.controller.offsetY = this.maxOffset;\n            }\n            else if (offset >= 0) {\n                this.controller.offsetY = offset;\n            }\n        }\n        this.controller.draw();\n    }\n\n    /**\n     * Scrolls to start\n     */\n    public moveStart() {\n        this.scrollTo(0);\n    }\n\n    /**\n     * Scrolls to end\n     */\n    public moveEnd() {\n        if (this.maxOffset) {\n            this.scrollTo(this.maxOffset);\n        }\n    }\n\n    /**\n     * Scrolls toward the beginning by one item\n     */\n    public moveBack() {\n        if (!this.controller) {\n            return;\n        }\n        if (this.orientation === RadioStripOrientation.Horizontal) {\n            const offset = this.controller.offsetX;\n            this.scrollTo(offset - this.buttonWidth);\n        }\n        else {\n            const offset = this.controller.offsetY;\n            this.scrollTo(offset - this.buttonHeight);\n        }\n    }\n\n    /**\n     * Scrolls toward the end by one item\n     */\n    public moveForward() {\n        if (!this.controller) {\n            return;\n        }\n        if (this.orientation === RadioStripOrientation.Horizontal) {\n            const offset = this.controller.offsetX;\n            this.scrollTo(offset + this.buttonWidth);\n        }\n        else {\n            const offset = this.controller.offsetY;\n            this.scrollTo(offset + this.buttonHeight);\n        }\n    }\n\n    /**\n     * Loads required resource and calls completion callback\n     * @param callback - Completion callback (success: boolean)\n     */\n    public prepare(callback: (success: boolean) => void) {\n        const self = this;\n        if (!self.controller || !self.element || !self.surface || !self.surface.div) {\n            return;\n        }\n\n        // let parentElement = document.getElementById(self.surface.hostDivId);\n        // parentElement.appendChild(self.element);\n        self.surface.div.appendChild(self.element);\n\n        self.controller.surface = self.surface;\n        const commandHandler = new ElementCommandHandler();\n        commandHandler.attachController(self.controller);\n        commandHandler.addHandler(\n            SurfaceRadioStrip.RADIO_BUTTON_CLICK,\n            (controller: IController, element: ElementBase, command: string, trigger: string, parameters: any) => {\n                const radioStripController = controller as SurfaceRadioStripViewController;\n                const radioStrip = radioStripController.strip;\n                const radioStripSpriteElement = element as SurfaceRadioItemSpriteElement;\n                if (radioStrip) {\n                    radioStrip.onRadioButtonClicked(radioStripSpriteElement.itemId);\n                }\n            }\n        );\n        commandHandler.addHandler(\n            SurfaceRadioStrip.RADIO_BUTTON_DOWN,\n            (controller: IController, element: ElementBase, command: string, trigger: string, parameters: any) => {\n                const radioStripController = controller as SurfaceRadioStripViewController;\n                const radioStrip = radioStripController.strip;\n                const radioStripSpriteElement = element as SurfaceRadioItemSpriteElement;\n                if (radioStrip) {\n                    radioStrip.onRadioButtonDown(radioStripSpriteElement.itemId);\n                }\n            }\n        );\n        commandHandler.addHandler(\n            SurfaceRadioStrip.RADIO_BUTTON_UP,\n            (controller: IController, element: ElementBase, command: string, trigger: string, parameters: any) => {\n                const radioStripController = controller as SurfaceRadioStripViewController;\n                const radioStrip = radioStripController.strip;\n                const radioStripSpriteElement = element as SurfaceRadioItemSpriteElement;\n                if (radioStrip) {\n                    radioStrip.onRadioButtonUp(radioStripSpriteElement.itemId);\n                }\n            }\n        );\n\n        if (!self.model) {\n            return;\n        }\n\n        if (self.surface.resourceListenerEvent.hasListeners()) {\n            self.surface.resourceListenerEvent.listeners.forEach(listener => {\n                if (!self.model) {\n                    return;\n                }\n                self.model.resourceManager.listenerEvent.add(listener);\n            });\n        }\n\n        self.model.prepareResources(undefined, success => {\n            if (!self.surface) {\n                throw new Error(ErrorMessages.SurfaceIsUndefined);\n            }\n            if (success) {\n                self.isPrepared = true;\n                if (self.controller) {\n                    self.controller.draw();\n                }\n                if (callback) {\n                    callback(true);\n                }\n            }\n            else {\n                self.surface.onErrorInternal(ErrorMessages.ResourcesFailedToLoad);\n                if (callback) {\n                    callback(false);\n                }\n            }\n        });\n    }\n\n    /**\n     * Detaches surface and destroys visual elements\n     */\n    public destroy() {\n        if (this.controller) {\n            this.controller.detach();\n        }\n        if (this.element) {\n            this.element = undefined;\n        }\n        this.surface = undefined;\n    }\n\n    /**\n     * Onload initialization\n     */\n    public onload() {\n        return;\n    }\n\n    /**\n     * Onunload teardown\n     */\n    public onunload() {\n        return;\n    }\n\n    /**\n     * Sets rendering scale\n     */\n    public setScale(scale: number) {\n        if (this.controller) {\n            this.controller.setScale(scale);\n        }\n        if (!this.element) {\n            return this;\n        }\n        const canvas = this.element as HTMLCanvasElement;\n        canvas.style.left = this.translateX + this.left * scale + 'px';\n        canvas.style.top = this.translateY + this.top * scale + 'px';\n        canvas.style.width = this.width * scale + 'px';\n        canvas.style.height = this.height * scale + 'px';\n        return this;\n    }\n\n    /**\n     * Sets rendering opacity\n     */\n    public setOpacity(opacity: number) {\n        this.opacity = opacity;\n        if (this.element && this.surface) {\n            this.element.style.opacity = (this.surface.opacity * this.opacity).toString();\n        }\n        return this;\n    }\n\n    /**\n     * Sets X translation\n     */\n    public setTranslateX(translateX: number) {\n        this.translateX = translateX;\n        if (this.element && this.surface) {\n            this.element.style.left = (this.translateX + this.left) * this.surface.scale + 'px';\n        }\n        return this;\n    }\n\n    /**\n     * Sets Y translation\n     */\n    public setTranslateY(translateY: number) {\n        this.translateY = translateY;\n        if (this.element && this.surface) {\n            this.element.style.top = (this.translateY + this.top) * this.surface.scale + 'px';\n        }\n        return this;\n    }\n\n    public onRadioButtonDown(itemId: string) {\n        const item = this.itemWithId(itemId);\n        if (!item || !this.controller) {\n            return;\n        }\n        if (item.textElement) {\n            item.textElement.setFill(this.highlightedColor);\n        }\n        const element = item.spriteElement;\n        if (!element) {\n            return;\n        }\n        if (!element.frameStack) {\n            element.frameStack = [];\n        }\n        element.frameStack.push(element.frameIndex);\n        element.frameIndex = this.highlightedIndex;\n        this.controller.draw();\n    }\n\n    public onRadioButtonUp(itemId: string) {\n        const item = this.itemWithId(itemId);\n        if (!item || !this.controller) {\n            return;\n        }\n        if (item.textElement) {\n            if (item.isSelected) {\n                item.textElement.setFill(this.selectedColor);\n            }\n            else {\n                item.textElement.setFill(this.normalColor);\n            }\n        }\n        const element = item.spriteElement;\n        if (!element) {\n            return;\n        }\n        if (element.frameStack) {\n            if (element.frameStack.length > 0) {\n                const index = element.frameStack.pop();\n                if (index !== undefined) {\n                    element.frameIndex = index;\n                }\n            }\n            if (element.frameStack.length === 0) {\n                element.frameStack = undefined;\n            }\n        }\n        this.controller.draw();\n    }\n\n    public onRadioButtonClicked(itemId: string) {\n        const item = this.itemWithId(itemId);\n        const self = this;\n        if (!item || !self.controller) {\n            return;\n        }\n        if (!item.isSelected) {\n            self.items.forEach(radioItem => {\n                if (radioItem.id === item.id) {\n                    radioItem.isSelected = true;\n                    if (radioItem.spriteElement) {\n                        radioItem.spriteElement.frameIndex = self.selectedIndex;\n                    }\n                    if (radioItem.textElement) {\n                        radioItem.textElement.setFill(self.selectedColor);\n                    }\n                }\n                else {\n                    radioItem.isSelected = false;\n                    if (radioItem.spriteElement) {\n                        radioItem.spriteElement.frameIndex = self.normalIndex;\n                    }\n                    if (radioItem.textElement) {\n                        radioItem.textElement.setFill(self.normalColor);\n                    }\n                }\n            });\n        }\n        if (self.itemSelected.hasListeners()) {\n            self.itemSelected.trigger(new SurfaceRadioStripSelectionArgs(self, item));\n        }\n        self.controller.draw();\n        self.ensureVisible(itemId);\n    }\n\n    public addTo(surface: Surface) {\n        surface.layers.push(this);\n        return this;\n    }\n}\n","import { CommandEventTrigger } from './command/command-event-trigger';\nimport { ElementCommand } from './command/element-command';\nimport { ElementCommandHandler } from './command/element-command-handler';\nimport { ElementCommandHandlerRegistration } from './command/element-command-handler-registration';\nimport { ControllerEvent } from './controller/controller-event';\nimport { ControllerEventArgs } from './controller/controller-event-args';\nimport { Color } from './core/color';\nimport { CommonEvent } from './core/common-event';\nimport { ErrorMessages } from './core/error-messages';\nimport { LocationArgs } from './core/location-args';\nimport { Logging } from './core/logging';\nimport { Matrix2D } from './core/matrix-2d';\nimport { Model } from './core/model';\nimport { ModelEvent } from './core/model-event';\nimport { MouseEventArgs } from './core/mouse-event-args';\nimport { MouseLocationArgs } from './core/mouse-location-args';\nimport { MousePositionInfo } from './core/mouse-position-info';\nimport { NamedColor } from './core/named-color';\nimport { Point } from './core/point';\nimport { PointDepth } from './core/point-depth';\nimport { PointEventParameters } from './core/point-event-parameters';\nimport { Region } from './core/region';\nimport { ScalingInfo } from './core/scaling-info';\nimport { Size } from './core/size';\nimport { SizeArgs } from './core/size-args';\nimport { StrokeInfo } from './core/stroke-info';\nimport { TimerParameters } from './core/timer-parameters';\nimport { Utility } from './core/utility';\nimport { ViewDragArgs } from './core/view-drag-args';\nimport { WindingMode } from './core/winding-mode';\n\nimport { Component } from './design/component/component';\nimport { ComponentElement } from './design/component/component-element';\nimport { ComponentEvent } from './design/component/component-event';\nimport { ComponentProps } from './design/component/component-props';\nimport { ComponentRegistry } from './design/component/component-registry';\nimport { GenericComponentProps } from './design/component/generic-component-props';\nimport { HtmlComponentProps } from './design/component/html-component-props';\nimport { ImageBasedComponentProps } from './design/component/image-based-component-props';\nimport { NavigateComponentProps } from './design/component/navigate-component-props';\nimport { ProgressRectangle } from './design/component/progress-rectangle';\nimport { UploadComponentProps } from './design/component/upload-component-props';\n\nimport { DesignTool } from './design/tools/design-tool';\nimport { EllipseTool } from './design/tools/ellipse-tool';\nimport { ImageElementTool } from './design/tools/image-element-tool';\nimport { LineTool } from './design/tools/line-tool';\nimport { ModelElementTool } from './design/tools/model-element-tool';\nimport { PenTool } from './design/tools/pen-tool';\nimport { PolygonTool } from './design/tools/polygon-tool';\nimport { PolylineTool } from './design/tools/polyline-tool';\nimport { RectangleTool } from './design/tools/rectangle-tool';\nimport { TextTool } from './design/tools/text-tool';\n\nimport { DesignController } from './design/design-controller';\nimport { DesignRenderer } from './design/design-renderer';\nimport { GridType } from './design/grid-type';\nimport { Handle } from './design/handle';\nimport { HandleFactory } from './design/handle-factory';\nimport { HandleMovedArgs } from './design/handle-moved-args';\n\nimport { ElementBase } from './elements/element-base';\nimport { ElementCreationProps } from './elements/element-creation-props';\nimport { ElementCreatorRegistration } from './elements/element-creator-registration';\nimport { ElementDragArgs } from './elements/element-drag-args';\nimport { ElementFactory } from './elements/element-factory';\nimport { ElementLocationArgs } from './elements/element-location-args';\nimport { ElementMouseEventArgs } from './elements/element-mouse-event-args';\nimport { ElementSizeArgs } from './elements/element-size-args';\nimport { ElementSizeProps } from './elements/element-size-props';\nimport { EllipseElement } from './elements/ellipse-element';\nimport { ImageElement } from './elements/image-element';\nimport { InvalidIndexException } from './elements/invalid-index-exception';\nimport { LineElement } from './elements/line-element';\nimport { ModelElement } from './elements/model-element';\nimport { MoveLocation } from './elements/move-location';\nimport { PathElement } from './elements/path-element';\nimport { PolygonElement } from './elements/polygon-element';\nimport { PolylineElement } from './elements/polyline-element';\nimport { RectangleElement } from './elements/rectangle-element';\nimport { ResizeSize } from './elements/resize-size';\nimport { SpriteElement } from './elements/sprite-element';\nimport { SpriteFrame } from './elements/sprite-frame';\nimport { SpriteState } from './elements/sprite-state';\nimport { TextElement } from './elements/text-element';\nimport { UploadCompletionProps } from './elements/upload-completion-props';\nimport { UploadProgressProps } from './elements/upload-progress-props';\n\nimport { FillFactory } from './fill/fill-factory';\nimport { FillInfo } from './fill/fill-info';\nimport { GradientFillStop } from './fill/gradient-fill-stop';\nimport { LinearGradientFill } from './fill/linear-gradient-fill';\nimport { RadialGradientFill } from './fill/radial-gradient-fill';\n\nimport { BitmapResource } from './resource/bitmap-resource';\nimport { ModelResource } from './resource/model-resource';\nimport { Resource } from './resource/resource';\nimport { ResourceCreatorRegistration } from './resource/resource-creator-registration';\nimport { ResourceFactory } from './resource/resource-factory';\nimport { ResourceLoaderState } from './resource/resource-loader-state';\nimport { ResourceManager } from './resource/resource-manager';\nimport { ResourceManagerEvent } from './resource/resource-manager-event';\nimport { ResourceState } from './resource/resource-state';\nimport { TextResource } from './resource/text-resource';\n\nimport { Sketcher } from './sketcher/sketcher';\n\nimport { PaneTransition } from './surface/pane-transitions/pane-transition';\nimport { PaneTransitionDirection } from './surface/pane-transitions/pane-transition-direction';\nimport { PaneTransitionFade } from './surface/pane-transitions/pane-transition-fade';\nimport { PaneTransitionNone } from './surface/pane-transitions/pane-transition-none';\nimport { PaneTransitionPush } from './surface/pane-transitions/pane-transition-push';\nimport { PaneTransitionReveal } from './surface/pane-transitions/pane-transition-reveal';\nimport { PaneTransitionSlide } from './surface/pane-transitions/pane-transition-slide';\nimport { PaneTransitionWipe } from './surface/pane-transitions/pane-transition-wipe';\n\nimport { Surface } from './surface/surface';\nimport { SurfaceAnimationFrame } from './surface/surface-animation-frame';\nimport { SurfaceAnimationLayer } from './surface/surface-animation-layer';\nimport { SurfaceAnimationViewController } from './surface/surface-animation-view-controller';\nimport { SurfaceButtonElement } from './surface/surface-button-element';\nimport { SurfaceElement } from './surface/surface-element';\nimport { SurfaceElementStates } from './surface/surface-element-states';\nimport { SurfaceHiddenLayer } from './surface/surface-hidden-layer';\nimport { SurfaceHtmlLayer } from './surface/surface-html-layer';\nimport { SurfaceImageLayer } from './surface/surface-image-layer';\nimport { SurfaceLayer } from './surface/surface-layer';\nimport { SurfacePane } from './surface/surface-pane';\nimport { SurfaceRadioItemSpriteElement } from './surface/surface-radio-item-sprite-element';\nimport { SurfaceRadioItemTextElement } from './surface/surface-radio-item-text-element';\nimport { SurfaceRadioStrip } from './surface/surface-radio-strip';\nimport { SurfaceRadioStripItem } from './surface/surface-radio-strip-item';\nimport { SurfaceRadioStripSelectionArgs } from './surface/surface-radio-strip-selection-args';\nimport { SurfaceRadioStripViewController } from './surface/surface-radio-strip-view-controller';\nimport { SurfaceTextElement } from './surface/surface-text-element';\nimport { SurfaceVideoLayer } from './surface/surface-video-layer';\nimport { SurfaceViewController } from './surface/surface-view-controller';\n\nimport { TransitionRenderer } from './transitions/transitions';\n\nimport { ViewController } from './view/view-controller';\nimport { ViewRenderer } from './view/view-renderer';\n\n// Exports\nexport { CommandEventTrigger } from './command/command-event-trigger';\nexport { ElementCommand } from './command/element-command';\nexport { ElementCommandHandler } from './command/element-command-handler';\nexport { ElementCommandHandlerRegistration } from './command/element-command-handler-registration';\nexport { ControllerEvent } from './controller/controller-event';\nexport { ControllerEventArgs } from './controller/controller-event-args';\nexport { Color } from './core/color';\nexport { CommonEvent } from './core/common-event';\nexport { ErrorMessages } from './core/error-messages';\nexport { LocationArgs } from './core/location-args';\nexport { Logging } from './core/logging';\nexport { Matrix2D } from './core/matrix-2d';\nexport { Model } from './core/model';\nexport { ModelEvent } from './core/model-event';\nexport { MouseEventArgs } from './core/mouse-event-args';\nexport { MouseLocationArgs } from './core/mouse-location-args';\nexport { MousePositionInfo } from './core/mouse-position-info';\nexport { NamedColor } from './core/named-color';\nexport { Point } from './core/point';\nexport { PointDepth } from './core/point-depth';\nexport { PointEventParameters } from './core/point-event-parameters';\nexport { Region } from './core/region';\nexport { ScalingInfo } from './core/scaling-info';\nexport { Size } from './core/size';\nexport { SizeArgs } from './core/size-args';\nexport { StrokeInfo } from './core/stroke-info';\nexport { TimerParameters } from './core/timer-parameters';\nexport { Utility } from './core/utility';\nexport { ViewDragArgs } from './core/view-drag-args';\nexport { WindingMode } from './core/winding-mode';\n\nexport { Component } from './design/component/component';\nexport { ComponentElement } from './design/component/component-element';\nexport { ComponentEvent } from './design/component/component-event';\nexport { ComponentProps } from './design/component/component-props';\nexport { ComponentRegistry } from './design/component/component-registry';\nexport { GenericComponentProps } from './design/component/generic-component-props';\nexport { HtmlComponentProps } from './design/component/html-component-props';\nexport { ImageBasedComponentProps } from './design/component/image-based-component-props';\nexport { NavigateComponentProps } from './design/component/navigate-component-props';\nexport { ProgressRectangle } from './design/component/progress-rectangle';\nexport { UploadComponentProps } from './design/component/upload-component-props';\n\nexport { DesignTool } from './design/tools/design-tool';\nexport { EllipseTool } from './design/tools/ellipse-tool';\nexport { ImageElementTool } from './design/tools/image-element-tool';\nexport { LineTool } from './design/tools/line-tool';\nexport { ModelElementTool } from './design/tools/model-element-tool';\nexport { PenTool } from './design/tools/pen-tool';\nexport { PolygonTool } from './design/tools/polygon-tool';\nexport { PolylineTool } from './design/tools/polyline-tool';\nexport { RectangleTool } from './design/tools/rectangle-tool';\nexport { TextTool } from './design/tools/text-tool';\n\nexport { DesignController } from './design/design-controller';\nexport { DesignRenderer } from './design/design-renderer';\nexport { GridType } from './design/grid-type';\nexport { Handle } from './design/handle';\nexport { HandleFactory } from './design/handle-factory';\nexport { HandleMovedArgs } from './design/handle-moved-args';\n\nexport { ElementBase } from './elements/element-base';\nexport { ElementCreationProps } from './elements/element-creation-props';\nexport { ElementCreatorRegistration } from './elements/element-creator-registration';\nexport { ElementDragArgs } from './elements/element-drag-args';\nexport { ElementFactory } from './elements/element-factory';\nexport { ElementLocationArgs } from './elements/element-location-args';\nexport { ElementMouseEventArgs } from './elements/element-mouse-event-args';\nexport { ElementSizeArgs } from './elements/element-size-args';\nexport { ElementSizeProps } from './elements/element-size-props';\nexport { EllipseElement } from './elements/ellipse-element';\nexport { ImageElement } from './elements/image-element';\nexport { InvalidIndexException } from './elements/invalid-index-exception';\nexport { LineElement } from './elements/line-element';\nexport { ModelElement } from './elements/model-element';\nexport { MoveLocation } from './elements/move-location';\nexport { PathElement } from './elements/path-element';\nexport { PolygonElement } from './elements/polygon-element';\nexport { PolylineElement } from './elements/polyline-element';\nexport { RectangleElement } from './elements/rectangle-element';\nexport { ResizeSize } from './elements/resize-size';\nexport { SpriteElement } from './elements/sprite-element';\nexport { SpriteFrame } from './elements/sprite-frame';\nexport { SpriteState } from './elements/sprite-state';\nexport { TextElement } from './elements/text-element';\nexport { UploadCompletionProps } from './elements/upload-completion-props';\nexport { UploadProgressProps } from './elements/upload-progress-props';\n\nexport { FillFactory } from './fill/fill-factory';\nexport { FillInfo } from './fill/fill-info';\nexport { GradientFillStop } from './fill/gradient-fill-stop';\nexport { LinearGradientFill } from './fill/linear-gradient-fill';\nexport { RadialGradientFill } from './fill/radial-gradient-fill';\n\nexport { BitmapResource } from './resource/bitmap-resource';\nexport { ModelResource } from './resource/model-resource';\nexport { Resource } from './resource/resource';\nexport { ResourceCreatorRegistration } from './resource/resource-creator-registration';\nexport { ResourceFactory } from './resource/resource-factory';\nexport { ResourceLoaderState } from './resource/resource-loader-state';\nexport { ResourceManager } from './resource/resource-manager';\nexport { ResourceManagerEvent } from './resource/resource-manager-event';\nexport { ResourceState } from './resource/resource-state';\nexport { TextResource } from './resource/text-resource';\n\nexport { Sketcher } from './sketcher/sketcher';\n\nexport { PaneTransition } from './surface/pane-transitions/pane-transition';\nexport { PaneTransitionDirection } from './surface/pane-transitions/pane-transition-direction';\nexport { PaneTransitionFade } from './surface/pane-transitions/pane-transition-fade';\nexport { PaneTransitionNone } from './surface/pane-transitions/pane-transition-none';\nexport { PaneTransitionPush } from './surface/pane-transitions/pane-transition-push';\nexport { PaneTransitionReveal } from './surface/pane-transitions/pane-transition-reveal';\nexport { PaneTransitionSlide } from './surface/pane-transitions/pane-transition-slide';\nexport { PaneTransitionWipe } from './surface/pane-transitions/pane-transition-wipe';\n\nexport { Surface } from './surface/surface';\nexport { SurfaceAnimationFrame } from './surface/surface-animation-frame';\nexport { SurfaceAnimationLayer } from './surface/surface-animation-layer';\nexport { SurfaceAnimationViewController } from './surface/surface-animation-view-controller';\nexport { SurfaceButtonElement } from './surface/surface-button-element';\nexport { SurfaceElement } from './surface/surface-element';\nexport { SurfaceElementStates } from './surface/surface-element-states';\nexport { SurfaceHiddenLayer } from './surface/surface-hidden-layer';\nexport { SurfaceHtmlLayer } from './surface/surface-html-layer';\nexport { SurfaceImageLayer } from './surface/surface-image-layer';\nexport { SurfaceLayer } from './surface/surface-layer';\nexport { SurfacePane } from './surface/surface-pane';\nexport { SurfaceRadioItemSpriteElement } from './surface/surface-radio-item-sprite-element';\nexport { SurfaceRadioItemTextElement } from './surface/surface-radio-item-text-element';\nexport { SurfaceRadioStrip } from './surface/surface-radio-strip';\nexport { SurfaceRadioStripItem } from './surface/surface-radio-strip-item';\nexport { SurfaceRadioStripSelectionArgs } from './surface/surface-radio-strip-selection-args';\nexport { SurfaceRadioStripViewController } from './surface/surface-radio-strip-view-controller';\nexport { SurfaceTextElement } from './surface/surface-text-element';\nexport { SurfaceVideoLayer } from './surface/surface-video-layer';\nexport { SurfaceViewController } from './surface/surface-view-controller';\n\nexport { TransitionRenderer } from './transitions/transitions';\n\nexport { ViewController } from './view/view-controller';\nexport { ViewRenderer } from './view/view-renderer';\n\nconst bitmapResource = BitmapResource.create;\nexport { bitmapResource };\n\nconst color = Color.create;\nexport { color };\n\nconst design = DesignController.initializeTarget;\nexport { design };\n\nconst ellipse = EllipseElement.create;\nexport { ellipse };\n\nconst embeddedTextResource = TextResource.createFromText;\nexport { embeddedTextResource };\n\nconst gradientFillStop = GradientFillStop.create;\nexport { gradientFillStop };\n\nconst image = ImageElement.create;\nexport { image };\n\nconst innerModel = ModelElement.create;\nexport { innerModel };\n\nconst line = LineElement.create;\nexport { line };\n\nconst linearGradientFill = LinearGradientFill.create;\nexport { linearGradientFill };\n\nexport function log(output: string){\n    console.log(output);\n}\n\nconst matrix2D = Matrix2D.create;\nexport { matrix2D };\n\nconst model = Model.create;\nexport { model };\n\nconst modelResource = ModelResource.create;\nexport { modelResource };\n\nconst newId = Utility.guid;\nexport { newId };\n\nconst path = PathElement.create;\nexport { path };\n\nconst point = Point.create;\nexport { point };\n\nconst polygon = PolygonElement.create;\nexport { polygon };\n\nconst polyline = PolylineElement.create;\nexport { polyline };\n\nconst radialGradientFill = RadialGradientFill.create;\nexport { radialGradientFill };\n\nconst rectangle = RectangleElement.create;\nexport { rectangle };\n\nconst region = Region.create;\nexport { region };\n\nconst size = Size.create;\nexport { size };\n\nconst sketcher = Sketcher.create;\nexport { sketcher };\n\nconst sprite = SpriteElement.create;\nexport { sprite };\n\nconst spriteFrame = SpriteFrame.create;\nexport { spriteFrame };\n\nconst text = TextElement.create;\nexport { text };\n\nconst uriTextResource = TextResource.createFromUri;\nexport { uriTextResource };\n\nconst view = ViewController.initializeTarget;\nexport { view };\n\nexport default {\n    BitmapResource: BitmapResource,\n    Color: Color,\n    CommandEventTrigger: CommandEventTrigger,\n    CommonEvent: CommonEvent,\n    Component: Component,\n    ComponentElement: ComponentElement,\n    ComponentEvent: ComponentEvent,\n    ComponentProps: ComponentProps,\n    ComponentRegistry: ComponentRegistry,\n    ControllerEvent: ControllerEvent,\n    ControllerEventArgs: ControllerEventArgs,\n    DesignController: DesignController,\n    DesignRenderer: DesignRenderer,\n    DesignTool: DesignTool,\n    ElementBase: ElementBase,\n    ElementCommand: ElementCommand,\n    ElementCommandHandler: ElementCommandHandler,\n    ElementCommandHandlerRegistration: ElementCommandHandlerRegistration,\n    ElementCreationProps: ElementCreationProps,\n    ElementCreatorRegistration: ElementCreatorRegistration,\n    ElementDragArgs: ElementDragArgs,\n    ElementFactory: ElementFactory,\n    ElementLocationArgs: ElementLocationArgs,\n    ElementMouseEventArgs: ElementMouseEventArgs,\n    ElementSizeArgs: ElementSizeArgs,\n    ElementSizeProps: ElementSizeProps,\n    EllipseElement: EllipseElement,\n    EllipseTool: EllipseTool,\n    ErrorMessages: ErrorMessages,\n    FillFactory: FillFactory,\n    FillInfo: FillInfo,\n    GenericComponentProps: GenericComponentProps,\n    GradientFillStop: GradientFillStop,\n    GridType: GridType,\n    Handle: Handle,\n    HandleFactory: HandleFactory,\n    HandleMovedArgs: HandleMovedArgs,\n    HtmlComponentProps: HtmlComponentProps,\n    ImageBasedComponentProps: ImageBasedComponentProps,\n    ImageElement: ImageElement,\n    ImageElementTool: ImageElementTool,\n    InvalidIndexException: InvalidIndexException,\n    LineElement: LineElement,\n    LineTool: LineTool,\n    LinearGradientFill: LinearGradientFill,\n    LocationArgs: LocationArgs,\n    Logging: Logging,\n    Matrix2D: Matrix2D,\n    Model: Model,\n    ModelElement: ModelElement,\n    ModelElementTool: ModelElementTool,\n    ModelEvent: ModelEvent,\n    ModelResource: ModelResource,\n    MouseEventArgs: MouseEventArgs,\n    MouseLocationArgs: MouseLocationArgs,\n    MousePositionInfo: MousePositionInfo,\n    MoveLocation: MoveLocation,\n    NamedColor: NamedColor,\n    NavigateComponentProps: NavigateComponentProps,\n    PaneTransition: PaneTransition,\n    PaneTransitionDirection: PaneTransitionDirection,\n    PaneTransitionFade: PaneTransitionFade,\n    PaneTransitionNone: PaneTransitionNone,\n    PaneTransitionPush: PaneTransitionPush,\n    PaneTransitionReveal: PaneTransitionReveal,\n    PaneTransitionSlide: PaneTransitionSlide,\n    PaneTransitionWipe: PaneTransitionWipe,\n    PathElement: PathElement,\n    PenTool: PenTool,\n    Point: Point,\n    PointDepth: PointDepth,\n    PointEventParameters: PointEventParameters,\n    PolygonElement: PolygonElement,\n    PolygonTool: PolygonTool,\n    PolylineElement: PolylineElement,\n    PolylineTool: PolylineTool,\n    ProgressRectangle: ProgressRectangle,\n    RadialGradientFill: RadialGradientFill,\n    RectangleElement: RectangleElement,\n    RectangleTool: RectangleTool,\n    Region: Region,\n    ResizeSize: ResizeSize,\n    Resource: Resource,\n    ResourceCreatorRegistration: ResourceCreatorRegistration,\n    ResourceFactory: ResourceFactory,\n    ResourceLoaderState: ResourceLoaderState,\n    ResourceManager: ResourceManager,\n    ResourceManagerEvent: ResourceManagerEvent,\n    ResourceState: ResourceState,\n    ScalingInfo: ScalingInfo,\n    Size: Size,\n    SizeArgs: SizeArgs,\n    Sketcher: Sketcher,\n    SpriteElement: SpriteElement,\n    SpriteFrame: SpriteFrame,\n    SpriteState: SpriteState,\n    StrokeInfo: StrokeInfo,\n    Surface: Surface,\n    SurfaceAnimationFrame: SurfaceAnimationFrame,\n    SurfaceAnimationLayer: SurfaceAnimationLayer,\n    SurfaceAnimationViewController: SurfaceAnimationViewController,\n    SurfaceButtonElement: SurfaceButtonElement,\n    SurfaceElement: SurfaceElement,\n    SurfaceElementStates: SurfaceElementStates,\n    SurfaceHiddenLayer: SurfaceHiddenLayer,\n    SurfaceHtmlLayer: SurfaceHtmlLayer,\n    SurfaceImageLayer: SurfaceImageLayer,\n    SurfaceLayer: SurfaceLayer,\n    SurfacePane: SurfacePane,\n    SurfaceRadioItemSpriteElement: SurfaceRadioItemSpriteElement,\n    SurfaceRadioItemTextElement: SurfaceRadioItemTextElement,\n    SurfaceRadioStrip: SurfaceRadioStrip,\n    SurfaceRadioStripItem: SurfaceRadioStripItem,\n    SurfaceRadioStripSelectionArgs: SurfaceRadioStripSelectionArgs,\n    SurfaceRadioStripViewController: SurfaceRadioStripViewController,\n    SurfaceTextElement: SurfaceTextElement,\n    SurfaceVideoLayer: SurfaceVideoLayer,\n    SurfaceViewController: SurfaceViewController,\n    TextElement: TextElement,\n    TextResource: TextResource,\n    TextTool: TextTool,\n    TimerParameters: TimerParameters,\n    TransitionRenderer: TransitionRenderer,\n    UploadCompletionProps: UploadCompletionProps,\n    UploadComponentProps: UploadComponentProps,\n    UploadProgressProps: UploadProgressProps,\n    Utility: Utility,\n    ViewController: ViewController,\n    ViewDragArgs: ViewDragArgs,\n    ViewRenderer: ViewRenderer,\n    WindingMode: WindingMode,\n\n    bitmapResource: bitmapResource,\n    color: color,\n    design: design,\n    ellipse: ellipse,\n    embeddedTextResource: embeddedTextResource,\n    gradientFillStop: gradientFillStop,\n    image: image,\n    innerModel: innerModel,\n    line: line,\n    linearGradientFill: linearGradientFill,\n    log: log,\n    matrix2D: matrix2D,\n    model: model,\n    modelResource: modelResource,\n    newId: newId,\n    path: path,\n    point: point,\n    polygon: polygon,\n    polyline: polyline,\n    radialGradientFill: radialGradientFill,\n    rectangle: rectangle,\n    region: region,\n    requestAnimationFrame: false,\n    size: size,\n    sketcher: sketcher,\n    sprite: sprite,\n    spriteFrame: spriteFrame,\n    text: text,\n    uriTextResource: uriTextResource,\n    view: view\n};\n"],"sourceRoot":""}